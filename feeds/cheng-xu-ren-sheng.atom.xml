<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Log4D</title><link href="/" rel="alternate"></link><link href="/feeds/cheng-xu-ren-sheng.atom.xml" rel="self"></link><id>/</id><updated>2012-08-16T05:46:00+08:00</updated><entry><title>面试小记</title><link href="/2012/08/interview/" rel="alternate"></link><updated>2012-08-16T05:46:00+08:00</updated><author><name>alswl</name></author><id>tag:,2012-08-16:2012/08/interview/</id><summary type="html">&lt;p&gt;最近在上海找工作面试，这两天就要出结果了。早晨5点多就醒过来，睡不着觉，
那就写篇这段时间面试感觉的小记。&lt;/p&gt;
&lt;h2&gt;选择&lt;/h2&gt;
&lt;p&gt;我在台风「海葵」登录上海那天离开南京，已经约好了几个面试，
这几个团队都是我慎重筛选的。招聘消息来源于各大社区：
&lt;a href="http://python.cn/"&gt;Python-CN 邮件列表&lt;/a&gt; / &lt;a href="http://www.v2ex.com/"&gt;V2EX&lt;/a&gt; /
&lt;a href="http://ruby-china.org/"&gt;Ruby-China&lt;/a&gt; / &lt;a href="http://www.douban.com/group/"&gt;豆瓣小组&lt;/a&gt;。
来源于社区的招聘信息会更靠谱，在社区投递的很有可能是直接主管，而不是人事 HR。
仅仅在 51job 上投放招聘，而不参到社区来的公司，很可能氛围不是那么有活力。&lt;/p&gt;


&lt;p&gt;我尽量避免被分散注意力，只选择自己认可的公司，几乎是清一色创业团队。
个人的精力是有限的，找到最适合自己的是我的核心原则。使用所有手段：「Google /
社区 / 业内人士咨询 / 微博 / 新闻报道」的方法，
来了解自己想去团队的产品和文化。来对比公司理念和自己理念的异同，
自己是否认可一些团队文化，还有创始人和主管的性格和技术取向是否和自己偏差很大。
有些人会觉得这有偷巧之嫌，但在我看来，这是对双方负责的表现。
贸贸然的选择，会浪费双方的时间和精力。&lt;/p&gt;
&lt;p&gt;一个技巧是，可以把自己觉得拿 Offer 可能性大的公司安排在面试前面，
到时候如果拿一个现场 Offer，对自己的信心是一种极大的鼓励。&lt;/p&gt;
&lt;h2&gt;准备&lt;/h2&gt;
&lt;p&gt;面试需要详细的准备，但同时，最长的准备阶段其实是上一份乃至上上份工作历程。
这个不是通过短短几天能够伪造的。优秀的面试官能通过三言两语来轻松判断出面试者
平时的工作状态。简历上的文字，仅仅是让面试官找一些发问的方向，
最大的简历我们一直在书写，也就是面试者本身。&lt;/p&gt;
&lt;p&gt;在日常工作生活中，对周围的事物保持思考的习惯，热忱并负责对待工作职责，
不被当下环境僵化，保持学习和创新的能力，这些才是「简历」中需要准备的东西。&lt;/p&gt;
&lt;p&gt;我喜欢和面试官家常式的聊天，可以放松自己，将自己状态更原生的表现出来。
我不喜欢笔试和智力测试，它们作用是减少面试成本，但也增加了交流的距离。&lt;/p&gt;
&lt;h2&gt;天花板&lt;/h2&gt;
&lt;p&gt;在面试过程中，可能被一些问题问得手足无措，甚至浑身冒冷汗。这其实是好事，
说明自己在面试官的帮助下撞到天花板了。面试官有责任将面试者的能力上限测试出来，
如果没测出来，会无法安排合适的岗位，甚至导致在以后工作中无法发挥面试者的全部能力。&lt;/p&gt;
&lt;p&gt;在碰到天花板时候，我的经验是不要急，尽量老实诚恳地回答。有些面试官不喜欢打太极，
很直接了当，有些面试官则会观察在这种情况下面的应急能力。依据不同的人，
用不同的方式做出诚实的回答。&lt;/p&gt;
&lt;p&gt;能发现自己的天花板或者短板，对成长也是非常有帮助的。
所以面试过程不但是对个人的考验，也是向前辈学习的机会
（好好使用「你有什么问题要问我么？」这个问题），还是对自身进行总结，
对行业进行思考，寻找自己瓶颈的过程。&lt;/p&gt;
&lt;h2&gt;机会&lt;/h2&gt;
&lt;p&gt;在合适的时间，以合适的状态，加入合适的团队，这是我对机会的理解。
个人只能给机会做「状态」准备，而无法改变这种如同命运丝线般的交叉。&lt;/p&gt;
&lt;p&gt;谁都不知道下次有没有更好的机会出现。尝试抓住这种交叉，就是把握住时机了。
然后就是全力以赴，做到最好。&lt;/p&gt;
&lt;p&gt;暂时就想这么多啦，没更多干货了，小菜鸟的上海生活即将开始。&lt;/p&gt;</summary></entry><entry><title>想和做</title><link href="/2012/06/do-and-think/" rel="alternate"></link><updated>2012-06-15T16:02:00+08:00</updated><author><name>alswl</name></author><id>tag:,2012-06-15:2012/06/do-and-think/</id><summary type="html">&lt;p&gt;一年前，我在草稿箱里面写了这篇文章的开头，那时的我正在为工作而烦闷，却一筹莫展。
最近在读《人人都是产品设计师》，其中提到了「产品经理」和「项目经理」的区别，
又引发了我一些思考，我决定把这篇文章重新写完。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;这篇文章准备讨论普通程序员在工作中容易滋生的错误，以及解决的方法。&lt;/p&gt;
&lt;p&gt;传统意义上，大家会提倡「不能光想，还要去做」，即强调行动力的重要性。
而在实际工作中，&lt;strong&gt;大部分人都不缺乏这个行动力，反而缺少对自己工作的思考&lt;/strong&gt;。
比如我为什么要这么做？有没有更优美的办法？能不能通过自动化减少工作强度？
流程是否可以改善？&lt;/p&gt;
&lt;h2&gt;我和产品&lt;/h2&gt;
&lt;p&gt;在聊上面几个问题之前，我先确定一个既有现实：&lt;strong&gt;「每个程序员都曾经是产品经理」&lt;/strong&gt;。
诸位是否还记得当年在学校里面学习时候，应该都做过 XX 管理系统吧，
那时候我们也许单枪匹马，也许结对组团去完成「项目」：获取需求，设计系统和
撰写代码，在这些工作中，我们首先担任的就是产品经理一职。&lt;/p&gt;


&lt;p&gt;我还清晰的记得大二时候我用 SSH 模仿了一个百度贴吧系统，现在看来，也就是个
CRUD 级别的粗糙作品，用 RoR 花几天时间就可以达到那时候两个月的完成度。
虽然粗糙，但那时候我不仅仅是程序员，还负责了整个「产品」的信息架构，
用户体验设计，系统结构设计。
虽然作品很是幼稚，但也充分证明了，我在里面起到的作用远不止程序员。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;那种自己亲手实现的第一个系统的那种欣喜，很久没有过了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PS：我完成这个系统过程中，发现项目进行中的交流不畅，系统的臃肿。
请教老师之后，开始学习《UML 与模式设计》和《重构》，
当时也像模像样地花了一些时间写用例和各种图。&lt;/p&gt;
&lt;h2&gt;残酷的现实&lt;/h2&gt;
&lt;p&gt;工作后，码农们进入自己的工作岗位，按部就班的工作。
很多人开始丧失自己对产品的归属感，这也许和工作环境有关。&lt;/p&gt;
&lt;p&gt;我任职的上一家公司，有一种「代工」模式，上游提出定制任务，下游完成它。
每支任务都是独立的个体，在大产品上进行个性化定制，下游无法看到全貌，
甚至连自己完成的任务，如何在客户那里起作用都无法得知。久而久之，
&lt;strong&gt;必然将自己当作一个代码机器，只知完成任务，而对产品没有归属感&lt;/strong&gt;。
尽管团队建设仍在进行，但是仅有的「团队归属感」还不够。&lt;/p&gt;
&lt;p&gt;有些公司属于项目型公司，特别是中小型公司，领导靠各种办法接到项目订单，
然后项目组立项开始工作。整个项目过程中也有完善的需求分析、系统设计等必要流程，
程序员也能充分或不充分地参与到整个过程中。但项目式开发会存在一次性的问题，
整个项目生命周期很短，最怕出现「能用就行，反正一次开发就完事了」的想法。
这种想法会在&lt;strong&gt;高层只求有钱赚，中层只求维稳，底层只求工资&lt;/strong&gt;时候出现。&lt;/p&gt;
&lt;p&gt;最佳的情况是做产品，尤其是互联网产品，产品生命周期长，快速开发，持续改进，
改进的结果能得到直接的反映。还有比这个更振奋人心的么？
代码的价值可以迅速转变成商业价值。&lt;/p&gt;
&lt;p&gt;几个特征可以反映出程序员开始被「残酷的现实」所征服，即我所说的&lt;strong&gt;只做不想&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不了解同事在做什么：对团队漠不关心&lt;/li&gt;
&lt;li&gt;不看文档就下手：懒，怕麻烦，看现有代码而不追「求最佳实践」&lt;/li&gt;
&lt;li&gt;不尝试使用新技术，害怕引入新特性&lt;/li&gt;
&lt;li&gt;Ctrl + C / Ctrl +V：只知道复制代码，而不进行重构和优化&lt;/li&gt;
&lt;li&gt;字符串拼接：只想尽快完成任务，而不顾代码质量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;出现这些症状时候，团队管理人就需要警惕了，产品的质量会受到严重影响。
我没有在互联网公司干过，所属的行业一直是传统软件公司，
就我周围的情况来看，这种情况出现的频率很高。&lt;/p&gt;
&lt;h2&gt;三观中的价值观&lt;/h2&gt;
&lt;p&gt;既然每个程序员都曾经亲手打造过自己的产品，
那怎么会有人在步入工作岗位后就失去去产品的归属感？
在我看来，这属于三观中的价值观迷失了方向。&lt;/p&gt;
&lt;p&gt;我相信每个人都渴望创造价值，渴望被认同。
我很庆幸我是个程序员，这个职位相比传统的技术人员，更像个艺术家。
我们一直在创造艺术品，用自己的键盘。每每想到自己撰写的代码不仅仅只是代码，
还有更多的商业价值，会被千千万万的用户所使用，内心会涌上一种愉悦。&lt;/p&gt;
&lt;p&gt;工作并不仅仅为了挣钱，还是一种自我价值实现极佳途径，
这种自我实现之后的愉悦程度会远远高于到手的薪水所带来的。
马斯洛人类需求层次中最高级的两种即「尊重」和「自我实现」，
这一切只要靠手中的键盘就可以达成。&lt;/p&gt;
&lt;p&gt;这东西不能多说，多说了就成了向别人灌输「成功学」，还是靠自己慢慢感悟。
但愿大家不要被现实的压力磨平了心中的价值观。
最不济，人总会渴望金钱、渴望成功吧，做好产品，好好工作，就能加薪升职！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;好的产品对我们的帮助会远远大于我们对产品的帮助 - 《人人都是产品经理》&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;怎么做&lt;/h2&gt;
&lt;p&gt;最简单的方法莫过于寻找一个好环境：好老板、好团队、好公司。
老板有眼力、魄力和财力，团队尊重个人、营造团队氛围，
公司虽然最终还是以盈利为目标，但有自己的公司文化。&lt;/p&gt;
&lt;p&gt;这种公司是有的，行业内的 Google / Facebook / Github 都是这种类型的公司。
但这种公司人才筛选极为严格，普通程序员很难进入。&lt;/p&gt;
&lt;p&gt;在与之相反极端的情况下，可以尝试以下的方法，帮助自己进行提升，完善产品：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在自己控制的小范围内做到最好，每人都有自己能够控制的资源，权限大小不同而已。
就算无法影响别人，也要保证自己的产出质量&lt;/li&gt;
&lt;li&gt;尝试影响团队：比如给主管推荐新的技术，发现当前产品问题向相关人员提出，
给团队宣传技术上的最佳实践&lt;/li&gt;
&lt;li&gt;阅读：如果团队无法提供相关培训，就需要自己进行额外的阅读，内容可以是书籍
也可以是网上订阅的信息源（产品论坛、个人博客）&lt;/li&gt;
&lt;li&gt;参与社区项目：很多社区开源项目的质量很高，可以尝试加入他们，
未必是作为程序员加入，也可以是运营、推广、产品设计等等。&lt;/li&gt;
&lt;li&gt;参与本地行业社区活动：线下活动可以开阔自己的视野，结交志同道合的朋友&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;人生短短数十载，Live With Passion。&lt;/p&gt;</summary></entry><entry><title>《开源和自由》幻灯片</title><link href="/2012/05/opensource-and-freedom/" rel="alternate"></link><updated>2012-05-27T19:35:00+08:00</updated><author><name>alswl</name></author><id>tag:,2012-05-27:2012/05/opensource-and-freedom/</id><summary type="html">&lt;p&gt;周末回学校一趟，和几个老同学、老师聚会，然后给学弟学妹们做了一个分享。&lt;/p&gt;
&lt;p&gt;我的主题是《开源与自由》。
为了让同学们不瞌睡，几乎是当一个故事讲的，没太多技术内容。&lt;/p&gt;
&lt;iframe allowfullscreen="" frameborder="0" height="355" marginheight="0" marginwidth="0" scrolling="no" src="http://www.slideshare.net/slideshow/embed_code/13092676" style="border:1px solid #CCC;border-width:1px 1px 0" width="425"&gt;&lt;/iframe&gt;</summary><category term="slideshow"></category><category term="OpenSource"></category></entry><entry><title>ERP叛逃者</title><link href="/2011/04/erp-defectors/" rel="alternate"></link><updated>2011-04-25T00:00:00+08:00</updated><author><name>alswl</name></author><id>tag:,2011-04-25:2011/04/erp-defectors/</id><summary type="html">&lt;p&gt;大四实习时候，跑去驻厂开发，当时主管跟我说"我们做的是企业信息化软件"。毕业之后找工作，进入一家国内还算有名的ERP公司，做ERPII产品（CRM/工作流/
电子商务平台等ERP软件附属产品）的开发和二次开发。&lt;/p&gt;
&lt;p&gt;在这一年半的时间里，我学习了一些行业知识，熟悉了公司自己的开发模式、框架和工具。浑浑噩噩的直到某一天，我发现我写代码没有键盘飞扬的感觉。我惶恐，我感觉我遇到
瓶颈停止成长了。我开始思索我这种状况的产生，我重新翻开曾经看的糊里糊涂的《人月神话》，研读阿朱的《走出软件作坊》，尝试找到问题和解决办法。&lt;/p&gt;
&lt;p&gt;我回想我工作之后做的事情：我负责的是从顾问那里拿到伪SQL+伪代码，然后将它们在公司的框架上面实现起来，再手工完成功能性测试。我做一个极端的假设：如果早50
年，ERP公司给用户提供解决方案可以是在纸上提出，根本不需要电脑。所以ERP的本质是对业务的梳理，规范化的引导，让企业高效整合资源充分发挥产能的公司。这与我
想象的IT公司完全不一样，我所希望的IT公司能够追求极致，创造用户喜欢的，快速响应用户需求，扩展性强的产品。如果具备这些元素，会很快被同类公司超越。&lt;/p&gt;
&lt;p&gt;可是公司立足于市场近30年，绝对不是这么不堪，她有自己的核心竞争力：标准的业务流程，强大的顾问和实施团队，本土化的产品。&lt;/p&gt;
&lt;p&gt;我比较了知名互联网公司、创业型IT公司和传统管理软件行业的区别，惊讶的发现，原来，计算机科学与技术专业毕业的我，不在IT公司，在一家服务咨询公司！！！我把这
个想法和主管进行交流，主管也认同我们提供的是service而不是soft。&lt;/p&gt;
&lt;p&gt;我简单比较了互联网企业和传统行业软件企业的差异。&lt;/p&gt;
&lt;h3&gt;目标人群不一样&lt;/h3&gt;
&lt;p&gt;行业软件：企业用户&lt;/p&gt;
&lt;p&gt;互联网产品：个人用户更多，也有企业用户&lt;/p&gt;
&lt;p&gt;由于给企业用户进行定制，导致内部封闭现象严重，更新周期漫长。另外，企业用户可以强制要求用户使用某种操作方式或者某种环境，比如我就是要让你用IE6，你不用IE
6系统出现问题，那是你的原因。而互联网产品就面对所有网民，必须考虑到标准问题。&lt;/p&gt;
&lt;p&gt;另外，企业用户更换系统平台频率低，系统一旦投入使用，需要经过几年的使用，才会可能考虑更换，其依赖性比互联网产品高出个数量级。由于互联网的开放性，互联网用户很
容易在不同产品之间进行更换。&lt;/p&gt;
&lt;h3&gt;盈利点不一样&lt;/h3&gt;
&lt;p&gt;互联网：吸引用户使用，所以用户体验，速度是需要考虑的，依赖用户使用情况（VIP制度、广告收入）盈利。&lt;/p&gt;
&lt;p&gt;行业软件：卖给产品和服务给用户，功能符合用户需要，顾问实施精准，依赖销售产品+服务盈利。&lt;/p&gt;
&lt;p&gt;盈利点造成行业软件未必会把用户体验、速度这些相对次要的问题放在首位考虑，而是考虑先解决实际问题，满足用户需要。&lt;/p&gt;
&lt;h3&gt;核心竞争力&lt;/h3&gt;
&lt;p&gt;行业软件最依赖的核心竞争力是对某个行业的了解，比如阿朱所在的明源专注于房地产，金蝶用友各有所擅长的行业。并不是他们不想在别的行业挣钱，而是对应行业的顾问极难
培养（行业/领域专家）。&lt;/p&gt;
&lt;p&gt;互联网产品的核心竞争力就更多样化，Web2.0时代可以是用户关系，用户基数（腾讯，现在的人人），也可以是某一款特别大众需要的产品（淘宝，搜索引擎，书签服务）
，又或是核心技术（Google），这些核心竞争力会在发展过程中相互转换，相互渗透。&lt;/p&gt;
&lt;p&gt;互联网产品的特性是快，这个快是表象，本质是在于互联网产品要充分挖掘用户需求，不断满足现有要求，并预测引领用户需求趋势，这也是创新精神具体体现。由于同质化严重
，竞争白热化，导致互联网产品纷纷涌现，给人一种爆炸的感觉。其实，一款好的互联网产品从有创意到磨砺成熟，是需要经过一段还算长的时间的。（除非是搞搞微创新，大家
都知道怎么做，没什么核心竞争力，只是拼模拟速度了）&lt;/p&gt;
&lt;p&gt;我在想清楚这些之后，发现ERP不是我的归宿，互联网才是我追寻的方向。&lt;/p&gt;</summary><category term="ERP"></category></entry><entry><title>没有银弹</title><link href="/2011/02/no-silver-bullet/" rel="alternate"></link><updated>2011-02-25T00:00:00+08:00</updated><author><name>alswl</name></author><id>tag:,2011-02-25:2011/02/no-silver-bullet/</id><summary type="html">&lt;p&gt;最近为工作中和学习中遇到一些问题而发愁，夜不能寐，做梦都在寻求方法。&lt;/p&gt;
&lt;p&gt;问题简单的来说，就是开发过程中遇到很多本觉得不该遇到的问题，比如数据关系在数据表的设计，比如说自动化测试无法接入，ORM接入设计，开发流程如何优化，Web标
准性问题等等。我罗列了大约30条会导致开发效率降低的因素，也一直在思考怎么解决他们，如果让我来设计他们，会用什么方式来提高效率，让系统更优美。&lt;/p&gt;
&lt;p&gt;读完《人月神话》和《走出软件作坊》之后，似乎有了一些明悟。今天wiki到&lt;a href="http://zh.wikipedia.org/zh-
cn/%E6%B2%A1%E6%9C%89%E9%93%B6%E5%BC%B9"&gt;没有银弹&lt;/a&gt;这个话题，我意识到自己太过于追求一步到位了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Brooks 认为，附加性的困难会随着工具的改善而逐渐淡化，反而是本质性的困难最难以解决，因为大部分的活动是发生在人们的脑海里，缺乏有效的辅助工具。依造
Brooks 的说法有下列几项：[2]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;复杂性（complexity）：软件要解决的问题，通常牵扯到计算步骤，这是一种人为、抽象化的智能活动，多半是复杂的。&lt;/p&gt;
&lt;p&gt;不可见性（invisibility）：尚未完成的软件是看不见的，即使利用图示说明，也常无法充分呈现其结构，使得人们在沟通上面临极大的困难。&lt;/p&gt;
&lt;p&gt;协同性（conformity）：在大型软件环境中，各子系统的接口必须协同一致。由于时间和环境的演变，要维持这样的一致性通常十分困难。&lt;/p&gt;
&lt;p&gt;变异性（changeability）：软件所应用的环境常是由人群、法规、硬件设备、应用领域等，各因素所汇集而成，而这些因素皆会快速变化。&lt;/p&gt;
&lt;p&gt;没有银弹这句话大学时候就听过了，作为伪完美主义者，我一直觉得有完美的解决办法。一度认为OO就是解决之道。现在回首来看，的确是没有银弹。&lt;/p&gt;
&lt;p&gt;改变不了大环境，就改变小环境，改变不了小环境，就等待改变的机会~&lt;/p&gt;</summary><category term=""></category></entry><entry><title>一路走来，师恩难忘</title><link href="/2010/08/teachers/" rel="alternate"></link><updated>2010-08-04T00:00:00+08:00</updated><author><name>alswl</name></author><id>tag:,2010-08-04:2010/08/teachers/</id><summary type="html">&lt;p&gt;毕业答辩的最后一天，我以AzaAjaxChat聊天系统完成答辩。在走下答辩桌之后，得知自己成绩是3个优秀，我长嘘一口气，这个成绩终于给自己的大学生活划上了最
后一个比较完美的句号。总算没有对不起自己喜爱的计算机专业。&lt;/p&gt;
&lt;p&gt;晚上是和灵动工作室的同学们、系主任杨老师和工作室负责人孙老师一起聚会的，回来的路上，我一直在想，哪些人在我前进的路上给了我帮助呢？&lt;/p&gt;
&lt;p&gt;晃了晃有喝晕的头，想起那些在我计算机成长路上给了我巨大帮助和前进方向的老师们，回忆起和他们在一起的点点滴滴。&lt;/p&gt;
&lt;h3&gt;高中班主任-老张&lt;/h3&gt;
&lt;p&gt;这是列出来第一个也是唯一一个不是做IT的老师。老张是我高中班主任，典型的陕西人，他老婆也是我英语老师，我一直很难想象身材魁梧的老张怎么骗到娇小的小郭。高中时
候学校管理特别严格，教室里有一台教学用电脑，我仗着自己电脑技术还可以，整天偷偷玩电脑。老张为了不让我玩电脑，甚至放下话说谁逮到我玩电脑，就奖励举报人5块钱。
不过到高考之后也没有人举报我。&lt;/p&gt;
&lt;p&gt;虽然老张对我进行军事管制，不过还是让我参加了江苏省奥林匹克信息比赛，幸运的是，我还拿到一个不错的名次，其实里面很多猫腻，不过培养了我对计算机的浓厚兴趣。（过
几天等我写计算机生涯时候再详细透露）&lt;/p&gt;
&lt;p&gt;今年过年时候，我大年初一就到老张家里拜年，老张也带着他刚2个月的老婆孩子大年初二到我家拜年，老张还提到我当时晚上偷偷去网吧魔兽公测，偷偷用班级电脑下载BT的
事情，我就汗颜了，原来都知道啊～&lt;/p&gt;
&lt;p&gt;祝福老张的孩子健康成长哈，到时候还要喊我哥的～&lt;/p&gt;
&lt;h3&gt;高中计算机老师-徐老师&lt;/h3&gt;
&lt;p&gt;徐老师是高中的计算机老师，上文提到的江苏省奥林匹克信息比赛就是他带着我去参加的。我是不知道其他城市的高中信息化教育普及是什么程度，反正我那时候高中就是教教怎
么用Windows和Word，简单几句VB，而且有一半的计算机课会被数理化等科目强制霸占。私底下认为，这种教育方法泯灭了多少人才啊～&lt;/p&gt;
&lt;p&gt;当时徐老师不光要教学，还负责学校的机器维护，班里电脑出了我解决不了的问题，到了他那里肯定可以解决，当时看到他一手拿着一个硬盘，一手做着Ghost真是崇拜不已
。现在想起来，高中我那会的计算机水平纯粹也就是把玩把玩各种新奇的软件，看《电脑报》看得一头是劲。&lt;/p&gt;
&lt;p&gt;高考填完志愿之后，偶遇徐老师，问我填的什么专业，我如实回答，他叹了一口气。。。唔～～～我至今不知道这口气什么意思～&lt;/p&gt;
&lt;h3&gt;编程启蒙-杨老师&lt;/h3&gt;
&lt;p&gt;杨老师是我们的系主任，上课时候妙语连珠，带过我们3门课，都留下了非常深刻的印象。&lt;/p&gt;
&lt;p&gt;大一入学之后第一门课是计算机基础，就是杨老师带的，当时我上课特别活泼，又喜欢显摆，挺出风头，其实那课也没什么技术含量。真正的编程入门时大一下学期的C++，也
是杨老师教的，印象中对C++的指针非常头疼。真是这门C++帮我打开了走进编程的大门，向我展现了精彩的计算机世界。&lt;/p&gt;
&lt;p&gt;现在想来，同学们以后的方向就在那里开始分叉，我很庆幸杨老师带来精彩的入门，没让我在大一上学期的真三生活中继续堕落下去。这门课从某种程度上拯救了我的大学生活，
甚至是整个人生。&lt;/p&gt;
&lt;p&gt;大三时的系统安全也是杨老师带的，那时候我刚和他完成了一个基于OpenSSL的分级Web服务器，我书写了全部的代码，这门课最高分通过～当时上课上到SSL安全链
路那一章，杨老师都让我上台讲了一会，嘿嘿～&lt;/p&gt;
&lt;p&gt;当时&lt;a href="http://log4d.com/tag/openssl"&gt;很多OpenSSL的资料汇总&lt;/a&gt;，以前在BaiduHi的文章，后来移植过来的。&lt;/p&gt;
&lt;h3&gt;编程/思想-孙老师&lt;/h3&gt;
&lt;p&gt;孙老师也是大学老师，带过离散数学、软件工程和网络编程。离散数学就不提了，我数学上了高中之后就其差无比，勉强才及格。软件工程就给我深深的上了一课。孙老师备课极
为认真而且涉猎范围又广，虽然软件工程课我有时候也昏昏欲睡，但是却帮我换了一种姿态看软件，从PR上升到SD。之所以昏昏欲睡，是因为我当时沉迷于敏捷开发，对面向
过程的软件工程不屑一顾。&lt;/p&gt;
&lt;p&gt;孙老师的网络编程课是在大三时候，这是一门让我能相当得意的课。那年暑假我参加ACM暑期培训，但是到后期我退出ACM转为帮孙老师准备网络编程的课件Demo，以至
于上课时候的那些协议和Socket编程相当熟悉。最让我骄傲的是在我下一届学弟们上这门课时候，孙老师感慨"以前还有alswl听得懂，你们这一届谁听的懂"。&lt;/p&gt;
&lt;p&gt;孙老师最大的贡献是拓展了我的视野，强化了我网络编程能力，并完成了一定的自我价值实现。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://log4d.com/tag/netprogram"&gt;一些零碎的网络编程资料&lt;/a&gt;，当时还在BaiduHi，资料挺乱而且不完全。&lt;/p&gt;
&lt;h3&gt;倪经理&lt;/h3&gt;
&lt;p&gt;我去年年末到今年（2010）在广东待了半年时间，做一个企业信息化的项目。当时完全是作坊式工作，加上属于出差性质，管理有点混乱。技术上面也不能提供发展空间，我
做Java开发，却没有Java项目经理，很多东西甚至要我自己摸索。繁重的工作一度导致我对程序开发有抵触心理。那段时间，我也写了&lt;a href="http
://log4d.com/2010/04/keep-it-work-interest"&gt;保持IT工作兴趣&lt;/a&gt;这样的文章。&lt;/p&gt;
&lt;p&gt;到3月份的时候，倪经理加入了我们，给我带来一个崭新的Java感官。具体细节&lt;a href="http://log4d.com/2010/04
/recent-study-technologys"&gt;最近在学的技术&lt;/a&gt;从可以看出来。&lt;/p&gt;
&lt;p&gt;虽然和倪经理共事的时间不长，但是他在那段极端的日子里面给我很大的帮助，感谢他无私的付出。&lt;/p&gt;
&lt;h3&gt;Last&lt;/h3&gt;
&lt;p&gt;其实还有更多的老师和朋友给了我帮助，比如刘昆老师，初中时候那位计算机老师，现在的同事等等，这里不能一一道明。&lt;/p&gt;
&lt;p&gt;这篇文章一直拖了一个多月，今天看完XDash的&lt;a href="http://www.fanbing.net/my-internet-
career-1.html"&gt;我的互联网生涯（上）&lt;/a&gt;才从BooguNote中拉出完成，真的很对不起诸位老师～&lt;/p&gt;</summary><category term=""></category></entry><entry><title>保持IT工作兴趣</title><link href="/2010/04/keep-it-work-interest/" rel="alternate"></link><updated>2010-04-24T00:00:00+08:00</updated><author><name>alswl</name></author><id>tag:,2010-04-24:2010/04/keep-it-work-interest/</id><summary type="html">&lt;p&gt;&lt;img alt="" src="http://upload-log4d.qiniudn.com/2010/04/keyboard_help.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;参加工作4个月以来，我完成了由学校人到社会人的转变，成为了一名光荣的码农。但是在长时间的工作和加班中，带来一些烦躁的情绪，特别是在项目比较紧张、客户又催的急
，很容易对电脑产生"反胃"的感觉，完全没了在学校那时候一个晚上通宵编程都依然兴奋的感觉。&lt;/p&gt;
&lt;p&gt;又或者与某某朋友一比较，人家轻轻松松赚很多钱，而自己拿着可怜的几个工资，就容易心理不平衡，成天抱怨，搞不好成为马加爵v2了。&lt;/p&gt;
&lt;p&gt;前段时间我也遇到了上文描述的状态，整天没有精神，看到Bug就头疼。我努力尝试着脱离这种状态，进行了一系列的尝试，现在就和大家分享一下。下面是我稍微总结的一些
方法。&lt;/p&gt;
&lt;p&gt;ps:我还是一名未毕业的学生，受个人阅历和学识限制，只是一些心得分享，未必适合每个人。从业几年的大牛们就可以直接忽略了。&lt;/p&gt;
&lt;h2&gt;一、 寻找朋友&lt;/h2&gt;
&lt;p&gt;关注同龄的佼佼者，找到志同道合的人，无论是行业的大牛，还是刚出道的小朋友，都有很多值得自己学习的地方。通过交流，一方面让自己明白差距，从而产生动力，另一方面
能够关注别人关注的内容，扩大自己的知识面和眼界，补充一些其他领域的知识。&lt;/p&gt;
&lt;p&gt;建立博客的童鞋，大抵都是愿意输出价值并分享的人。&lt;/p&gt;
&lt;p&gt;下面我分享一下我Google Reader 里面标记为同龄人的个人博客。&lt;/p&gt;
&lt;h3&gt;1. [刘未鹏 | Mind Hacks&lt;/h3&gt;
&lt;p&gt;](http://mindhacks.cn/)&lt;/p&gt;
&lt;p&gt;这是绝对要放到第一个的，虽然我昨天才知道他的博客。&lt;/p&gt;
&lt;p&gt;他原来的博客是 &lt;a href="http://blog.csdn.net/pongba"&gt;刘未鹏|C++的罗浮宫 - CSDN博客&lt;/a&gt;，在CSDN众多大牛中排名17，拥有共
1747591次访问，可想而知有多大的影响力和个人魅力。&lt;/p&gt;
&lt;p&gt;他建立的Google Group:
&lt;a href="https://groups.google.com/group/pongba"&gt;TopLanguage&lt;/a&gt;，一个很有活力的讨论社区。&lt;/p&gt;
&lt;p&gt;他研究的方向虽然是C++和一些算法，但是博客里还有很多思想的方法，甚至在一定程度上把哲学和算法联系到一起，这让我惊为天人。&lt;/p&gt;
&lt;h3&gt;2. XDash&lt;/h3&gt;
&lt;p&gt;一位设计专业的Geek，&lt;a href="http://www.syncoo.com"&gt;同步控&lt;/a&gt;的创建者。我一直搞不懂高艺术的怎么和计算机扯上关系了，后来才发现他高中时候就
搞编程了。&lt;/p&gt;
&lt;h3&gt;3. Lightory&lt;/h3&gt;
&lt;p&gt;南大小百合成员，前段设计强人，BooguNote就是从他那里获知的。&lt;/p&gt;
&lt;h3&gt;4. &lt;a href="http://blog.boluotou.com/"&gt;圆木菠萝罐&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;经常对软件工程进行一些系统的思考，每次阅读完他的文章，都受益匪浅。&lt;/p&gt;
&lt;h3&gt;5. &lt;a href="http://zou.lu/"&gt;Showfom's Blog&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个很真实很有趣的IT潮人。&lt;/p&gt;
&lt;h3&gt;6. &lt;a href="http://leeiio.me/"&gt;Leeiio™ Chaos Made.&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;前端设计师，他的主题我非常欣赏。&lt;/p&gt;
&lt;h3&gt;7. &lt;a href="http://www.happinesz.cn/"&gt;幸福收藏夹&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;sofish，应该很多人知道吧，不用多介绍了，前段设计师，貌似就职于腾讯。&lt;/p&gt;
&lt;h3&gt;8. &lt;a href="http://www.evlos.org/"&gt;邪罗刹的菠萝阁&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;后生可畏，PHP达人，我之前的一个正则表达式的零宽断言还是他帮我解决的。&lt;/p&gt;
&lt;h2&gt;二、 发掘新奇的软件和工具&lt;/h2&gt;
&lt;p&gt;发掘新奇的软件和工具，特别是一些新奇的工具，提供工作效率，保持对工作的兴趣，享受创造价值的乐趣。这些工具不一定需要是开发中需要用到的工具，也可以是一些其他工
具，比如说理财，又或是GTD工具，对他们进行适当的研究和创造，给自己创造价值，并分享传播价值，得到别人的认可。&lt;/p&gt;
&lt;p&gt;下面是最近我折腾的一些工具，可以参考一下哈，估计码农们应该都略有涉及 ^_^&lt;/p&gt;
&lt;h3&gt;1. BooguNote&lt;/h3&gt;
&lt;p&gt;BooguNote是一款收集和整理信息的新概念工具。&lt;/p&gt;
&lt;p&gt;[BooguStudio - Collecting, Organizing and Sharing&lt;/p&gt;
&lt;p&gt;](http://boogu.me/)&lt;/p&gt;
&lt;p&gt;[桌面记录神器-BooguNote - Log4D&lt;/p&gt;
&lt;p&gt;](http://log4d.com/2010/04/desktop-recording-tool-boogunote)&lt;/p&gt;
&lt;h3&gt;3. Mockups&lt;/h3&gt;
&lt;p&gt;Mockups是一款UI设计工具，提供了 9 大类共 50 多个控件，涵盖了几乎所有常用的 UI 控件。不管是桌面软件、手机软件还是 Web
站点，都能搞定。平时没事干，涂鸦也可以，画风非常不错哦～&lt;/p&gt;
&lt;p&gt;[Balsamiq Mockups For Desktop | Balsamiq&lt;/p&gt;
&lt;p&gt;](http://www.balsamiq.com/products/mockups/desktop)&lt;/p&gt;
&lt;p&gt;[界面设计利器-Balsamiq Mockups - Log4D&lt;/p&gt;
&lt;p&gt;](http://log4d.com/2010/04/ui-design-tool-balsamiq-mockups)&lt;/p&gt;
&lt;h3&gt;4. Aptana&lt;/h3&gt;
&lt;p&gt;Web开发人员一定非常喜欢的工具，和Eclipse双剑合璧，提高好多工作效率。非常喜欢他的格式化～&lt;/p&gt;
&lt;p&gt;[Web开发利器-Aptana&lt;/p&gt;
&lt;p&gt;](http://log4d.com/2010/04/web-development-tool-aptana)&lt;/p&gt;
&lt;h3&gt;5. AutoHotKey&lt;/h3&gt;
&lt;p&gt;大名鼎鼎的AHK，一直听说，一直没去折腾，最近抽了点时间用了一下，奇爽无比啊，很多自定义键都把我Google 输入法中的lua 代码编写的功能都替换了。&lt;/p&gt;
&lt;h3&gt;Last.&lt;/h3&gt;
&lt;p&gt;最后，给大家分享一个非常不错的站点，提供大量的免费绿色的犀利软件。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.appinn.com"&gt;小众软件&lt;/a&gt;[-分享免费 小巧 实用 有趣 绿色的软件&lt;/p&gt;
&lt;p&gt;](http://www.appinn.com)&lt;/p&gt;
&lt;h2&gt;三、 发掘一些新的技术&lt;/h2&gt;
&lt;p&gt;给自己建立一个WorkSpace，做一些和行业相关而却和和领域无关的事情。对我而言，比如熟悉一下UI设计、自动化测试工具、ORM系统、Python、Java
EE一些新技术。&lt;/p&gt;
&lt;p&gt;所谓和领域无关，就是说别把自己的目光限定在那一亩三分地上，做企业信息化软件的可以去看看Web前端设计，做Web
前端设计的可以去看看数据库优化，做数据库优化的可以看看一些脚本语言。总之，扩大自己的知识面，全方位把握行业脉搏。&lt;/p&gt;
&lt;p&gt;参看我的 &lt;a href="http://log4d.com/2010/04/recent-study-technologys"&gt;最近在学的技术&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;四、 跟进新技术发展&lt;/h2&gt;
&lt;p&gt;技术这东西是永不止歇的发展，跟进当前主流的技术非常重要。&lt;/p&gt;
&lt;p&gt;个人需要把握一个度，既能跟进技术又能不至于花太多的精力去大范围深入研究，做到知识面博而专精。&lt;/p&gt;
&lt;p&gt;推荐几个我常去的几个地方。&lt;/p&gt;
&lt;h3&gt;[JavaEye&lt;/h3&gt;
&lt;p&gt;](http://www.javaeye.com/)&lt;/p&gt;
&lt;p&gt;虽然名字是JavaEye，但是关注的内容早已超出了Java的范畴，而且相对而言，里面的文章内容质量还是挺高的（CSDN的.aspx效率太差了，而且闲杂人员很
多）&lt;/p&gt;
&lt;h3&gt;[cnBeta&lt;/h3&gt;
&lt;p&gt;](http://www.cnbeta.com/)&lt;/p&gt;
&lt;p&gt;cnBeta是国内业界第一资讯网络，有很多新鲜的科技和业界技术产品趋势走向报告。&lt;/p&gt;
&lt;p&gt;另外，里面有相当多的犀利评论***&lt;/p&gt;
&lt;h2&gt;五、 建立自己的根据地，输出自己的价值&lt;/h2&gt;
&lt;p&gt;总的来说，我认为这种职业焦虑症更多的是因为精神上获取无法满足自己。所以解决之道就是创造信心，获得认可（让我想起了鸣人～）。&lt;/p&gt;
&lt;p&gt;在这个Web 2.0的时代，博客是一个相当不错的展示自己价值的地方，用Google Reader订阅他人的价值观，输出自己的价值，在分享的同时也加强了交流，
提升了自己的网络品牌价值。按期更新博客，也能对自己所学的东西进行归纳总结，起到一个监督作用。&lt;/p&gt;
&lt;h2&gt;Last Last&lt;/h2&gt;
&lt;p&gt;最后的最后说明一点，其实有时候不是因为我们主观上不够努力，而是某些客观原因达不到我们的期望值，比如项目因素，公司因素，生活环境因素，那就不在本文的讨论范围之
内了，这需要和决策制定者进行更多的沟通和协调。&lt;/p&gt;
&lt;p&gt;希望大家过得开心，提高自己的生活质量，不让工作把自己的兴趣磨灭，而是要保持兴趣从而快乐的工作。&lt;/p&gt;
&lt;p&gt;后天回南京咯，然后可以回学校了，哇咔咔～兴奋嘞～&lt;/p&gt;</summary><category term=""></category></entry><entry><title>程序员责任很重</title><link href="/2010/02/programmer-a-heavy-responsibility/" rel="alternate"></link><updated>2010-02-03T00:00:00+08:00</updated><author><name>alswl</name></author><id>tag:,2010-02-03:2010/02/programmer-a-heavy-responsibility/</id><summary type="html">&lt;p&gt;昨天项目第一天上线，早晨我7：30就到了会议室，和同事们奔赴生产线。&lt;/p&gt;
&lt;p&gt;虽然之前已经在车间参观过，可一圈跑下来，还是发现车间好大，跑的腰酸背疼，汗流浃背。&lt;/p&gt;
&lt;p&gt;新系统上线，不可避免的出现一些意料之外的问题，生产线是不能停的，所以会出现成品堆压的问题，工人很是恼火，我还要耐心的做工作。&lt;/p&gt;
&lt;p&gt;看到生产线上繁忙的工人，我突然意识到自己的工作是多么伟大，好的产品将减轻他们的工作量，提高他们的效率，劣质的产品会给他们带来劳动量的增加和经济的损失。我感觉
自己肩膀的责任沉甸甸的。&lt;/p&gt;
&lt;p&gt;现在现在最怕我手机唱"从来就没有什么救世主"的音乐，就意味着生产线出问题了……&lt;/p&gt;
&lt;p&gt;恩～顺便推荐一下我的铃声，是《我是MT》的主题曲"地狱咆哮的挽歌"和"我叫MT"片头曲，很激昂的音乐哦～&lt;/p&gt;</summary><category term=""></category></entry><entry><title>由学Python所想到的</title><link href="/2009/09/python-comes-to-mind-by-learning/" rel="alternate"></link><updated>2009-09-25T00:00:00+08:00</updated><author><name>alswl</name></author><id>tag:,2009-09-25:2009/09/python-comes-to-mind-by-learning/</id><summary type="html">&lt;p&gt;开始学Python大概有1个多月了，深深的被这门简单的语言所吸引着，简单却强大，是一门非常精彩的语言。特别是它的设计理念：「在允许性能牺牲的范围内，提高开发
效率，简化开发方法」。（呃…这个原文我找不到了，我自己总结了一下）&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.python.org/images/python-logo.gif"&gt;&lt;img alt="" src="http://www.python.org/images/python-" title="logo.gif" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;细细数来，我现在掌握的语言应该有C++, Java, C#, Asp, Asp.Net,
Python，我所说的掌握并不是具体到多细节，而是自己大概知道怎么去用，如果给我一本Manual，也能大概也一个小型的软件。&lt;/p&gt;
&lt;p&gt;我以前经常和学弟学妹们说「语言不是问题」，当时面对的是学弟们对Java,
.NET两大体系的选择。如果现在再让我对语言进行选择，我就会慎重的多了。在公司一个半月的实习后，我越来越觉得「语法不是问题，语言跨越是个问题」。&lt;/p&gt;
&lt;p&gt;之所以说语法不是问题，是因为我觉得如果掌握了C/C++之后，其他的主流语言的语法都应该能够在短时期内学会，毕竟思想是相同的，只需要手头有一本Manual。特
别是Java/.NET，双方语法上面相似度，有时候看某一片代码段就分辨不出来。&lt;/p&gt;
&lt;p&gt;我觉得语言的跨度在开发系统的架构上面，比如JavaEE和Asp.NET开发模式上面有很多东西完全不同，Python作为一门解释性语言跟C/C++相比也有很多
的区别（我很喜欢Python的动态执行，调试太爽了，完全没有内存报错啥的），这时候就显示出语言的不同。&lt;/p&gt;
&lt;p&gt;我不建议计算机专业新手学习Python，如果没有一点扎实的语言功底，会被这门强大的语言带坏的。还是用C来做ACM的题目能够长进一些。&lt;/p&gt;
&lt;p&gt;唔，一家之言，贻笑大方了```&lt;/p&gt;</summary><category term=""></category></entry><entry><title>方向</title><link href="/2009/08/direction/" rel="alternate"></link><updated>2009-08-31T00:00:00+08:00</updated><author><name>alswl</name></author><id>tag:,2009-08-31:2009/08/direction/</id><summary type="html">&lt;p&gt;系主任在QQ上面的一句话：「没有方向的船，速度再快也抵达不了目的地」。我现在就是这么一条没有方向的船。&lt;/p&gt;
&lt;p&gt;一直以来，我都能为自己规划一个阶段性的目标：大二时候在学生会做工作，花了很多时间在网络编程和MFC上面；大三上学期开始Java，做了一个小项目，赚了人生的第
一桶金；下学期做一个SSL VPN的项目，自己挣扎了一个月，不过学到很多东西，之后又开始用Strut2+Hibernate完成了一个贴吧系统，虽然简陋，但是
受益匪浅；大四的这个暑假虽然北京CSDN之行泡汤了，但在实习的公司开始做.NET方向项目，熟悉了公司的流程，学会了.NET一些开发步骤。&lt;/p&gt;
&lt;p&gt;现在开学了，出于种种理由，我应该不会在实习的这家公司继续做下去。这样一来，我拥有了将近2个月的空余时间，直到11月份去找工作。如何有效的分配这两个月，成为我
的难题。&lt;/p&gt;
&lt;p&gt;现在对技术似乎缺乏一种激情，再没有大二时候写程序能一边说服自己早点睡吧，一边在床上写到凌晨4点那种对代码的渴望。我开始把自己往设计上面放，阅读一些这类相关书
籍，但是我又深切得体会到自己的经验和学识完全不能提供一个完整的设计方案。这让我为自己感到沮丧。&lt;/p&gt;
&lt;p&gt;我的精力分配的也过于分散，网络编程、MFC、JaveEE、.NET都略有涉及，但是都不是很精通。我以前的观点是在大学期间，应该涉猎广泛，但是现在越发感觉到自
己精力不足。之前答应和一个老师做一个机房控制系统，基于MFC的，涉及的东西很多，我刚跟老师解释了一下，这个项目交给别人：我在B/S上面已经花了很多时间，不能
再切换到C/S上花大段时间了。&lt;/p&gt;
&lt;p&gt;想的我头疼，我考虑了一下，先去花一个月时间考驾照吧，这东西工作之后就完全没时间了（真的，我实习时候就感觉精力已经不足了，周末想睡觉还来不及，哪来时间考驾照）
。&lt;/p&gt;
&lt;p&gt;ps:最近开学，事情比较多，更新不勤快。&lt;/p&gt;
&lt;p&gt;谢谢关注~~&lt;/p&gt;</summary><category term=""></category></entry><entry><title>我的简历</title><link href="/2009/07/my-cv/" rel="alternate"></link><updated>2009-07-25T00:00:00+08:00</updated><author><name>alswl</name></author><id>tag:,2009-07-25:2009/07/my-cv/</id><summary type="html">&lt;p&gt;明天准备去找单位实习，今天急急忙忙把简历赶出来了，各位大大看了帮忙拍拍&lt;/p&gt;
&lt;p&gt;没有任何水分，内行也能看出来，虽然有两张纸，但是技术含量真的不高~~~&lt;/p&gt;
&lt;p&gt;明天早晨联系老师，问问推荐信的事，然后再联系公司…&lt;/p&gt;
&lt;p&gt;第一次唉，有点兴奋，还有点害怕~&lt;/p&gt;
&lt;p&gt;北京反正去不了了，最后一个暑假了，fighting!&lt;/p&gt;
&lt;p&gt;XXX个人简历&lt;/p&gt;
&lt;p&gt;基本信息&lt;/p&gt;
&lt;p&gt;姓名：&lt;/p&gt;
&lt;p&gt;XXX&lt;/p&gt;
&lt;p&gt;性别：&lt;/p&gt;
&lt;p&gt;男&lt;/p&gt;
&lt;p&gt;Email:&lt;/p&gt;
&lt;p&gt;XXX&lt;/p&gt;
&lt;p&gt;手机：&lt;/p&gt;
&lt;p&gt;XXX&lt;/p&gt;
&lt;p&gt;个人网站：&lt;/p&gt;
&lt;p&gt;&lt;a href="../../../../../"&gt;http://log4d.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;工作经历：&lt;/p&gt;
&lt;p&gt;无&lt;/p&gt;
&lt;p&gt;出生日期：&lt;/p&gt;
&lt;p&gt;XXX&lt;/p&gt;
&lt;p&gt;学历：&lt;/p&gt;
&lt;p&gt;本科&lt;/p&gt;
&lt;p&gt;求职意向：&lt;/p&gt;
&lt;p&gt;程序员&lt;/p&gt;
&lt;p&gt;居住地：&lt;/p&gt;
&lt;p&gt;XXX&lt;/p&gt;
&lt;p&gt;自我评价&lt;/p&gt;
&lt;p&gt;本人对编程充满激情，自学能力、接受能力较强，能在短时间内接受新的知识，补充原有知识体系框架。有较强分析问题、解决问题能力。坚信「技术改变世界，创新驱动中国」
。&lt;/p&gt;
&lt;p&gt;IT技能与语言&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Java良好&lt;/li&gt;
&lt;li&gt;C#良好&lt;/li&gt;
&lt;li&gt;C/C++良好&lt;/li&gt;
&lt;li&gt;网络编程良好，熟悉OpenSSL/WinPcap/Socket&lt;/li&gt;
&lt;li&gt;开源框架Struts2/Hibernate良好&lt;/li&gt;
&lt;li&gt;Html/CSS良好&lt;/li&gt;
&lt;li&gt;JavaScript/AJAX/jQuery良好&lt;/li&gt;
&lt;li&gt;MySQL/SQLServer一般&lt;/li&gt;
&lt;li&gt;敏捷开发/UML一般&lt;/li&gt;
&lt;li&gt;项目管理/设计模式一般&lt;/li&gt;
&lt;li&gt;软件测试一般&lt;/li&gt;
&lt;li&gt;英语一般&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;项目经验&lt;/p&gt;
&lt;p&gt;贴吧系统（2009年4月至今）&lt;/p&gt;
&lt;p&gt;l        基于Struts2/Hibernate的开放式系统&lt;/p&gt;
&lt;p&gt;l        采用敏捷过程开发，有相应的文档制品&lt;/p&gt;
&lt;p&gt;l        本人独立完成0.1版本开发，之后采用结对编程方式进行重构，本人负责系统结构设计、UML设计和页面设计，不参与Java编码&lt;/p&gt;
&lt;p&gt;l        使用了OGNL, Ajax, jQuery, SVN相关技术&lt;/p&gt;
&lt;p&gt;l        使用MVC模型&lt;/p&gt;
&lt;p&gt;l        项目托管于Google Code，准备持续开发&lt;/p&gt;
&lt;p&gt;l
相关链接：&lt;a href="http://code.google.com/p/postbar/"&gt;http://code.google.com/p/postbar/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;基于OpenSSL的按需分级加密SSL VPN网关（2009年3月-2009年4月）&lt;/p&gt;
&lt;p&gt;l        参与老师课题研究，负责模型制作与测试&lt;/p&gt;
&lt;p&gt;l        使用第三方开源库OpenSSL，实现一个小型支持HTTPS的Web服务器&lt;/p&gt;
&lt;p&gt;l        实现了Http服务、安全握手、文件传输、身份认证、内容认证模块。&lt;/p&gt;
&lt;p&gt;l        相关链接：&lt;a href="../../../../../categ
ory/i_programer/ssl"&gt;http://log4d.com/category/i_programer/ssl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;XXX职业培训中心网站（2008年12月-2009年1月）&lt;/p&gt;
&lt;p&gt;l        基于ASP的小型企业网站&lt;/p&gt;
&lt;p&gt;l        自学了Html, CSS相关知识，本人专业方向没有ASP课程和Html相关课程&lt;/p&gt;
&lt;p&gt;l        负责界面层和部分逻辑层代码&lt;/p&gt;
&lt;p&gt;l        相关链接：XXX&lt;/p&gt;
&lt;p&gt;XXX计算机系网站（2009年5月）&lt;/p&gt;
&lt;p&gt;l        对原有系统进行重构和美化&lt;/p&gt;
&lt;p&gt;l        短时间内完成并交付使用&lt;/p&gt;
&lt;p&gt;l        相关链接：XXX&lt;/p&gt;
&lt;p&gt;网络编程小作品（2008年8月-2008年12月）&lt;/p&gt;
&lt;p&gt;l        白防火墙（只允许某些ip通过的防火墙，整合于机房考试系统）&lt;/p&gt;
&lt;p&gt;l        Tcp局域网端口扫描系统&lt;/p&gt;
&lt;p&gt;l        ARP欺骗程序&lt;/p&gt;
&lt;p&gt;l        基于Java的校内刷人气程序&lt;/p&gt;
&lt;p&gt;l        相关链接：&lt;a href="../../../../../categ
ory/i_programer/net"&gt;http://log4d.com/category/i_programer/net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;基于C#的聊天室系统（2008年6月-2008年7月）&lt;/p&gt;
&lt;p&gt;l        采用C#进行开发，实现了基于socket的C/S模式的聊天室系统，实现用户管理、私聊、群聊、自定义图片、抖动窗口功能。&lt;/p&gt;
&lt;p&gt;l        采用数据服务器/聊天服务器两层服务器设计&lt;/p&gt;
&lt;p&gt;l        独自完成设计、编码，自学socket相关知识，当时还未开《网络程序设计》这门课程&lt;/p&gt;
&lt;p&gt;l        阅读了大量英文资料，学习使用第三方库文件操作RTF格式文档&lt;/p&gt;
&lt;p&gt;教育背景&lt;/p&gt;
&lt;p&gt;2006年9月至今  XXX计算机系&lt;/p&gt;
&lt;p&gt;主修课程：软件设计环境（C#） 97，计算机系统安全 97，数据库原理 90， 网络程序设计 92，网络工程 94， 大型数据库应用 91，
网络攻防技术与工具 98&lt;/p&gt;
&lt;p&gt;软件课程设计均为优秀&lt;/p&gt;
&lt;p&gt;获奖情况&lt;/p&gt;
&lt;p&gt;2009年6月软件设计师认证&lt;/p&gt;
&lt;p&gt;2008-2009年度优秀团员&lt;/p&gt;
&lt;p&gt;2007-2008年度优秀学生会（社团）干部（担任学生会宣传部部长）&lt;/p&gt;
&lt;p&gt;2007-2008年度优秀学生会干部二等奖（担任班级学习委员）&lt;/p&gt;
&lt;p&gt;2007-2008年度学习进步奖（三等奖学金）&lt;/p&gt;
&lt;p&gt;2008年第五届XX数学建模联赛成功参赛奖&lt;/p&gt;
&lt;p&gt;2008年XXX团委学生会院标设计大赛三等奖&lt;/p&gt;
&lt;p&gt;2008年5XXX大学ACM编程大赛三等奖&lt;/p&gt;
&lt;p&gt;2007年12月XXX大学第二届数学建模竞赛一等奖&lt;/p&gt;
&lt;p&gt;2007年12月XXX大学科技文化节装机大赛三等奖&lt;/p&gt;</summary><category term=""></category></entry><entry><title>成功软件技术人员的性格特质【转】</title><link href="/2009/07/the-success-of-software-technical-personnel-to-the-personality-trait/" rel="alternate"></link><updated>2009-07-04T00:00:00+08:00</updated><author><name>alswl</name></author><id>tag:,2009-07-04:2009/07/the-success-of-software-technical-personnel-to-the-personality-trait/</id><summary type="html">&lt;p&gt;原文作者：施文祥&lt;/p&gt;
&lt;p&gt;节选自：《程序员》&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自学精神&lt;/li&gt;
&lt;li&gt;吃苦耐劳&lt;/li&gt;
&lt;li&gt;良好的人际关系&lt;/li&gt;
&lt;li&gt;面对挫折的能力&lt;/li&gt;
&lt;li&gt;接受不同意见&lt;/li&gt;
&lt;li&gt;认真仔细&lt;/li&gt;
&lt;li&gt;荣誉感&lt;/li&gt;
&lt;li&gt;思而后行&lt;/li&gt;
&lt;/ol&gt;</summary><category term=""></category></entry><entry><title>高端视点</title><link href="/2009/02/e9-ab-98-e7-ab-af-e8-a7-86-e7-82-b9/" rel="alternate"></link><updated>2009-02-28T00:00:00+08:00</updated><author><name>alswl</name></author><id>tag:,2009-02-28:2009/02/e9-ab-98-e7-ab-af-e8-a7-86-e7-82-b9/</id><summary type="html">&lt;p&gt;大一时候就接触了《程序员》这本杂志，不过当时眼界很浅，浮光掠影的看了一点，觉得都是业界信息，对自己没什么用处。 今年开学后，忙忙碌碌的过了一学期，忙着jav
a和j2ee的网络学习，ssl的开发，还得边带着学linux，很是吃力，但想到9个月后就要找工作了，不得不逼着自己去做。以至于宿舍的同学都看不到我，电脑也一
个星期没回宿舍，都扔在工作室了。 忙碌的生活让我很不适应，不知道自己投资的方向是不是正确的。正在我烦恼的时刻，《程序员》中一篇文章《最具挑战的经济形势，最具
机遇的时代》，出自微软亚洲研究院院长洪小文之手，彻底坚定了我的信心。 《双城记》中说it was the worst of times， it was
also the best of times。 ps：高端视点是指大大们的视点，不是我的…&lt;/p&gt;</summary><category term=""></category></entry><entry><title>爱上艺术，爱上侯捷</title><link href="/2008/12/falling-in-love-with-the-art-of-falling-in-love-with-hou-jie/" rel="alternate"></link><updated>2008-12-28T00:00:00+08:00</updated><author><name>alswl</name></author><id>tag:,2008-12-28:2008/12/falling-in-love-with-the-art-of-falling-in-love-with-hou-jie/</id><summary type="html">&lt;p&gt;初识侯捷是因为那本在Windows编程环境下面的巨作《深入浅出MFC》，尽管是96年前后写的书，依然给我在思想和技术上带来了很大的震撼和飞跃。可惜最近忙于A
SP网站的建设和繁重的考试，把那本书放下了。&lt;/p&gt;
&lt;p&gt;为了硬件设计的论文，我花了很多心思在Word排版上，图书馆的书翻了好多，都没有针对长文档排版的书，Sybex的《Office商务排版》也不合我心意，尽管最后
在网上找到了微软客户帮助与支持中心的两篇颇有分量的文字，但是依然没能解我心头之痒。&lt;/p&gt;
&lt;p&gt;百度"Word排版 图片"时候，意外看到"Word排版的艺术"这个标签，点进去，居然是一本书，书名似乎很合我的胃口，狗狗一下，下了下来。&lt;/p&gt;
&lt;p&gt;打开一看，居然是侯捷的，侯捷？莫非是这个侯捷，往下翻阅完序，熟悉的文笔跃然纸上，果然是侯捷。&lt;/p&gt;
&lt;p&gt;序最后一段写到："...虽然我不知道多少人需要这样一本论述Word高级议题的书，虽然我不知道真正需要这种书的人能否看到这本书...管他呢，生命留下足迹，不枉
一遭！"&lt;/p&gt;
&lt;p&gt;好一个侯捷&lt;/p&gt;
&lt;p&gt;我不敢说和侯捷这种Program大家有相同层次的想法，可是，从《深入浅出MFC》到《Word排版艺术》，侯捷真的征服了我&lt;/p&gt;
&lt;p&gt;因为侯捷这几句话，我知道我人生有了第一个偶像，侯捷。&lt;/p&gt;</summary><category term=""></category></entry><entry><title>爱上ta</title><link href="/2008/04/love-ta/" rel="alternate"></link><updated>2008-04-12T00:00:00+08:00</updated><author><name>alswl</name></author><id>tag:,2008-04-12:2008/04/love-ta/</id><summary type="html">&lt;p&gt;本文乃08-09校内日志存档，我一起给发布了，如果给大家阅读造成困难，我深感抱歉```&lt;/p&gt;
&lt;p&gt;爱上程序员，为自己是程序员而骄傲。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我们在编织这个世界，我们促进了世界以成百倍上千倍的速度在进步，我们几乎可以成为激情，创意，技术的代名词。我们是最强的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为自己是程序员而骄傲自豪着。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;程序员&lt;/p&gt;
&lt;p&gt;程序员(英文Programmer)是从事程序开发、维护的专业人员。一般我们将程序员分为程序设计人员和程序编码员，但两者的界限并不非常清楚，特别是在中国。&lt;/p&gt;
&lt;p&gt;作一个真正合格的程序员，应该具有的素质。&lt;/p&gt;
&lt;h3&gt;1：团队精神和协作能力&lt;/h3&gt;
&lt;p&gt;团 队精神和协作能力是作为一个程序员应具备的最基本的素质。软件工程已经提了将近三十年了，当今的软件开发已经不是编程了，而是工程。独行侠可以写一些程序
也能赚钱发财，但是进入研发团队，从事商业化和产品化的开发任务，就必须具备这种素质。可以毫不夸张的说这种素质是一个程序员乃至一个团队的安身立命之 本。&lt;/p&gt;
&lt;h3&gt;2：文档习惯&lt;/h3&gt;
&lt;p&gt;文档是一个软件系统的生命力。一个公司的产品再好、技术含量再高，如果没有缺乏文档，知识就没有继承，公司还是一个来料加工的软件作坊。作为代码程序员，必须将30％
的工作时间写用于技术文档。没有文档的程序员势必会被淘汰。&lt;/p&gt;
&lt;h3&gt;3：规范化的代码编写习惯&lt;/h3&gt;
&lt;p&gt;知名软件公司的代码的变量命名、注释格式，甚至嵌套中行缩进的长度和函数间的空行数字都有明确规定，良好的编写习惯，不但有助于代码的移植和纠错，也有助于不同技术人
员之间的协作。 一些所谓的高手甚至叫嚣高手写的代码一般人看不懂，我只能说他不是一名合格的程序员。&lt;/p&gt;
&lt;h3&gt;4：需求理解能力&lt;/h3&gt;
&lt;p&gt;程 序员要能正确理解任务单中描述的需求。在这里要明确一点，程序员不仅仅要注意到软件的功能需求，还应注意软件的性能需求，要能正确评估自己的模块对整个项
目中的影响及潜在的威胁，如果有着两到三年项目经验的熟练程序员对这一点没有体会的话，只能说明他或许是认真工作过，但是没有用心工作。&lt;/p&gt;
&lt;h3&gt;5：模块化思维能力&lt;/h3&gt;
&lt;p&gt;作 为一个优秀的程序员，他的思想不能在局限当前的工作任务里面，要想想看自己写的模块是否可以脱离当前系统存在，通过简单的封装在其他系统中或其他模块中直
接使用。这样做可以使代码能重复利用，减少重复的劳动，也能是系统结构越趋合理。模块化思维能力的提高是一个程序员的技术水平提高的一项重要指标。&lt;/p&gt;
&lt;h3&gt;6：测试习惯&lt;/h3&gt;
&lt;p&gt;测试是软件工程质量保证的重要环节，但是测试不仅仅是测试工程师的工作，而是每个程序员的一种基本职责。程序员要认识测试不仅是正常的程序调试，而要是要进行有目的有
针对性的异常调用测试，这一点要结合需求理解能力。&lt;/p&gt;
&lt;h3&gt;7：学习和总结的能力&lt;/h3&gt;
&lt;p&gt;程 序员是很容易被淘汰的职业，所以要善于学习总结。许多程序员喜欢盲目追求一些编码的小技巧，这样的技术人员无论学了多少语言，代码写起来多熟练，我们只能
说他是一名熟练的代码民工，他永远都不会有质的提高。一个善于学习的程序员会经常总结自己的技术水平，对自己的技术层面要有良好的定位，这样才能有目的地
提高自己。这样才能逐步提高，从程序员升级为软件设计师、系统分析员。&lt;/p&gt;
&lt;p&gt;作为高级程序员，乃至于设计师而言，除了应该具备上述全部素质之外，还需要具备以下素质：&lt;/p&gt;
&lt;p&gt;1、 需求分析能力&lt;/p&gt;
&lt;p&gt;2、 整体框架能力&lt;/p&gt;
&lt;p&gt;3、 流程处理能力&lt;/p&gt;
&lt;p&gt;4、 模块分解能力&lt;/p&gt;
&lt;p&gt;5、 整体项目评估能力&lt;/p&gt;
&lt;p&gt;6、 团队组织管理能力&lt;/p&gt;
&lt;h3&gt;1，激情。&lt;/h3&gt;
&lt;p&gt;我 曾经遇到许多「职业程序员」，他们从事IT是因为觉得这是一种职业，他们只在工作时间编程，除非送去培训否则他们不会学习新东西，这不是好的程序员。我认
为一个好的程序员总是对编程充满激情，而且好的开发者会做一些编程工作即使这没有报酬。激情是一个优秀程序员的重要指标。&lt;/p&gt;
&lt;h3&gt;2，自学好学&lt;/h3&gt;
&lt;p&gt;编 程领域始终发展变化着，不出一年有些新技术就变成了老技术，这并不是说好的程序员要对所有新技术跟进，但有些却对学习任何新技术都没有兴趣。他们通常在学
校学习了编程，然后工作后单位安排学什么就学什么。如果在招聘中你听到「让我培训一个星期我就会胜任这个工作」那不要雇佣他。实际上，真正优秀的程序员始
终谈论着你所不知道的新技术，向人们解释为什么你必须用这个技术，哪怕没有听众听得明白，哪怕他自己也不明白。&lt;/p&gt;
&lt;h3&gt;3，聪明&lt;/h3&gt;
&lt;p&gt;聪明包括很多因素，情绪和社会交际只是其中之一。好的程序员绝不木讷，他们是最聪明的人，他们中的许多善于交际，健谈、兴趣广泛。&lt;/p&gt;
&lt;h3&gt;4，隐性的经验&lt;/h3&gt;
&lt;p&gt;—好的程序员通。常有自己的私人的一些研究、爱好、项目，而这些是他们不写在简历上 (通常觉得不值得写)，但表现出来却可能恰恰是他的潜能、深度和后劲所在。&lt;/p&gt;
&lt;h3&gt;5，技术多样性&lt;/h3&gt;
&lt;p&gt;由于好的程序员喜欢学习和涉猎新技术，所以一般来说超过22岁的都熟知很多新技术，而且对多种技术的长短有 「强烈」的个人意见/见解，喜好尝试新鲜技术。&lt;/p&gt;
&lt;h3&gt;6，资格证书&lt;/h3&gt;
&lt;p&gt;资格证书并不是识别真正程序员的方法，MCSE、SCJP、说明不了什么，它们只是让别人认识和获取的，顶多代表这个人在某个技术有一定的知识。&lt;/p&gt;
&lt;p&gt;原文作者在文末写道：以上所说的标准并不是绝对的，因为有些优秀的程序员确实不符合上述，而有些bad程序员却符合了。但相信这些对大多数真正的程序员都适用。&lt;/p&gt;
&lt;p&gt;总结而言，优秀的程序员通常有一下特点：&lt;/p&gt;
&lt;p&gt;n         对技术充满激情；&lt;/p&gt;
&lt;p&gt;n         将编程作为一种爱好&lt;/p&gt;
&lt;p&gt;n         如果你允许会滔滔不绝地跟你谈论技术&lt;/p&gt;
&lt;p&gt;n         有过个人的开发经历（与4意思相同）&lt;/p&gt;
&lt;p&gt;n         坚持认为某种技术最好&lt;/p&gt;
&lt;p&gt;n         如果让他用他认为不好的技术他会非常别扭&lt;/p&gt;
&lt;p&gt;n         聪明、健谈、兴趣广泛&lt;/p&gt;
&lt;p&gt;n         在大学和工作前就开始接触程序&lt;/p&gt;</summary><category term=""></category></entry><entry><title>我对计算机专业的想法</title><link href="/2008/02/i-have-the-idea-of-computer-science/" rel="alternate"></link><updated>2008-02-10T00:00:00+08:00</updated><author><name>alswl</name></author><id>tag:,2008-02-10:2008/02/i-have-the-idea-of-computer-science/</id><summary type="html">&lt;p&gt;本文乃08-09校内日志存档，我一起给发布了，如果给大家阅读造成困难，我深感抱歉```&lt;/p&gt;
&lt;p&gt;周围很多同学对这个专业很是迷茫，不知道自己出去以后干什么，甚至有人觉得什么都不会，只能去网吧做做网管。家长只知道这个专业需求量极大，但
到底这个专业是做什么的，并不是很了解，就我个人而言，经常被亲戚朋友喊去修电脑，重装系统，其实这个工作和我们所学的几乎没有什么联系，有些亲戚说毕业
了去开电脑店，我一笑置之。&lt;/p&gt;
&lt;p&gt;哦，申明一下，这个文章只代表我个人，只代表我现在处在这个阶段（大二）的想法，也许再了解一些，我会更加对计算机有深入的了解。&lt;/p&gt;
&lt;p&gt;我从小对这个东西感兴趣，一年级时候就参加了培训班，但是用的是小霸王学习机 - -# 联系打字和wps，直到初中才开始接触游戏，发现这个东西居然能打游戏，居然
能上网，就一发不可收拾。我曾经沉迷于电脑游戏，但是现在早摆脱了，我晓得了电脑的本质，&lt;strong&gt;电脑只是一个工具。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;电脑纯粹是一个工具，无论是游戏，聊天，ps，管理，工作，无可否认，电脑仅仅是工具，我们所做的一切都是在这个工具的平台上面完成的。就像一张白纸，
我们可以画画，写字，记账，甚至折飞机，我很恶心很多家长把孩子贪玩归结于电脑，其实大可不必，游戏仅仅是很小的一个功能，游戏的本质就是娱乐，电脑仅仅
是把它给电子化了。&lt;/p&gt;
&lt;p&gt;既然是工具，总的有人去开发这个工具的功能，总的有人去维护这个工具的使用。我们这个专业就是从事
这方面的工作了。很多人为自己掌握所谓的系统小技巧，网络小技巧，还有什么刷XX币啊就很专业，但是，那些都是停留在应用界面上面的。这些知识很容易，也
很轻松就能掌握，只要有兴趣，花点时间就ok了，我本人曾经对这些东西很着迷，很崇拜这些厉害的高手，后来了解多了，就觉得虽然厉害，但并不是我们应该追 求的。&lt;/p&gt;
&lt;p&gt;我觉得计算机专业的学生首先应该对一门语言很精通。所谓精通，最低限度就是能够熟练运用吧，能写点比hello
world高级一点的东西吧，我想，对于我和很多同学来说，是绝对不敢说精通的，顶多算得上能够应用。而如果一个计算机专业的学生，连语言都没有掌握，那
还谈什么开发呢。（我很惭愧，当时还雄心大志的要写10万行代码，现在都大二了··)&lt;/p&gt;
&lt;p&gt;其次，我觉得计算机思想很重要，
从数据结构，到离散数学，到面对对象程序设计，讲的都是思想的转变。计算机语言发展到现在，已经有很大的进步，从最初的汇编，到低级语言，到过程，到高
级，到面对对象，到网络环境运用。其实都是思想的发展。到了现在这个程度，计算机思想变得更拟人化，更容易理解，入门门槛也更低了。&lt;/p&gt;
&lt;p&gt;电视上，杂志上充斥着一些电脑专修学校的广告，他们宣称1年就可以制造计算机专业人才，我看过一些文章，指出他们严重欠缺计算机思想，那些学校是填鸭的给灌输操作方法
操作技巧，没有分析计算机原理和思想，这样很不行，几年后，就跟不上时代的发展，就会被技术所淘汰！！&lt;/p&gt;
&lt;p&gt;我也一直对自己将来做什么有点迷惘。计算机大三分专业大凡是软件，硬件和网络。我个人比较偏向于网络。我本人是比较懒，尽管对计算机很爱好，但是相比
较，网络更容易入手，前景更光明一点，性价比高一点。何况，网络并不完全独立，实际上，计算机上很多枝节都是相互联系的。中国现在的IT还有很多网络泡沫
存在，还有很多公司能够在很短的时间内成功。我们正出在一个环境宽松，互联网告诉发展的时期，我为我在活在这个时期而感到骄傲和庆幸，这个英雄辈出的时
代，早就了多少IT神话，我不奢望成为其中的一人，但是会向这个方向努力。&lt;/p&gt;
&lt;p&gt;很多同学都为这个专业而苦恼，大可不必，这是个很有创造力，很有前景的专业，我们有太多的方向可以选择，我们有太多的事业可以去创造，我们应该荣幸。&lt;/p&gt;
&lt;h2&gt;关于证书：&lt;/h2&gt;
&lt;p&gt;学 校的毕业证和学位证的效用很弱，因此，为了证明自己的实力，证书是不可缺少的。我所说的证书不是国家的计算机等级考试，那个几乎没有什么用处，何况计算机
本科毕业的学位证就相当于计算机全国四级的认证效果。这里我关注两个认证证书。思科（Cisco)网络认证，主要是证明你对网络配置的能力（不推荐华为，
因为华为比思科简单，而且，思科在我们自己学校就有培训考试点）。思科认证主要有CCNA、CCNP、路由交换类CCIE三种认证，分别对应入门，高级，
专家级。CCNA很容易考，CCNP如果考到了，对就业很有帮助，CCIE如果考到了，那恭喜你，你毕业之后年薪10万是没有问题的。&lt;/p&gt;
&lt;p&gt;另外一个很重要的证书是微软的认证，最普通的系统工程师开始，网上又有很多分类，包括数据库，网络方向，系统专业方向。这个认证也很有效用。毕竟是微软
的么。（我对开源认证没有什么研究，也不好发表什么看法。仅仅知道开源很有前景，大部分的服务器都是运行在开源系统上面的）&lt;/p&gt;
&lt;p&gt;ps:我文笔很烂，其实不想写，也不太敢把自己的拙见写出来，怕被笑话，但是昨晚某人说为这个苦恼，我就写点自己的感想，仅此而已··&lt;/p&gt;</summary><category term="cinderella"></category></entry></feed>