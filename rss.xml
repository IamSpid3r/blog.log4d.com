<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Log4D</title><link>https://blog.log4d.com/</link><description></description><atom:link href="https://blog.log4d.com/rss.xml" rel="self"></atom:link><lastBuildDate>Wed, 15 Jun 2016 09:59:16 +0800</lastBuildDate><item><title>一次「分答」记录</title><link>https://blog.log4d.com/2016/06/q-and-a/</link><description>&lt;p&gt;尝试在团队内部发起一次类似「分答」的沟通方式，一对一面聊。
回答其他工程师的问题，这种沟通的方式暨在提供一个特定的场合，帮助加强双方了解，
解决团队中其他工程师的一些实际的问题。&lt;/p&gt;
&lt;p&gt;在征得对方同意之后，我将他的问题和我的回答 PO 出来。&lt;/p&gt;
&lt;p&gt;&lt;img alt="201606/questions-and-answers.jpg" src="http://upload-log4d.qiniudn.com/upload_dropbox/201606/questions-and-answers.jpg" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;喜欢什么游戏，玩游戏的问题&lt;ul&gt;
&lt;li&gt;喜欢和人玩游戏，不喜欢和不认识网友玩游戏&lt;/li&gt;
&lt;li&gt;小学从红月开始玩，传奇、CS、魔兽、真三、DOTA，大学时候和舍友玩游戏，毕业后不玩&lt;/li&gt;
&lt;li&gt;minecraft 尝试着玩过，没有玩下去，找不到人&lt;/li&gt;
&lt;li&gt;日活的桌面游戏，三国杀等蛮喜欢&lt;/li&gt;
&lt;li&gt;不喜欢浪费时间，怕没控制&lt;/li&gt;
&lt;li&gt;从玩游戏里面学习什么么？不，就是纯粹享受游戏，不会想这么多&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;喜欢什么语言&lt;ul&gt;
&lt;li&gt;看场合，小东西，小场景用 Python，生产环境用 Java，生产环境又有时间，考虑 Scala&lt;/li&gt;
&lt;li&gt;只允许选一门语言，就用 Python&lt;/li&gt;
&lt;li&gt;最吸引的特点，熟悉程度高，生产效率高，第三方库丰富，粘合性强&lt;/li&gt;
&lt;li&gt;为 Python 做一些功能扩展？不同时期答案会不一样，目前来说，希望有一个开发效率更高的 framework；有时间的话，会考虑如何绕过底层 GIL 问题 &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有什么事情投入精力，铩羽而归&lt;ul&gt;
&lt;li&gt;工具向重的人，推广 git 花了两年，推广 Restful 不利&lt;/li&gt;
&lt;li&gt;做业务开发 leader，和 tsu、小管一起做，项目管理、团队管理没做好，没做好，有挫败感。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;职业迷茫期&lt;ul&gt;
&lt;li&gt;我作为一个学渣，并且长期以来没有人给予职业生涯规划，一直对自己未来发展有困惑&lt;/li&gt;
&lt;li&gt;如何在无领导的情况之下，探索未来道路，规划自己工作内容？跟优秀的人聊，跟外部的人聊，看博客，看书&lt;/li&gt;
&lt;li&gt;迷茫是客观存在的，并且可能持续存在很久，正视它&lt;/li&gt;
&lt;li&gt;现实中一定会遇到各种挑战和困难的，用挑战和困难填充自己，丰富自己的生活&lt;/li&gt;
&lt;li&gt;迷茫是未知，有恐惧，有兴奋。对当前的我来说，恐惧可能更多，但是要面对&lt;/li&gt;
&lt;li&gt;职业生涯里面，前期的同质度更高，资深工程师可以会给初级工程师规划清晰一些，但是越往后期，越难规划，需要自己探索&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;推荐书&lt;ul&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/people/alswl/collect?sort=rating&amp;amp;start=0&amp;amp;filter=all&amp;amp;mode=list&amp;amp;tags_sort=count"&gt;https://book.douban.com/people/alswl/collect?sort=rating&amp;amp;start=0&amp;amp;filter=all&amp;amp;mode=list&amp;amp;tags_sort=count&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;学习来源&lt;ul&gt;
&lt;li&gt;博客，infoq 等专业信息来源&lt;/li&gt;
&lt;li&gt;书籍&lt;/li&gt;
&lt;li&gt;周围的人&lt;/li&gt;
&lt;li&gt;尽可能从每天时间挤出时间阅读&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;生活和工作平衡点&lt;ul&gt;
&lt;li&gt;不同的人，同一个人的不同时期所需要的平衡不一样&lt;/li&gt;
&lt;li&gt;对自己人生期望不一样的人，平衡点不一样&lt;/li&gt;
&lt;li&gt;对我来说，目前阶段不存在明显边界，尽可能投入工作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如何保持激情&lt;ul&gt;
&lt;li&gt;人总是有低谷期的，不可能一直保持亢奋，除非是甲亢&lt;/li&gt;
&lt;li&gt;短期情绪会有起伏，长期来看，保持梦想和对自己高要求，可以帮助保持激情&lt;/li&gt;
&lt;li&gt;我有低谷期，低谷期适合反思&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如何擦屁股&lt;ul&gt;
&lt;li&gt;现实是残酷的，总有屁股要擦，自己也有脏屁股，今天要给昨天的自己擦屁股&lt;/li&gt;
&lt;li&gt;现实中存在脏屁股，尽可能了解它，看代码、文档，设计方案，了解的人，让自己变舒服&lt;/li&gt;
&lt;li&gt;责任心的体现，做好当下的事情；解决这样的问题，解决当前的问题；避免留下脏屁股，设计好，规划好&lt;/li&gt;
&lt;li&gt;责任心的话很虚。一个人做擦屁股、低产值的事情，从长远来看，是错的；短期需要撑下来；并且帮助团队避免这样的事情发生&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;最有成就感的事情&lt;ul&gt;
&lt;li&gt;顶着家庭压力，到上海来&lt;/li&gt;
&lt;li&gt;在堆糖改造环境，提升自己心智水平，不害怕问题，自信，自省&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2016/06/q-and-a/"&gt;https://blog.log4d.com/2016/06/q-and-a/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Wed, 15 Jun 2016 09:59:16 +0800</pubDate><guid>tag:blog.log4d.com,2016-06-15:2016/06/q-and-a/</guid><category></category></item><item><title>海贼王和创业团队</title><link>https://blog.log4d.com/2016/04/onepiece-startup/</link><description>&lt;p&gt;一个同事在知乎提了一个问题 &lt;a href="https://www.zhihu.com/question/35037806"&gt;如果把草帽海贼团比作一个创业团队,这个Team的组织架构是怎样的?有哪些优势,又有哪些不足?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="201604/onepiece.jpg" src="http://upload-log4d.qiniudn.com/upload_dropbox/201604/onepiece.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;这个话题很有趣，作为追了多年的 fans ，又是身处互联网创业团队的我要来强答一记。&lt;/p&gt;
&lt;p&gt;海贼王的世界很大，富有个性的角色和团队也很多，恰好可以和显示世界中的互联网创业团队进行对比。
柳传志讲的好，做大事，要「建班子，定战略，带队伍」，我们就着金句来看看草帽这个团队怎么样。&lt;/p&gt;


&lt;h2&gt;产品和战略&lt;/h2&gt;
&lt;p&gt;我先讲产品和战略。&lt;/p&gt;
&lt;p&gt;由于海贼王世界的设定，以及作为一个全年段漫画动画的原因。
海贼王世界的整体战略是较为简单，海贼团的目标都较为单一，即「找到 哥尔 D 罗杰 留下的宝藏」。
海贼团们实现目标的路径也较为单一，打斗增强战斗力，不断寻找线索，去伟大航道寻找宝藏。&lt;/p&gt;
&lt;p&gt;所以故事的开展反而是围绕另外一条隐秘的线索「历史的真相」，尾田大神埋坑很深。
「历史的真相」并不是作为大部分人努力和前进的目标，所以「海贼王」世界的故事虽然曲折跌宕，
但是产品模型极为单一，不具备太多可以讨论的点。&lt;/p&gt;
&lt;h2&gt;团队&lt;/h2&gt;
&lt;p&gt;接着讲团队，一个团队第一重要的是创始人，这必须要是一位领袖人物。&lt;/p&gt;
&lt;p&gt;评价领袖优秀程度，从这么几个角度评价：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;意志力：打不死的小强，不达目标誓不罢休&lt;/li&gt;
&lt;li&gt;专业技能：能打、脑子灵光、心灵手巧、一技之长&lt;/li&gt;
&lt;li&gt;规划能力：除了体力值和专业智慧，也要讲讲战略和谋略&lt;/li&gt;
&lt;li&gt;管理能力：沟通协调、团队管理促进能力，能够带领团队实现目标，促进他人成长&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以这个标准来看几个具有领袖气质的角色：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;路飞&lt;ul&gt;
&lt;li&gt;意志力：5&lt;/li&gt;
&lt;li&gt;专业技能：5&lt;/li&gt;
&lt;li&gt;规划能力：1（率性而为的大爷）&lt;/li&gt;
&lt;li&gt;管理能力：1（团队自由生长）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;白胡子&lt;ul&gt;
&lt;li&gt;意志力：5&lt;/li&gt;
&lt;li&gt;专业技能：5&lt;/li&gt;
&lt;li&gt;规划能力：4（顶上之战的过程证明）&lt;/li&gt;
&lt;li&gt;管理能力：5（队长们的成长和忠诚度证明）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;多弗朗明哥&lt;ul&gt;
&lt;li&gt;意志力：5&lt;/li&gt;
&lt;li&gt;专业技能：5&lt;/li&gt;
&lt;li&gt;规划能力：5&lt;/li&gt;
&lt;li&gt;管理能力：5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;艾斯&lt;ul&gt;
&lt;li&gt;意志力：5&lt;/li&gt;
&lt;li&gt;专业技能：4（以牺牲的时间点战斗力打分）&lt;/li&gt;
&lt;li&gt;规划能力：2（追踪黑胡子，一个人冒进，被黑胡子摆了一道）&lt;/li&gt;
&lt;li&gt;管理能力：2（也就混到一个队长，能够鼓励其他人，但是没发现黑胡子成长的问题）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;唐僧（乱入一个对比）&lt;ul&gt;
&lt;li&gt;意志力：5+&lt;/li&gt;
&lt;li&gt;专业技能：4（熟读经书算不算专业能力？）&lt;/li&gt;
&lt;li&gt;规划能力：0&lt;/li&gt;
&lt;li&gt;管理能力：0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从上面的判断可以看出，对于一个领袖而言，路飞仅仅是不错，但是谈不上多么优秀，
倒是白胡子，典范啊典范。&lt;/p&gt;
&lt;p&gt;根据上面提到的能力模型，草帽海贼团的其他角色大家也可以心里评估出来了：
大部分人都是意志力、专业技能强悍（即便是乌索普，射击能力也是可以评上 3），但是同时也在规划能力和管理能力上面较弱。&lt;/p&gt;
&lt;p&gt;唉，这么弱，很难继续支撑草帽海贼团继续走下去啊，怎么办呢？&lt;/p&gt;
&lt;h2&gt;带队伍&lt;/h2&gt;
&lt;p&gt;草帽海贼团，一个极为漂亮的「自组织团队」。&lt;/p&gt;
&lt;p&gt;什么是「自组织团队」？来自 InfoQ 的一篇文章 &lt;a href="http://www.infoq.com/cn/articles/what-are-self-organising-teams"&gt;什么是自组织团队？&lt;/a&gt; 里面讲到团队的特性：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;分散式的控制，也就是说与集中式的控制截然相反，&lt;/li&gt;
&lt;li&gt;不断适应改变的环境，&lt;/li&gt;
&lt;li&gt;在局部相互作用下自然浮现出来的结构,&lt;/li&gt;
&lt;li&gt;反馈，包括肯定的和否定的&lt;/li&gt;
&lt;li&gt;弹性，归结于系统修复和调整的能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;用简单的关键词概括，其实是这么几个关键词：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自行决策&lt;/li&gt;
&lt;li&gt;自己成长&lt;/li&gt;
&lt;li&gt;适应环境变化&lt;/li&gt;
&lt;li&gt;团队内部信任并且沟通顺畅&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从这几个关键词来看，草帽海贼团和这种自组织模式极为匹配。路飞从来不会发号施令，统一调度，顶多喊几句口号振奋一下大家。
路飞自身的规划能力和帮助他人成长的能力也远不及格。团队里面其他的成员，索隆、香吉士等的成长，完全是靠自己，
甚至在「两年」跨度这么长的时间，尾田也是借外部力量帮助团队这些成员成长，而不是依靠领袖来培养成员。&lt;/p&gt;
&lt;p&gt;路飞选择这种自组织模式，不仅仅是一种巧合，更多的是一种逼不得已。尾田大神写的就是青春热血漫画，要是换成一个有勇有谋，
那就成主旋律电视剧了，大家可能也是因为路飞这种有点和缺点喜欢他。&lt;/p&gt;
&lt;h3&gt;Anti-自组织模式&lt;/h3&gt;
&lt;p&gt;和「自组织模式」相反的情况，可以参照一下多弗朗明哥的团队。我们可以看到，在多弗朗明哥团里里面，有严密的等级关系（四大干部，家族干部，普通小兵），
有帮助人才成长的流程（培训罗的一系列流程）。
这种设定也是多弗朗明哥的战略能力和管理能力的体现。&lt;/p&gt;
&lt;p&gt;还有一种更极致的组织模式「集权模式」，由核心层发号施令，协同作战。
海贼王的世界里，较少发现这样的模式，反派角色海军有一点点像。
倒是另外一部作品「星球大战」，其中的帝国、第一秩序，都是典型的 Manager 发号施令，底层士兵只要好好作战即可。
统一培养成行的克隆人，就可以支撑这样的团队发挥十足战力。&lt;/p&gt;
&lt;p&gt;这种集权模式，缺少向上反馈能力，缺少自发的创新能力。在业务发展顺利规模扩张阶段，也许可以发展不错，但是长久以往，
核心层必然会发觉创新力和驱动力不足，花费大量的精力在管理、制度建设、奖惩机制上面。&lt;/p&gt;
&lt;p&gt;路飞的缺点和优点一样鲜明，他很幸运的（可能也完全不知道）使用了「自组织团队」这种模式，完成了创业的起步阶段。
但是这种模式有也有自带的缺陷，需要目标一致性很高，团队成员自身有极高成长度。一旦遇到业务爆炸（顶上之战这种规模的战役），
这团队就完蛋了。期望路飞在未来的航道上，注意培养一下自己不善于的能力。好消息是，从最近的「庞克哈撒德篇」和「德雷斯罗撒篇」战况来看，
路飞已经开始学会制定「寻找友军结盟」、「树立竞争对手标杆」这样的初级战略方案了。&lt;/p&gt;
&lt;h2&gt;末&lt;/h2&gt;
&lt;p&gt;海贼王的世界，真的就是现实中「海盗」的正式写照吧。完成不可能的目标，成就团队，成就自己。&lt;/p&gt;
&lt;p&gt;「世代传承的意志，时代的变迁，人们的梦，只要人们继续追求自由的答案，这一切的一切都将永不停止.这世界……没错！一个追求自由任凭选择的世界，就在我们的眼前无限地延伸，如果我们的梦想可以引导你的方向的话，就去追寻吧！在名为信念的旗帜下」&lt;/p&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2016/04/onepiece-startup/"&gt;https://blog.log4d.com/2016/04/onepiece-startup/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Wed, 27 Apr 2016 00:36:10 +0800</pubDate><guid>tag:blog.log4d.com,2016-04-27:2016/04/onepiece-startup/</guid><category></category></item><item><title>Windows management for hacker</title><link>https://blog.log4d.com/2016/04/windows-management-for-hacker/</link><description>&lt;p&gt;团队里的同学有时看见我键指如飞，可以用快捷键将 Mac 的窗口玩转于手心。他们表示酷炫非常，
心生羡慕的同时，希望掌握这门技艺，我就把使用的 Phoenix 介绍给大家。结果过了一段时间，
发现普及率并不高，本着好为人师的精神，今天我就来八一八这款优秀的桌面管理工具。&lt;/p&gt;
&lt;p&gt;在介绍我使用的工具之前，我要先介绍一下我选择的原因和历史。&lt;/p&gt;
&lt;p&gt;&lt;img alt="201604/ergodox_infinity.jpg" src="http://upload-log4d.qiniudn.com/upload_dropbox/201604/ergodox_infinity.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;ps：配图是我长草多年的 Ergodox Infinity。（@夫人，看到这里的时候，请留步思考 5s）。&lt;/p&gt;
&lt;h2&gt;Alt+Tab = 苦难的历史&lt;/h2&gt;
&lt;p&gt;当我还年轻的时候，曾经对 Alt+Tab 这个快捷键愤慨无比，觉得这种设计虽然简单但是很蠢。&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;命中率低&lt;/strong&gt;。要在茫茫图标中查找自己需要的窗口，如果开了 20 个应用，切换到一个非常用窗口至多可能需要 20-1 次按键。
    不要跟我说有 Alt+Shift+Tab 的反向循环操作，估计大部分用户都不知道。而且 正向/反向 切换伤脑子。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;交互方式耗时&lt;/strong&gt;。由于 Alt+Tab 的操作需要用户进行反馈才能进行，是 &lt;code&gt;眼-手-眼-手&lt;/code&gt; 的操作反馈方式，
    这种交互模式费时费脑子。跟这种需要实时反馈对立的交互模式应当是类似「一键呼出」的操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在大显示器、多显示器的环境下面，Alt-Tab 模式没有做任何优化&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;频繁切出窗口进行切换，容易让人分神，比如切换时候看到某个播放器的标题，在放一首喜欢的歌，很可能吸引过去。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有人会问，难道不优化都是缺陷么？
    我的答案是肯定的。Alt+Tab 是几乎除鼠标之外的唯一一种窗口操作方式。如果它不能跟上时代的步伐，
    对大显示器、多显示器做优化，那就是不作为，不努力，不上进。跟不上变化是要被淘汰的！&lt;/p&gt;
&lt;p&gt;&lt;img alt="201604/alt_tab_windows.jpeg" src="http://upload-log4d.qiniudn.com/upload_dropbox/201604/alt_tab_windows.jpeg" /&gt;&lt;/p&gt;
&lt;h2&gt;平铺式窗口管理器&lt;/h2&gt;
&lt;p&gt;在被 Windows Alt-Tab 虐了多年之后，我长大了，开始接触 Linux，但是这种痛苦仍然时刻包围着我。
当我分期购买一个外置显示器之后，这种痛苦到达到了顶端。
恰好彼时我是 &lt;a href="https://www.archlinux.org/"&gt;ArchLinux&lt;/a&gt; 的信徒，很快就发现了一片桃源：
自己安装 &lt;a href="https://wiki.archlinux.org/index.php/window_manager"&gt;Window manager&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;我重新认识了桌面系统世界，除了介绍常规的 Gnome / KDE / xfce 之外，还有一类窗口管理系统，他们叫做「平铺式窗口管理器」。
（严格来说，Gnome / KDE / xfce 属于 Desktop environment，层级比「窗口管理系统」要高，我这里不做严格区分）。&lt;/p&gt;
&lt;p&gt;什么是平铺式窗口管理器？来一个直观的认识：&lt;/p&gt;
&lt;p&gt;&lt;img alt="201604/awesome_1.jpeg" src="http://upload-log4d.qiniudn.com/upload_dropbox/201604/awesome_1.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="201604/awesome_2.jpeg" src="http://upload-log4d.qiniudn.com/upload_dropbox/201604/awesome_2.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;官方的解释是……呵呵，自己点进去看解释吧。平铺式桌面管理器（包括同时支持平铺式和堆叠式的混合式桌面管理器）给我带来了新的认知，
原来桌面系统是可以进行接口编程的，我不那么 care 到底是哪种风格，我 care 的是，
能否通过编程定制来解决我的 Alt-Tab 问题。&lt;/p&gt;
&lt;h2&gt;我期望的窗口管理模式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;快速启动最常用的应用，同时也能将其快速呼出&lt;/li&gt;
&lt;li&gt;对大屏幕友好，现在显示器普遍是大屏幕，可以自由控制窗体的移动，方便多个窗口同时进行操作&lt;/li&gt;
&lt;li&gt;对多屏幕友好，多屏幕间的切换，要友好。可以快速屏幕间切换&lt;/li&gt;
&lt;li&gt;对键盘友好，对鼠标友好，全键盘操作模式，但同时要对鼠标友好，比如鼠标跟随焦点功能，毕竟一些操作还是鼠标方便&lt;/li&gt;
&lt;li&gt;帮助集中注意力，将操作界面隔离成多个目的区分的空间，比如写作时候，期望只有一个 Evernote + Chrome 在眼前&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;我在 Mac 下面的方案&lt;/h2&gt;
&lt;p&gt;呜呼，感谢伟大的 &lt;a href="https://github.com/jasonm23/"&gt;Jason Milkins&lt;/a&gt; 做了一堆尝试，
创造了一堆乱七八糟的桌面管理器。然后感谢 &lt;a href="https://github.com/kasper"&gt;Kasper Hirvikoski&lt;/a&gt;
在 Jason 拍拍屁股走人之后，接过了 Jason 的棒子，将 Phoenix 这个项目快速推进，解决了一堆导致不可用的 bug，
并新增了很多特性。&lt;/p&gt;
&lt;p&gt;回到要介绍的主角身上，&lt;a href="https://github.com/kasper/phoenix"&gt;Phoenix&lt;/a&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A lightweight OS X window and app manager scriptable with JavaScript&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;基本特性是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Javascript 作为配置文件，定制性超级强&lt;/li&gt;
&lt;li&gt;支持 App / Window / Space / Screen 等对象的操作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 Phoenix，我达成了我的窗口管理模式的目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;快速启动&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;Option&lt;/code&gt; + ` / 1 / 2 / 3 / 4 / 8 / 9 / e / a / s / z /, / . / / 启动&lt;/li&gt;
&lt;li&gt;iTerm / Chrome / Safari / QQ / Bearychat / Wechat / Neteasy Music / MacVim / IntelliJ IDEA / Macdown / Mail / Evernote / Finder&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;窗口操作&lt;ul&gt;
&lt;li&gt;Option + - / =&lt;ul&gt;
&lt;li&gt;大小控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Option + m&lt;ul&gt;
&lt;li&gt;窗口移动到屏幕中央&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Option + Space&lt;ul&gt;
&lt;li&gt;鼠标找回到窗口中央&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;屏幕内操作&lt;ul&gt;
&lt;li&gt;Option + J / K&lt;ul&gt;
&lt;li&gt;焦点在同屏幕窗口切换&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ctrl + Option + J / K / H / L&lt;ul&gt;
&lt;li&gt;窗口移动&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;屏幕间操作&lt;ul&gt;
&lt;li&gt;Option + H / L&lt;ul&gt;
&lt;li&gt;焦点左右屏幕切换&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Space 操作&lt;ul&gt;
&lt;li&gt;Option + I / O&lt;ul&gt;
&lt;li&gt;Space 左右切换&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Option + Ctrl + I / O&lt;ul&gt;
&lt;li&gt;将当前窗口移动到相邻 Space&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Option + Enter&lt;ul&gt;
&lt;li&gt;将当前窗口移动到 Work Space&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Option + Delete&lt;ul&gt;
&lt;li&gt;将当前窗口移动到 Park Space&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Work / Park Space 就是用来帮助我集中精力的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我的配置文件在 &lt;a href="https://github.com/alswl/.oOo./blob/master/.phoenix.js"&gt;https://github.com/alswl/.oOo./blob/master/.phoenix.js&lt;/a&gt;
我的配置文件可以开箱即用，但这是我自己的工作模式，想要获得自己最舒适的效果，需要自己进行一些研究和定制。&lt;/p&gt;
&lt;h2&gt;其他一些替代方案&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Mac&lt;ul&gt;
&lt;li&gt;SizeUp  # 简单的桌面平铺工具，不支持一键切换&lt;/li&gt;
&lt;li&gt;Spectacle  # 类 SizeUp&lt;/li&gt;
&lt;li&gt;Divvy  # 类 SizeUp，收费&lt;/li&gt;
&lt;li&gt;Slate  # 支持配置，支持一键切换（推荐）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Linux&lt;ul&gt;
&lt;li&gt;Awesome&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hahack.com/tools/awesome/"&gt;平铺式窗口管理器-Awesome | HaHack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alswl/awesome"&gt;我的 Awesome 配置文件（停止位置）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;xmonad&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fuhsjr00/bug.n"&gt;fuhsjr00/bug.n: Tiling Window Manager for Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;我曾经写过一篇 &lt;a href="http://blog.log4d.com/2013/12/mac/"&gt;Linux 程序员的 Mac 安装记录&lt;/a&gt;，
告诉大家我在 Mac 上面常用的工具、包管理器。&lt;/p&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2016/04/windows-management-for-hacker/"&gt;https://blog.log4d.com/2016/04/windows-management-for-hacker/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Sun, 24 Apr 2016 16:36:16 +0800</pubDate><guid>tag:blog.log4d.com,2016-04-24:2016/04/windows-management-for-hacker/</guid><category>Mac</category></item><item><title>技术之外</title><link>https://blog.log4d.com/2016/02/team-geek/</link><description>&lt;p&gt;这是一天一本书的第二次执行，这次选了一本比较薄的书，上周的书看了一天，脑仁疼。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;在我组织团队新兵训练营（入职之后一段时间内容集中的培训）时候，
经常和新同事聊到一个词：软实力。
我将其描述为专业技能之外的能力。每个人都这种能力的解读可能会不一样，
我将其拆解为：「对工作的热情；观察力和反思能力；做计划和决策是否周全」。&lt;/p&gt;
&lt;p&gt;这种拆解是不全面的，「多年」以后，我意识到，硬实力考衡的是专业的能力，
而软实力则是考衡人的因素。这种晚来的意识让我在一段时间里面，
将自己的工作陷入困境，并且得不到解药。&lt;/p&gt;
&lt;p&gt;Google 的两位工程师 Brian W. Fitzpatrick 和 Ben Collins-Sussman
写了一本书&lt;a href="http://book.douban.com/subject/21372237/"&gt;极客与团队&lt;/a&gt;，通过他们的视角，
告诉大家想要在团队中获得成功的另一面。不要被书名误解，我觉得「开发者和团队」是更好的名字，
虽然没那么酷。&lt;/p&gt;
&lt;p&gt;&lt;img alt="s26354473.jpg" src="http://upload-log4d.qiniudn.com/upload_dropbox/201602/s26354473.jpg" /&gt;&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;要在团队中获得成功，你必须以&lt;strong&gt;谦虚&lt;/strong&gt;、&lt;strong&gt;尊重&lt;/strong&gt;和&lt;strong&gt;信任&lt;/strong&gt;为核心原则。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;要做的第一件事情，应该就是沟通了。让自己成为一个玻璃玲珑人，
其他人可以看到你的方向、目标和里程碑，同时可以看到你的进展和问题点。
这样不但可以获得工作中的肯定，当个人的目标设定和团队出现偏差，
又或是开发过程中在一个点停顿了太久，可以有其他人参与进来或直接伸出援手。&lt;/p&gt;
&lt;p&gt;这种透明度对上对下都应该如此。团队的领导，
应当在开发周期内的早期就明确告知团队愿景、目标和设定的里程碑。
产生共鸣的愿景可以让人对目标有渴望，对自己工作有认同。
各位还记得中国中小学开学第一周里，大多都有一个开学典礼讲话。讲的好的领导，
会阐述自己的教学理念，去年取得的成绩，今年的教学着重点。
讲的差的领导就是泛泛而谈，每年都是一套话术，完全看不到长进。&lt;/p&gt;
&lt;p&gt;缺失沟通，还会将个人陷于单打独斗的境地，一个篮球队需要 5 个人大，
一个人牛逼没屁用。&lt;/p&gt;
&lt;p&gt;提高工程质量的一个有效手段就是 CI（持续集成），将开发过程中一点点的小进展都以一种机械的方式呈现出来，
并进行测试。另一个有效手段是 Code Review，不但推荐要 CR，更是要尽早、快速的 CR。
避免屎积压多了拉，太臭。&lt;/p&gt;
&lt;p&gt;我突然想到一条实践：即便是做一个人的项目，在精简程度上也保持最小的一个阈值，
想象明天就要长假，工作要交给别人维护，如何在交付物里面有足够的信息让其他人知晓细节。
而不是丢给后继维护者一句冰冷的话：「看代码」。&lt;/p&gt;
&lt;p&gt;沟通必须是有效的，我想任何人都不想听一个嘴碎的人在那边逼逼一下午。
有很多结构化、一部的沟通可以显著提高沟通效率：
项目看板、设计文档、Code Review、代码注释、数据字典等。&lt;/p&gt;
&lt;p&gt;第二个重要的观点是，接受失败，承认自己不是无能的。你可能很聪明，但所做的事情不一定完全都是正确的，
连上帝都会犯错，何况是普通人。犯错不可怕，但是犯错还认识不到可怕。犯错并且认识到了，
但是拒绝承认错误的人，不是可怕，而是应该要被淘汰，这类人会极其难以合作。
如何你周围都是这样的人，或者你上司是这样的人，也许你可以考虑换一个地方，在拉钩搜索「堆糖」试试吧。&lt;/p&gt;
&lt;p&gt;关于接受失败的另外一个隐含后续发展就是「成长」。意识到这个世界是动态发展的，
「要以发展的眼光看待事物」是一个非常非常有用的认知。
能自己意识到失败，并且会主动复盘，重新认知自己的人，往往会成长的极为迅速。
关于成长的话题可以讨论很深，以后可以单独拎出来讨论。&lt;/p&gt;
&lt;p&gt;书中提到一个失败后回顾的清单：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;简要&lt;/li&gt;
&lt;li&gt;时间的时间线，从发现到调查，再到最终见过&lt;/li&gt;
&lt;li&gt;事件发生的主因&lt;/li&gt;
&lt;li&gt;影响和损失评估&lt;/li&gt;
&lt;li&gt;立即修正问题的步骤&lt;/li&gt;
&lt;li&gt;防止事件再次发生的步骤&lt;/li&gt;
&lt;li&gt;得到的教训&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;我就哈哈哈了，这不就是我大堆糖的故障报告模板么？&lt;/p&gt;
&lt;p&gt;第三点，如何成长？简单来说，去冒险，去承担自己能力之外的任务，
去挑战没有经历过的任务。有一条&lt;a href="https://zh.wikipedia.org/wiki/%E5%BD%BC%E5%BE%97%E5%8E%9F%E7%90%86"&gt;彼得定律&lt;/a&gt;：「在组织或企业的等级制度中，
人会因其某种特质或特殊技能，令他在被擢升到不能胜任的职位，相反变成组织的障碍物（冗员）及负资产。」。
前半段含义是，大部分情况下面，并不是具有了相应能力才去承担，而是试着去承担任务。
无论成功与否，对当前去挑战的人来说，都能够得到历练，从而能力得到提升。&lt;/p&gt;
&lt;p&gt;第四点是：成为 Leader，而不是 Manager。
一个团队是一艘危机四伏的海面上一只船，如果没有一个船长，那么就前途叵测。
在职业生涯的某些阶段，你可能自然成为船长，也许是一个项目的船长，也许是一个小 Team 的船长。
那么切记，船长是 Leader，而不是 Manager，是能力综合，可守可攻，顺风时候会把舵，
缺人时候可以顶任何岗位的船长。而不是手持大鞭的 Manager。
我觉得新闻联播里面描述的人民公仆，就是一个很好的 Leader。&lt;/p&gt;
&lt;p&gt;一年多前之前和铁柱聊过，一个 Leader 是否需要要以能力服众。
我仍然保持当初的观点：「是的」。在目标管理、方向把握上面，
强大的技术背景可以有魄力的开展工作，挖掘新技术，推动变化。
在遇到困难时候，可以决策、解决问题。
这是由这个行业特质决定的，互联网是依赖创造力的脑力劳动，而不是根据人数线性增加产出的体力劳动。&lt;/p&gt;
&lt;p&gt;但毕竟不是每个人都一定拥有 Leader 特质，难道就要一辈子做技术得不到上升？
Google 的一种做法，可以很好解决这个问题。分离 TL（techlead）和 TLM（techleadmanager），
前者更着重技术，后者不但关心技术，还关心手下工程师的成长。
用国内互联网的职责分工描述，大概就是有技术专家和团队负责人的区别。&lt;/p&gt;
&lt;p&gt;关于这条，书中的几点最佳实践非常棒：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;放下自负&lt;/li&gt;
&lt;li&gt;做一个禅师（保持冷静和理性）&lt;/li&gt;
&lt;li&gt;成为催化剂&lt;/li&gt;
&lt;li&gt;当一个导师&lt;/li&gt;
&lt;li&gt;设置明确的目标&lt;/li&gt;
&lt;li&gt;坦诚（三明治赞美法）&lt;/li&gt;
&lt;li&gt;记录快乐程度&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;最后聊一下对书本身的评价。黄易山在 Quora 写过一段非常有名的
&lt;a href="https://www.quora.com/What-makes-engineering-management-hard"&gt;为什么工程师管理这么难？&lt;/a&gt;。
这本书讨论的内容要比黄易山那篇回答范围更大，讲述的也更详细（废话，这是书）。
作者是典型的工程师，书目结构易读，第五章从反模式来思考问题非常赞。&lt;/p&gt;
&lt;p&gt;我读过几本技术管理相关的书籍，印象深刻的有两本，一本是温伯格的&lt;a href="http://book.douban.com/subject/1132623/"&gt;成为技术领导者&lt;/a&gt;，另外一本是此书。温伯格的行文比较跳跃、比较抽象，不容易读。
而这本书不但通俗异动，也添加了非常具有可操作性的最佳实践。
从创造力驱动的角度出发，技术开发者都是管理者。因为他们需要设计方案，创造价值，而不是重复劳动，
所以我推荐每个开发者阅读。&lt;/p&gt;
&lt;p&gt;好了，学习够了充分的理论，下面就是做起来了，「知行合一」。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;开给自己的处方：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上面提到的最佳实践&lt;/li&gt;
&lt;li&gt;谦逊：谦逊一些，低调一些，向他人学习&lt;/li&gt;
&lt;li&gt;坚毅：认准目标，稳步前行，不放弃&lt;/li&gt;
&lt;li&gt;信心：信念也许可以重建，但是对自己始终保有信心，也许会错，但是要相信自己的判断&lt;/li&gt;
&lt;li&gt;开会技巧：超过 5 人的会用单向宣讲更有效&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2016/02/team-geek/"&gt;https://blog.log4d.com/2016/02/team-geek/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Sun, 28 Feb 2016 18:16:01 +0800</pubDate><guid>tag:blog.log4d.com,2016-02-28:2016/02/team-geek/</guid><category>读书笔记</category></item><item><title>一例 Timeout 故障</title><link>https://blog.log4d.com/2016/02/a-timeout-fault/</link><description>&lt;p&gt;&lt;img alt="i_love_timeouts_digital_design_mugs.jpg" src="http://upload-log4d.qiniudn.com/upload_dropbox/201602/i_love_timeouts_digital_design_mugs.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;早晨刚到公司， HAProxy 报警，Trtornis（第三方云存储网关，用来统一管理阿里云和七牛云的对象存储） 全飘红。&lt;/p&gt;


&lt;p&gt;检查日志，并没有 ERROR 信息，但是大量 WARN 报错。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;WARN&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;02&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;730&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jetty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QueuedThreadPool&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dw&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;STARTED&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;rejected&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jetty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AbstractConne&lt;/span&gt;
&lt;span class="n"&gt;ction&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="mi"&gt;62&lt;/span&gt;&lt;span class="n"&gt;c021c6&lt;/span&gt;
&lt;span class="n"&gt;WARN&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;02&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;731&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jetty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectorManager&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Could&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;process&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;channels&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SocketChannel&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;connected&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="mf"&gt;10.&lt;/span&gt;
&lt;span class="mf"&gt;1.1.78&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8350&lt;/span&gt; &lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="mf"&gt;10.1.1.74&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;63290&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concurrent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RejectedExecutionException&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jetty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AbstractConnection&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="mi"&gt;62&lt;/span&gt;&lt;span class="n"&gt;c021c6&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jetty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QueuedThreadPool&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QueuedThreadPool&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;362&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tritonis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shaded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0.1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;SNAPSHOT&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jetty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AbstractConnection&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;FillingState&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;onEnter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AbstractConnection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;379&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tritonis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shaded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0.1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;SNAPSHOT&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jetty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AbstractConnection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AbstractConnection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;273&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tritonis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shaded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0.1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;SNAPSHOT&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jetty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AbstractConnection&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;ReadCallback&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;succeeded&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AbstractConnection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;563&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tritonis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shaded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0.1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;SNAPSHOT&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jetty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FillInterest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fillable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FillInterest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;82&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tritonis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shaded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0.1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;SNAPSHOT&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jetty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectChannelEndPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;onSelected&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SelectChannelEndPoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;109&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tritonis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shaded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0.1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;SNAPSHOT&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jetty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectorManager&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;ManagedSelector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;processKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SelectorManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;636&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tritonis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shaded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0.1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;SNAPSHOT&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jetty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectorManager&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;ManagedSelector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SelectorManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;607&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tritonis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shaded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0.1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;SNAPSHOT&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jetty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectorManager&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;ManagedSelector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SelectorManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;545&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tritonis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shaded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0.1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;SNAPSHOT&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jetty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NonBlockingThread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NonBlockingThread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;52&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tritonis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shaded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0.1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;SNAPSHOT&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jetty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QueuedThreadPool&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;runJob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QueuedThreadPool&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;635&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tritonis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shaded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0.1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;SNAPSHOT&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jetty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QueuedThreadPool&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="mf"&gt;3.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QueuedThreadPool&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;555&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tritonis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shaded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0.1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;SNAPSHOT&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;745&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;na&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;1.8.0&lt;/span&gt;&lt;span class="n"&gt;_51&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这是七牛 API 调用出现问题，通过应用 Metrics API 检查 Threads：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http http://A-DOMAIN:8351/threads | sort | uniq -c | sort -gr G qiniu&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;正常的实例：&lt;/p&gt;
&lt;p&gt;&lt;img alt="image2015-12-9_1.png" src="http://upload-log4d.qiniudn.com/upload_dropbox/201602/image2015-12-9_1.png" /&gt;&lt;/p&gt;
&lt;p&gt;异常的实例：&lt;/p&gt;
&lt;p&gt;&lt;img alt="image2015-12-9_2.png" src="http://upload-log4d.qiniudn.com/upload_dropbox/201602/image2015-12-9_2.png" /&gt;&lt;/p&gt;
&lt;p&gt;确认是七牛服务慢导致现成爆掉，但是 46 这个值来自于哪里？&lt;/p&gt;
&lt;p&gt;检查了 App 的配置文件，的确配置了 &lt;code&gt;maxThreads&lt;/code&gt; 为 50:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="n"&gt;requestLog&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;appenders&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt;
  &lt;span class="n"&gt;maxThreads&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;
  &lt;span class="n"&gt;applicationConnectors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;
      &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8350&lt;/span&gt;
      &lt;span class="n"&gt;acceptorThreads&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
      &lt;span class="n"&gt;selectorThreads&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
  &lt;span class="n"&gt;adminConnectors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;
      &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8351&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一般对应服务不稳定，有个简单策略，超时，那么七牛服务超时是多少？找了一下相关代码，下巴都没合上：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# com.qiniu.http.Client&lt;/span&gt;
    &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;httpClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setConnectTimeout&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;Config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CONNECT_TIMEOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TimeUnit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SECONDS&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;httpClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setReadTimeout&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;Config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RESPONSE_TIMEOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TimeUnit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SECONDS&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cp"&gt;# com.qiniu.common.Config&lt;/span&gt;
&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;CONNECT_TIMEOUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;RESPONSE_TIMEOUT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;30000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;超时时间 8h，吓得我赶紧关掉了显示器。
赶紧将这个 Connection 改成了 2 分钟，Connect 改成了 5s。 &lt;/p&gt;
&lt;p&gt;咨询了七牛的工程师故障当天的状况：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sorry 忘了回复，问题已经定位，早上因为有个别用户list请求数量过大，导致了整个list接口出现大量满请求，影响返回是list接口的调用 和 portal上内容管理界面列取文件key的速度，目前已经恢复&lt;/p&gt;
&lt;p&gt;大量慢请求，这个已经内部有告警和恢复机制，11点25恢复的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;国内一线的云服务供应商也会出这样不可用故障，即便是有服务放在云上，还是要自己留一个心眼，多关注可用性啊。&lt;/p&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2016/02/a-timeout-fault/"&gt;https://blog.log4d.com/2016/02/a-timeout-fault/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Tue, 02 Feb 2016 23:34:44 +0800</pubDate><guid>tag:blog.log4d.com,2016-02-02:2016/02/a-timeout-fault/</guid><category>Qiniu</category><category>TCP</category></item><item><title>一次艰难的 Wiki 升级</title><link>https://blog.log4d.com/2016/01/confluence-upgrade/</link><description>&lt;p&gt;公司使用 &lt;a href="https://www.atlassian.com/software/confluence"&gt;Confluence&lt;/a&gt;
管理自己的知识库，
现在使用的版本还是 3.0.1，而最新的 Confluence 版本已经是 5.4+。
新版本加入的一些现代化 Web 系统的新特性很吸引人（拖拽上传，可见即所得编辑），
在群众的强烈呼声下，我着手开始升级。&lt;/p&gt;
&lt;p&gt;&lt;img alt="201601/confluence_river.jpg" src="http://upload-log4d.qiniudn.com/upload_dropbox/201601/confluence_river.jpg" /&gt;&lt;/p&gt;


&lt;p&gt;官方的升级路线很扯，3.0.1 的升级路线是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3.0.1 -&amp;gt; 3.5.17&lt;/li&gt;
&lt;li&gt;5.0.3 -&amp;gt; 5.4.4&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;中间两次大版本升级，第一次原因不明，第二次是更新了 markup 渲染引擎，
改为 HTML 格式类型的渲染模式。&lt;/p&gt;
&lt;p&gt;由于一些原因，我们系统还跑在 embedded 模式下（其实就是 HyperSQL），这种大版本升级，
需要先从内置库升级到外部数据库，比如 MySQL。&lt;/p&gt;
&lt;p&gt;苦逼旅程就开始了。&lt;/p&gt;
&lt;h2&gt;From embedded to MySQL&lt;/h2&gt;
&lt;p&gt;更新内置库到外部库的操作流程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;导出当前的数据备份，包括附件，我导出后 1G+&lt;/li&gt;
&lt;li&gt;使用当前同版本（3.0.1）安装一个全新的 wiki，注意下载 JDBC-connector&lt;/li&gt;
&lt;li&gt;安装之后，配置好 MySQL，开始导入之前准备好的备份&lt;/li&gt;
&lt;li&gt;悲剧上演&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;遇到了错误：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Import failed. Hibernate operation: could not insert: [com.atlassian.confluence.core.BodyContent#12028015]; SQL []; Duplicate entry '12028015' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '12028015' for key 'PRIMARY'&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;官方文档 &lt;a href="https://confluence.atlassian.com/doc/troubleshooting-xml-backups-that-fail-on-restore-199034.html"&gt;https://confluence.atlassian.com/doc/troubleshooting-xml-backups-that-fail-on-restore-199034.html&lt;/a&gt;
让修改重复键数据，好吧，我改，搜索一把重复主键，将备份里面的 &lt;code&gt;entities.xml&lt;/code&gt; 弄出来。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="err"&gt;格式化&lt;/span&gt;
&lt;span class="nx"&gt;awk&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{s=s $0}END{gsub(/&amp;gt;&amp;lt;/,&amp;quot;&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;&amp;quot;,s);s=gensub(/&amp;gt;([^ &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;]*)&amp;lt;/,&amp;quot;&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n\\&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;&amp;quot;,&amp;quot;g&amp;quot;,s);print s}&amp;#39;&lt;/span&gt; &lt;span class="nx"&gt;entities.xml&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;entities.xml.format&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="err"&gt;找重复主键&lt;/span&gt; &lt;span class="nx"&gt;cat&lt;/span&gt; &lt;span class="nx"&gt;entities.xml.format&lt;/span&gt; &lt;span class="nx"&gt;G&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;content&amp;quot; class=&amp;quot;Page&amp;#39;&lt;/span&gt; &lt;span class="na"&gt;-A&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="nx"&gt;G&lt;/span&gt; &lt;span class="na"&gt;-E&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;[0-9]+&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;sort&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;uniq&lt;/span&gt; &lt;span class="na"&gt;-c&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;sort&lt;/span&gt; &lt;span class="na"&gt;-gr&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt; &lt;span class="nx"&gt;cat&lt;/span&gt; &lt;span class="nx"&gt;entities.xml.format&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;grep&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;name=&amp;quot;id&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="na"&gt;-A&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="na"&gt;-B&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;grep&lt;/span&gt; &lt;span class="na"&gt;-E&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;[0-9]+&amp;#39;&lt;/span&gt; &lt;span class="na"&gt;-B&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;操作过程中，发现有数据就一条数据（grep entities.xml），还是插入重复（13238835）。
官方文档解释是，内置数据库的锁有时候会不灵，插入重复键。
于是决定再试试去掉主键约束方案，大不了那个数据我就不要了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;ALTER&lt;/span&gt; &lt;span class="n"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;BODYCONTENT&lt;/span&gt; &lt;span class="n"&gt;DROP&lt;/span&gt; &lt;span class="n"&gt;PRIMARY&lt;/span&gt; &lt;span class="n"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;结果还有其他 PK 约束，我于是一条一条解开，然后……还是不行，真是作了一手的好死。&lt;/p&gt;
&lt;p&gt;结论是，这数据错误了太多，已经无法手工修复。&lt;/p&gt;
&lt;h2&gt;横插一刀的 Emoji 😊😢💗&lt;/h2&gt;
&lt;p&gt;导入时候报了这么一个错误：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Caused by: java.sql.SQLException: Incorrect string value: '\xF0\x9F\x8C\x8D\xE5\x9B...' for column 'BODY' at row 1 org.xml.sax.SAXException: Error while parsing 2015-10-19 23:14:13,108 ERROR [Importing data task] [confluence.importexport.impl.ReverseDatabinder] fromXML Error processing backup: -- referer: http://10.1.2.155:8087/setup/setup-restore-start.action | url: /setup/setup-restore-local.action | userName: anonymous | action: setup-restore-local org.xml.sax.SAXException: Error while parsing net.sf.hibernate.exception.GenericJDBCException: could not insert: [com.atlassian.confluence.core.BodyContent#12028161]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是 Emoji 编码的问题，理论上 MySQL 换到 5.6+，更新 encoding 就可以了。&lt;/p&gt;
&lt;p&gt;但是……Confluence 的建表 SQL 爆出了 255 varchar 超过 1000 限制的错误
，我尝试使用 &lt;a href="https://github.com/rails/rails/issues/9855"&gt;innodb_large_prefix&lt;/a&gt;
似乎可以解决（因为重复键的问题，导致导入已经行不通）。&lt;/p&gt;
&lt;p&gt;另外 innodb_large_prefix 是 5.6.3 才有的，只能升级 MySQL，
并且需要创建表时候使用 DYNAMIC 参数。&lt;/p&gt;
&lt;p&gt;弄个 Emoji 这么绕，这导致我直接弃用了 MySQL。&lt;/p&gt;
&lt;p&gt;如果是正常迁移，不遇到重复键，Emoji 的问题，可以参考官方的文档，完成平滑迁移：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://confluence.atlassian.com/doc/migrating-to-another-database-148867.html&lt;/li&gt;
&lt;li&gt;https://confluence.atlassian.com/doc/database-setup-for-mysql-128747.html&lt;/li&gt;
&lt;li&gt;https://confluence.atlassian.com/doc/upgrading-confluence-4578.html&lt;/li&gt;
&lt;li&gt;https://confluence.atlassian.com/doc/upgrading-confluence-manually-255363437.html&lt;/li&gt;
&lt;li&gt;https://confluence.atlassian.com/conf56/confluence-user-s-guide/creating-content/using-the-editor/using-symbols-emoticons-and-special-characters&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;妈蛋，自己干&lt;/h2&gt;
&lt;p&gt;上面这么点东西，陆陆续续花了我两周的时间（晚上）。已经确认走不通平滑迁移，那就别怪我手段糙了。&lt;/p&gt;
&lt;p&gt;使用 API 导出后直接导入，这种做法最大问题是不平滑，会丢掉 Wiki 修改的历史记录，
在和各个业务方沟通之后，最后达成了一致：可以暴力升级。&lt;/p&gt;
&lt;p&gt;升级流程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;准备最新 Confluence 新站点&lt;/li&gt;
&lt;li&gt;关停站点&lt;/li&gt;
&lt;li&gt;导出数据，包括 Page、评论、附件&lt;/li&gt;
&lt;li&gt;导入 Page，评论，附件&lt;/li&gt;
&lt;li&gt;启动旧站点，开启只读模式&lt;/li&gt;
&lt;li&gt;启用新站点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;官方有一个 &lt;a href="https://migrations.atlassian.net/wiki"&gt;Universal Wiki Converter&lt;/a&gt;，
我在 Bitbucket 上面找到了源码，但是已经不可工作了。
虽然宣称「The UWC will however save you 1-2+ weeks of scripting development time, compared with starting from scratch, for many of the most common conversion cases.」
但并没有卵用。&lt;/p&gt;
&lt;p&gt;不行就自己随便搞搞好了，看了一下开发需要的 &lt;a href="https://confluence.atlassian.com/display/CONF30/Remote+API+Specification+2.4#RemoteAPISpecification2.4-Page"&gt;Conflunce API&lt;/a&gt;，
和尤其贴心的新版本 &lt;a href="https://developer.atlassian.com/confdev/confluence-rest-api?continue=https%3A%2F%2Fdeveloper.atlassian.com%2Fconfdev%2Fconfluence-rest-api&amp;amp;application=dac"&gt;RESTful API&lt;/a&gt;，就开始搞了。&lt;/p&gt;
&lt;p&gt;写迁移代码，在这里 &lt;a href="https://github.com/duitang/atlassian-confluence-xxoo"&gt;atlassian-confluence-xxoo&lt;/a&gt;，已经开源了，只使用过一次，成功的从 3.0.1 迁移到 5.4.4，
理论上，支持任意版本的 3.x/4.x Confluence 迁移到最新。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;python app.py -h&lt;/code&gt; 查看帮助，不行就看看代码。&lt;/p&gt;
&lt;p&gt;希望有迁移需求的同学，搜索到这里能够获得一些帮助。&lt;/p&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2016/01/confluence-upgrade/"&gt;https://blog.log4d.com/2016/01/confluence-upgrade/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Tue, 12 Jan 2016 22:53:55 +0800</pubDate><guid>tag:blog.log4d.com,2016-01-12:2016/01/confluence-upgrade/</guid><category>confluence</category></item><item><title>SS with Haproxy</title><link>https://blog.log4d.com/2015/11/ss-with-haproxy/</link><description>&lt;p&gt;&lt;img alt="shadowsocks.png" src="http://upload-log4d.qiniudn.com/upload_dropbox/201512/shadowsocks.png" /&gt;&lt;/p&gt;
&lt;p&gt;以前用自己的 SS，Linode 美国，后来 Linode 日本，但是始终拼不过上海电信的国际带宽。
经常不稳定，丢一半的包。&lt;/p&gt;
&lt;p&gt;于是买了 &lt;a href="https://portal.shadowsocks.com/aff.php?aff=4215"&gt;SS&lt;/a&gt; 服务，
9 台服务器，自己挑觉得速度快的服务器。&lt;/p&gt;
&lt;p&gt;但一直固定某台服务器也会偶尔出问题，导致邮件出不来，网页打不开。
需要手动切换一下服务器。
于是用 HA 做了一个本地代理，调整了一些参数，让 SS 总是有快速的服务器供选择。&lt;/p&gt;
&lt;p&gt;结构：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;+-----------------+&lt;/span&gt;                                                  &lt;span class="o"&gt;+----------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;                                                  &lt;span class="o"&gt;|&lt;/span&gt;                &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="n"&gt;Server&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="o"&gt;|&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;                                           &lt;span class="o"&gt;&amp;gt;&amp;gt;|&lt;/span&gt;   &lt;span class="n"&gt;Mail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="n"&gt;v&lt;/span&gt;                                           &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;                &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+-----------------+&lt;/span&gt;    &lt;span class="n"&gt;v&lt;/span&gt;                                           &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="o"&gt;+----------------+&lt;/span&gt;
                       &lt;span class="n"&gt;v&lt;/span&gt;                                           &lt;span class="o"&gt;^&lt;/span&gt;
&lt;span class="o"&gt;+-----------------+&lt;/span&gt;    &lt;span class="n"&gt;v&lt;/span&gt;    &lt;span class="o"&gt;|----------------+&lt;/span&gt;      &lt;span class="o"&gt;+------------+&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="o"&gt;+----------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="n"&gt;v&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt;                &lt;span class="o"&gt;|&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;            &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;                &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="n"&gt;Server&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;     &lt;span class="o"&gt;|&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;|&lt;/span&gt;    &lt;span class="n"&gt;HAProxy&lt;/span&gt;     &lt;span class="o"&gt;|&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;|&lt;/span&gt; &lt;span class="n"&gt;SS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;  &lt;span class="o"&gt;|&amp;gt;&amp;gt;&amp;gt;|&lt;/span&gt;   &lt;span class="n"&gt;Browser&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="o"&gt;^&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt;                &lt;span class="o"&gt;|&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;            &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;                &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+-----------------+&lt;/span&gt;    &lt;span class="o"&gt;^&lt;/span&gt;    &lt;span class="o"&gt;+----------------+&lt;/span&gt;      &lt;span class="o"&gt;+------------+&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;+----------------+&lt;/span&gt;
                       &lt;span class="o"&gt;^&lt;/span&gt;                                           &lt;span class="n"&gt;v&lt;/span&gt;   
&lt;span class="o"&gt;+-----------------+&lt;/span&gt;    &lt;span class="o"&gt;^&lt;/span&gt;                                           &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;+----------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="o"&gt;^&lt;/span&gt;                                           &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;                &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="n"&gt;Server&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="o"&gt;|&amp;gt;&amp;gt;&amp;gt;&amp;gt;^&lt;/span&gt;                                           &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;|&lt;/span&gt;   &lt;span class="n"&gt;Evernote&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;                                                  &lt;span class="o"&gt;|&lt;/span&gt;                &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+-----------------+&lt;/span&gt;                                                  &lt;span class="o"&gt;+----------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;配置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;global&lt;/span&gt;
    &lt;span class="n"&gt;ulimit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;  &lt;span class="mi"&gt;4096&lt;/span&gt;


&lt;span class="n"&gt;defaults&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="n"&gt;global&lt;/span&gt;
    &lt;span class="n"&gt;mode&lt;/span&gt;    &lt;span class="n"&gt;tcp&lt;/span&gt;
    &lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="n"&gt;connect&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
    &lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
    &lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;


&lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="n"&gt;stats&lt;/span&gt;
    &lt;span class="n"&gt;bind&lt;/span&gt; &lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12222&lt;/span&gt;
    &lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;
    &lt;span class="n"&gt;stats&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt;
    &lt;span class="n"&gt;stats&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;
    &lt;span class="n"&gt;stats&lt;/span&gt; &lt;span class="n"&gt;refresh&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;


&lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="n"&gt;ss&lt;/span&gt;
    &lt;span class="n"&gt;bind&lt;/span&gt; &lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1081&lt;/span&gt;
    &lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="n"&gt;tcp&lt;/span&gt;
    &lt;span class="n"&gt;option&lt;/span&gt; &lt;span class="n"&gt;tcpka&lt;/span&gt;
    &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="n"&gt;balance&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;
    &lt;span class="n"&gt;balance&lt;/span&gt; &lt;span class="n"&gt;roundrobin&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="n"&gt;global&lt;/span&gt;
    &lt;span class="n"&gt;maxconn&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;

    &lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="n"&gt;connect&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="n"&gt;ms&lt;/span&gt;
    &lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
    &lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
    &lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="n"&gt;ms&lt;/span&gt;  &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;office&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;home&lt;/span&gt;
    &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="n"&gt;ms&lt;/span&gt;  &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;starbucks&lt;/span&gt;
    &lt;span class="n"&gt;retries&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;option&lt;/span&gt; &lt;span class="n"&gt;redispatch&lt;/span&gt;
    &lt;span class="n"&gt;option&lt;/span&gt; &lt;span class="n"&gt;tcp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;

    &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="n"&gt;host1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="n"&gt;maxconn&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="n"&gt;inter&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;rise&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt; &lt;span class="n"&gt;fall&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="n"&gt;backup&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="n"&gt;host2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="n"&gt;maxconn&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="n"&gt;inter&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;rise&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt; &lt;span class="n"&gt;fall&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt; &lt;span class="n"&gt;host2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="n"&gt;maxconn&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="n"&gt;inter&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;rise&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="n"&gt;fall&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;挺稳定，很快速。&lt;/p&gt;
&lt;p&gt;update: 2015-12-15，添加 &lt;code&gt;backup&lt;/code&gt; 项，选一台最稳定的做 backup，避免所有连接都超时。
update: 2015-12-13，添加 &lt;code&gt;redispatch&lt;/code&gt;  / &lt;code&gt;retries&lt;/code&gt; 项，换机器重试，
大幅提高可用性，注意，可能在非幂等状态下面产生未知错误。&lt;/p&gt;
&lt;p&gt;&lt;img alt="haproxy.png" src="http://upload-log4d.qiniudn.com/upload_dropbox/201512/haproxy.png" /&gt;&lt;/p&gt;
&lt;p&gt;在跑的 node，有些延迟高，被干掉了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="youtube.png" src="http://upload-log4d.qiniudn.com/upload_dropbox/201512/youtube.png" /&gt;&lt;/p&gt;
&lt;p&gt;看 1080P 也挺顺畅。&lt;/p&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2015/11/ss-with-haproxy/"&gt;https://blog.log4d.com/2015/11/ss-with-haproxy/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Fri, 27 Nov 2015 20:23:24 +0800</pubDate><guid>tag:blog.log4d.com,2015-11-27:2015/11/ss-with-haproxy/</guid><category>SS</category><category>HAProxy</category></item><item><title>几步拥有一个安全密码</title><link>https://blog.log4d.com/2015/10/a-security-password/</link><description>&lt;p&gt;&lt;img alt="password.jpg" src="http://upload-log4d.qiniudn.com/upload_dropbox/201512/password.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;给团队非开发同学写的邮件，对其他人也有些意义，遂贴出来。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;这个互联网越来越不安全 &lt;a href="https://www.baidu.com/s?wd=%E5%AF%86%E7%A0%81%E6%B3%84%E9%9C%B2%E4%BA%8B%E4%BB%B6&amp;amp;rsp=3&amp;amp;f=1&amp;amp;oq=%E5%AF%86%E7%A0%81%E6%B3%84%E9%9C%B2&amp;amp;ie=utf-8&amp;amp;usm=2&amp;amp;rsv_idx=1&amp;amp;rsv_pq=f9362ac90000f994&amp;amp;rsv_t=31d7A5Zyu36Hn4omAU5F9llRh3WBGl5tInDRywq%2FbPEwdPnyjCCcfGLdnNA&amp;amp;rsv_ers=xn0&amp;amp;rs_src=0"&gt;https://www.baidu.com/s?wd=%E5%AF%86%E7%A0%81%E6%B3%84%E9%9C%B2%E4%BA%8B%E4%BB%B6&lt;/a&gt;。密码数据库泄露，黑客暴库攻击，社会工程学攻击层出不穷。我给大家介绍几个小方法，轻松提高自己各类密码的安全等级。&lt;/p&gt;
&lt;p&gt;先给个地址，大家可以测试一下自己常用密码的复杂度：&lt;a href="https://howsecureismypassword.net/"&gt;https://howsecureismypassword.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;认为自己电脑水平还可以的，请直接翻到文章最后。&lt;/p&gt;
&lt;h2&gt;如何管理密码&lt;/h2&gt;
&lt;p&gt;给普通用户的建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;密码设置复杂一些，不要使用生日、日期、姓名等有意义的信息&lt;/li&gt;
&lt;li&gt;使用一套合理的密码生成策略&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;重点来了，密码生成策略：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择自己喜欢的诗词或者某句话，比如「床前明月光，疑是地上霜」，取其拼音的第一个字母 cqmygysdss&lt;/li&gt;
&lt;li&gt;将每个句子第一个单词大写，cqmygysdss -&amp;gt; CqmygYsdss&lt;/li&gt;
&lt;li&gt;加上对应网站的信息，比如 163：CqmygYsdss163，qq： CqmygYsdssqq&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大功告成，你的密码安全级别提升了。&lt;/p&gt;
&lt;p&gt;----------------------------- 高手的分界线 -----------------------&lt;/p&gt;
&lt;p&gt;给高水平选手推荐的方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;核心思想：密码分级，分离普通密码、重要密码（财务相关等）。&lt;/li&gt;
&lt;li&gt;普通密码使用大小写英文和数字混合&lt;/li&gt;
&lt;li&gt;重要密码和财务相关密码，独立生成密码，保存到 1Password / KeePass 等工具中，每个应用软件独立开来。&lt;/li&gt;
&lt;li&gt;推荐 KeePass，免费，参考 &lt;a href="http://www.iplaysoft.com/keepass.html"&gt;http://www.iplaysoft.com/keepass.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;常见弱密码和暴力破解需要时间&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;123456 / 不需要&lt;/li&gt;
&lt;li&gt;duitang / 2s&lt;/li&gt;
&lt;li&gt;huhela1993 / 10天&lt;/li&gt;
&lt;li&gt;huhela_1993 / 48年&lt;/li&gt;
&lt;li&gt;CqmygYsdssqq / 3千年&lt;/li&gt;
&lt;li&gt;]W?852HCMHFUYzrz,F / 10000^5 年（Keepass 生成的密码）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;最后&lt;/h2&gt;
&lt;p&gt;针对任何在邮箱中向大家索取：&lt;/p&gt;
&lt;p&gt;密码、员工信息、通讯录、组织架构等的邮件，请大家注意确认对方的真实身份，不要轻易透露重要信息。&lt;/p&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2015/10/a-security-password/"&gt;https://blog.log4d.com/2015/10/a-security-password/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Wed, 28 Oct 2015 00:17:44 +0800</pubDate><guid>tag:blog.log4d.com,2015-10-28:2015/10/a-security-password/</guid><category>Security</category></item><item><title>怎么打日志</title><link>https://blog.log4d.com/2015/10/how-to-log/</link><description>&lt;p&gt;&lt;img alt="logger" src="http://upload-log4d.qiniudn.com/upload_dropbox/201510/logger.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;需要解决的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;业务日志打太乱，没有位置和格式约束&lt;/li&gt;
&lt;li&gt;什么情况打日志，如何避免滥用，提高日志作用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;打日志最佳实践&lt;/h2&gt;
&lt;p&gt;Dropwizard 列出的打日志原则：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Be human readable.&lt;/p&gt;
&lt;p&gt;Be machine parsable.&lt;/p&gt;
&lt;p&gt;Be easy for sleepy ops folks to figure out why things are pear-shaped at 3:30AM using standard UNIXy tools like tail and grep.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;eg.:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;TRACE&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;06&lt;/span&gt; &lt;span class="mo"&gt;06&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;271&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Thing&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Contemplating&lt;/span&gt; &lt;span class="n"&gt;doing&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;thing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;DEBUG&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;06&lt;/span&gt; &lt;span class="mo"&gt;06&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;274&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Thing&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;About&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;thing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;INFO&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;06&lt;/span&gt; &lt;span class="mo"&gt;06&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;274&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Thing&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Doing&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;thing&lt;/span&gt;
&lt;span class="n"&gt;WARN&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;06&lt;/span&gt; &lt;span class="mo"&gt;06&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;275&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Thing&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Doing&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;thing&lt;/span&gt;
&lt;span class="n"&gt;ERROR&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;06&lt;/span&gt; &lt;span class="mo"&gt;06&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;275&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Thing&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;ugly&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RuntimeException&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;oh&lt;/span&gt; &lt;span class="n"&gt;noes&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Thing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Thing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;splunk 的最佳实践：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用清晰的键值对：&lt;code&gt;key1=val1, key2=val2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;对开发者易读&lt;/li&gt;
&lt;li&gt;全部添加时间戳&lt;/li&gt;
&lt;li&gt;使用唯一标记，比如 user_id, transaction_id&lt;/li&gt;
&lt;li&gt;使用文本&lt;/li&gt;
&lt;li&gt;使用开发者易用格式，比如 JSON&lt;/li&gt;
&lt;li&gt;尽可能多加一下数据&lt;/li&gt;
&lt;li&gt;标记调用来源，比如方法名，类名&lt;/li&gt;
&lt;li&gt;将多行事件拆分&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除了一些浅显易懂的原则，还是 dropwizard 的三条原则和解决方案靠谱。
但是两篇文章都没有告诉如果在复杂系统里面记录有用的日志，打日志生命周期是怎样的。&lt;/p&gt;
&lt;p&gt;既然找不到，我就就自行想想如何打有意义的日志。&lt;/p&gt;
&lt;p&gt;日志不怕多，而是怕繁杂难搜索，产出的数据无意义难追踪问题。所以最关键是找到一个合理通用的方式组织起来即可：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;按照模块名 com.duitang.service.module.aaa 打日志，比如 &lt;code&gt;com.duitang.service.module.aaa.log&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;一个模块一个日志，模块复杂之后，可以拆分，&lt;code&gt;com.duitang.service.module.aaa.core.log&lt;/code&gt; / &lt;code&gt;com.duitang.service.module.aaa.query.log&lt;/code&gt;，其实在这个时侯，这个模块本身由于复杂性也会面临拆分。&lt;/li&gt;
&lt;li&gt;不分离 error / info 日志，放到一个文件，通过 &lt;code&gt;grep&lt;/code&gt; 或者日志工具分离&lt;/li&gt;
&lt;li&gt;日志文件一定要 rotate，磁盘存储固定时间 N 天，远程文件存储固定时间 M 天，TTL 删除。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;补充一个日志常见使用场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;外部资源调用&lt;/li&gt;
&lt;li&gt;状态变化&lt;/li&gt;
&lt;li&gt;系统入口和出口&lt;/li&gt;
&lt;li&gt;业务异常&lt;/li&gt;
&lt;li&gt;非预期执行&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;参考文档：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dropwizard.github.io/dropwizard/manual/core.html#logging"&gt;Dropwizard Core | Dropwizard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dev.splunk.com/view/logging-best-practices/SP-CAAADP6"&gt;Logging best practices | Splunk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.infoq.com/cn/articles/why-and-how-log"&gt;程序那些事：日志记录的作用和方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2015/10/how-to-log/"&gt;https://blog.log4d.com/2015/10/how-to-log/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Sun, 18 Oct 2015 14:25:28 +0800</pubDate><guid>tag:blog.log4d.com,2015-10-18:2015/10/how-to-log/</guid><category>Logger</category></item><item><title>Redis 集群扩容</title><link>https://blog.log4d.com/2015/07/redis-migration/</link><description>&lt;p&gt;几乎每一个网站都需要用户登录状态系统，其中核心是存储 Session 的用户登录状态存储系统。
主流的实现之一是使用 Redis 存储用户登录信息，Redis 特点是功能简单、无依赖、
存储结构丰富、有持久化功能。
我大堆糖的 Session 存储系统也正是基于 Redis。&lt;/p&gt;
&lt;p&gt;可是 Redis 也存在一些问题，比如 Redis 自身没有 Sharding 功能，Replication
也是在逐步完善完善过程中
（2.4 支持 &lt;code&gt;Replication&lt;/code&gt;，2.8 加入 &lt;code&gt;Replication partial resynchronization&lt;/code&gt; 功能）。
纵观当下流行的 DB 系统，哪个不是自带这两个特性，这两个分布式特性应该成为新出产的 DB 系统的标配。
而且作者还经常发布延期，放烟雾弹，不知道 Redis 自带 Sharding 特性要等到何年马月。&lt;/p&gt;
&lt;p&gt;随着业务规模的扩大，单台 Redis 实例不能满足需求。
考虑到 Redis 也是久经考验的战士，替换掉他成本比较高，那就对 Redis 进行扩容。&lt;/p&gt;
&lt;p&gt;扩容的基本要求是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;扩大系统容量，成为分布式系统，未来有横向扩展&lt;/li&gt;
&lt;li&gt;业务不中断&lt;/li&gt;
&lt;li&gt;保证原始数据的可用性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Google 了一下，有两个项目可以参考：
&lt;a href="https://github.com/idning/redis-mgr"&gt;https://github.com/idning/redis-mgr&lt;/a&gt;
和豌豆荚的 &lt;a href="https://github.com/wandoulabs/codis"&gt;Codis&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;研究了这两项目的代码之后，发现前者存在几个问题：
需要停机进行操作。
后者提供了完整一套解决方案，Server/Proxy/Config Manage，对我这次迁移来说，太重了，
而且项目比较新，风险高，只能用来参考实现方法。&lt;/p&gt;
&lt;p&gt;最后我决定参考 redis-mgr 的方案，然后使用两种方式同步数据：
系统运行中打上 patch 完成数据的动态迁移；后台跑迁移数据脚本。&lt;/p&gt;
&lt;h2&gt;方案的关键词&lt;/h2&gt;
&lt;h3&gt;&lt;code&gt;dump&lt;/code&gt; / &lt;code&gt;restore&lt;/code&gt; / &lt;code&gt;pttl&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;核心的操作流程是：
使用 &lt;code&gt;dump&lt;/code&gt; 命令导出数据，&lt;code&gt;restore&lt;/code&gt; 命令恢复数据，&lt;code&gt;pttl&lt;/code&gt; 命令获取设置 TTL。&lt;/p&gt;
&lt;h3&gt;Presharding&lt;/h3&gt;
&lt;p&gt;Redis 官方没有 sharding 方案，但提供一种策略 presharding。
Redis 作者写了一篇&lt;a href="http://oldblog.antirez.com/post/redis-presharding.html"&gt;Redis Presharding&lt;/a&gt;。核心是：
提前做 2^n 个实例，避免扩容时候数据迁移，一般使用 2^n 个实例，
目的是为了能够自然地乘以 2 进行拆分。
这些实例可以分开放，也可以放在同一台机器上面。&lt;/p&gt;
&lt;p&gt;我这次操作，将 &lt;code&gt;OLD_CLUSTER&lt;/code&gt; 的一个实例拆分为了 &lt;code&gt;NEW_CLUSTER&lt;/code&gt; 的 32 个实例，
跑在 4 台服务器上面。&lt;/p&gt;
&lt;h3&gt;Twemproxy&lt;/h3&gt;
&lt;p&gt;Redis 的 经典款 Proxy，用来实现对多个 Redis 实例 sharding，
Twitter 出品，&lt;a href="https://github.com/twitter/twemproxy"&gt;链接&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;一致性 Hash&lt;/h3&gt;
&lt;p&gt;传统的 Hash 方法是 &lt;code&gt;hash(key) = value % nodes.length&lt;/code&gt;，
当加入、减少 Hash 节点时候，会导致 &lt;code&gt;hash(key)&lt;/code&gt; 的全部失效。
典型的一致性 Hash 算法，&lt;a href="https://github.com/RJ/ketama"&gt;Ketama&lt;/a&gt; 通过环状 node 分布，解决了这个问题。&lt;/p&gt;
&lt;p&gt;Twemproxy 还提供 &lt;code&gt;modula&lt;/code&gt; 和 random 两种分布式方案。&lt;/p&gt;
&lt;h3&gt;db 大小预估&lt;/h3&gt;
&lt;p&gt;Redis 只能查看整个实例内存尺寸。不能查看单个 db。
使用 &lt;code&gt;ramdomkey&lt;/code&gt; 做抽样检查，取 1% key 抽样，估计单个 key 大小，
然后做 benchmark 估算操作性能，估算操作时间。&lt;/p&gt;
&lt;h3&gt;动态迁移数据&lt;/h3&gt;
&lt;p&gt;为了在迁移过程中保证服务可用，需要将数据兼容 Redis 集群 &lt;code&gt;OLD_CLUSTER&lt;/code&gt; / &lt;code&gt;NEW_CLUSTER&lt;/code&gt;，
业务代码必须同时支持访问两个集群，做法也很简单&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;访问 &lt;code&gt;NEW_CLUSTER&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;有数据则继续操作，无数据则访问 &lt;code&gt;OLD_CLUSTER&lt;/code&gt;，获取数据 &lt;code&gt;DATA&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将数据和 TTL 保存到 &lt;code&gt;NEW_CLUSTER&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将这个逻辑封装成一个 client，替换掉原来 Redis Client 即可。&lt;/p&gt;
&lt;p&gt;注意，这个点可能产生幻读，读取 key 和写入 key 有个时间差，
但是我处理的 session 是 immutable 数据，不会出现问题。
而如果将 Redis 用作 Persistence，就要评估对业务的影响了。&lt;/p&gt;
&lt;h3&gt;后台迁移数据&lt;/h3&gt;
&lt;p&gt;依赖用户访问来进行迁移，效率太低了，这个迁移时间和最长 TTL 时间相当，
需要主动将这个数据从 &lt;code&gt;OLD_CLUSTER&lt;/code&gt; 迁移到 &lt;code&gt;NEW_CLUSTER&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;方案也很简单，使用 &lt;code&gt;randomkey&lt;/code&gt; 获取一批数据，然后按动态迁移数据方法进行迁移。&lt;/p&gt;
&lt;h3&gt;pipeline&lt;/h3&gt;
&lt;p&gt;如果在业务逻辑中使用了 PIPELINE，就会遇到问题，需要改写掉业务方案，
待迁移完成之后，再进行恢复。&lt;/p&gt;
&lt;h3&gt;multikey&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;mget&lt;/code&gt; / &lt;code&gt;mset&lt;/code&gt; 等多键操作方法需要注意拆解 key，然后一一 &lt;code&gt;dump&lt;/code&gt; / &lt;code&gt;restore&lt;/code&gt; /
&lt;code&gt;ttl&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;正式操作&lt;/h2&gt;
&lt;p&gt;线上操作的数据：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# 0.483 g db0&lt;/span&gt;
&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;444&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;__main__&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dumps&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt; &lt;span class="mi"&gt;1014&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1375371&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;...,&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;974.183676004&lt;/span&gt;
&lt;span class="cp"&gt;# 4.552 g db1&lt;/span&gt;
&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;422&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;__main__&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dumps&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt; &lt;span class="mi"&gt;1392&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7711834&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;...,&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3076.41647506&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2015/07/redis-migration/"&gt;https://blog.log4d.com/2015/07/redis-migration/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Sun, 26 Jul 2015 15:33:49 +0800</pubDate><guid>tag:blog.log4d.com,2015-07-26:2015/07/redis-migration/</guid><category>Redis</category></item><item><title>带理想的执行者 - 柳比歇夫的一生</title><link>https://blog.log4d.com/2015/07/liu-bi-xie-fu/</link><description>&lt;p&gt;作为战斗民族的俄罗斯民族，不但能在热带风暴级的灿鸿中进行正常起降，
历来也盛产各种奇葩人物。
最近我有看到一本描述一个科学家的如何生活的书，叫「奇特的一生」。
让人拍案称奇。&lt;/p&gt;
&lt;p&gt;&lt;img alt="201507/liu_bi_xie_fu.jpg" src="http://77g0h6.com1.z0.glb.clouddn.com/upload_dropbox/201507/liu_bi_xie_fu.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;主人公是一位名叫柳比歇夫的科学家，想必他在「回首往事时候没有因为虚度年华而悔恨」，
因为他将自己的一生都精确的奉献到分类学、地蚤研究上面。
他的工作投入，不是单纯激情洋溢投入，而是精确到分钟级别的投入，
是奉献完整一生的投入。&lt;/p&gt;
&lt;p&gt;除了学术上面的成功，他的时间记录法也很牛逼，甚至让苏联科学院进行研究。怎么描述他的牛逼呢？如果他生活在今天，大致会这样写：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;今天我 19:00 - 19:25 看了新闻联播，感受到社会各阶级在党的领导下面获得令人振奋的成绩&lt;/p&gt;
&lt;p&gt;19:25 休息了一会，避过无聊的天气预报时间&lt;/p&gt;
&lt;p&gt;19:30 - 20:30 学习了「XXX 的讲话精神研究」&lt;/p&gt;
&lt;p&gt;附加工作：20:35 - 20:40 小解，顺便刷了一会朋友圈作为今天的娱乐放松，评论了隔壁老王老婆的出行照片&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看到没有，他精确的记录了自己的时间使用记录，犹如脑子里面有个精确的 GTD
管理器，那个年代 David Allen 还没出生呢，肯定也谈不上了解 Get Things Done。苏联真是靠各类牛逼人物撑起了一战、二战时候工业大跃进和各种黑科技的崛起。&lt;/p&gt;
&lt;p&gt;简单记录时间当然不能带来效率和成果的提升，柳比歇夫明显没有纳什这种神经病天才的聪明，他能获得这样比较高的成就，必须还有真正的大招。&lt;/p&gt;
&lt;p&gt;第一招是他有坚定的奋斗目标：「创立生物自然分类法」。我们暂不管这不出名的法则是什么，能在 1918 年（他时年 28 岁，我擦，和我现在差不多大啊）就提出自己一生奋斗的目标，着实了不起。
从书中的记录来看，28 岁的青年教师柳比歇夫，
在日记里面描述他想要做什么事情，需要具备什么素质，
并且在估算重要里程碑时间点。&lt;/p&gt;
&lt;p&gt;我估摸着，在战争中成长起来的人，不仅仅需要幸运，还需要勇气和坚韧意志，
19 世纪初年，沙皇政权摇摇欲坠，布尔什维克们应该还在密谋革命造反，
民众生活艰苦（感觉好像民国时期的中国）。
这种时代的大环境造就了各阶级人物命运的跌宕起伏，附带效应是出产优秀的文人和思想家。
柳比歇夫既然在这个时期成长，那也会渴望建树功勋，做点改变世界的事情。&lt;/p&gt;
&lt;p&gt;第二招是，他就去做了。&lt;/p&gt;
&lt;p&gt;「听过了很多大道理，却依然过不好这一生」，无非是缺在执行。
柳比歇夫的时间记录法，不是简单作为一个日记本在使用，
关键点在于回顾和计划。通过过去的记录，分析自我，总结经验，判断未来。&lt;/p&gt;
&lt;p&gt;哎哟，道理说起来都简单，做起来都难，柳比歇夫作为一个很好的例子，
告诉我们，一个资质普通的人，决定牺牲自我，奉献到某个特定事业时候，
可以获得的成绩，他完成了「立言」。&lt;/p&gt;
&lt;p&gt;在这个物欲横流，信息多得炸掉脑仁，各类媒体都在抢占眼珠的时代，能够不忘初心，
去做点实际的事情，是一件不容易的事情。
对快 30 的我来说，别说「立言」，就光「立命」，
就已经让我困苦不堪，在这和平年代，没有家仇国恨美国梦，想要做点牛逼的事情，就得需要勇气和爱来驱动。&lt;/p&gt;
&lt;p&gt;&lt;img alt="201507/da_sheng_gui_lai.jpeg" src="http://77g0h6.com1.z0.glb.clouddn.com/upload_dropbox/201507/da_sheng_gui_lai.jpeg" /&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2015/07/liu-bi-xie-fu/"&gt;https://blog.log4d.com/2015/07/liu-bi-xie-fu/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Sun, 12 Jul 2015 17:29:19 +0800</pubDate><guid>tag:blog.log4d.com,2015-07-12:2015/07/liu-bi-xie-fu/</guid><category>读书笔记</category></item><item><title>2015 沪港 Hackathon</title><link>https://blog.log4d.com/2015/04/2015-hk-sh-hackathon/</link><description>&lt;p&gt;我想参加黑客马拉松很久了，去年就观战过 2014 沪港黑客马拉松。
但苦于需要连续两天时间，一直没有下定决心参加。&lt;/p&gt;
&lt;p&gt;上周末本来安排了两天的团队会议，后来临时取消，
给了我充足的时间。于是我在 27 号周五下午，报名参加了 27 号晚上开始的 2015 沪港 Hackathon。&lt;/p&gt;
&lt;p&gt;&lt;img alt="5D3_0001.jpg" src="http://77g0h6.com1.z0.glb.clouddn.com/upload_dropbox/201504/5D3_0001.jpg" /&gt;&lt;/p&gt;


&lt;p&gt;独自作战的我，在现场寻觅了几个小伙伴组了一个队伍，其中有 &lt;a href="http://homeway.me/2015/03/30/play-music-through-senses/"&gt;小草&lt;/a&gt; / tevin / 女王 / Doris / n1k0。
小草负责树莓派服务端，tevin 负责传感器取数据，我……负责前端游戏逻辑，哈哈哈，我已经三年没有写前端代码了，为了团队职责分工，只能赶鸭子上架了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="IMG_4467.JPG" src="http://77g0h6.com1.z0.glb.clouddn.com/upload_dropbox/201504/IMG_4467.JPG" /&gt;&lt;/p&gt;
&lt;p&gt;经过现场的头脑风暴，我们最后选定了基于树莓派的游戏：
通过感应玩家的手掌移动距离来玩类似节奏大师的音乐游戏。&lt;/p&gt;
&lt;p&gt;具体的游戏原理，可以在 &lt;a href="http://homeway.me/2015/03/30/play-music-through-senses/"&gt;基于树莓派的体感音乐游戏&lt;/a&gt; 看到，
源码也在 &lt;a href="https://github.com/2015-hackathon/hackathon"&gt;Github&lt;/a&gt; 这里。&lt;/p&gt;
&lt;p&gt;最关键是，我们这支临时凑齐的战队，经过两天一夜的奋战，拿了一等奖（第二名），拥有了去香港参加国际赛资格和一堆乱七八糟的云服务器现金券、折扣券！！！撒花~~撒花~~&lt;/p&gt;
&lt;p&gt;&lt;img alt="5D3_2087.jpg" src="http://77g0h6.com1.z0.glb.clouddn.com/upload_dropbox/201504/5D3_2087.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;第一次参加 Hackathon，就能获得这个奖，觉得自己蛮幸运，
和队友合作愉快，和队友通宵到三点多调整音乐命中算法，然后在早上 6 点钟被冻醒。五音不全的我花了几个小时将超级玛丽五线谱转化为发音库能够理解的符号描述。&lt;/p&gt;
&lt;p&gt;虽然最后由于时间原因不能和队友去香港参加比赛，但是仍然祝愿他们在香港能够继续加油。各位队友，Have fun。&lt;/p&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2015/04/2015-hk-sh-hackathon/"&gt;https://blog.log4d.com/2015/04/2015-hk-sh-hackathon/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Sat, 04 Apr 2015 00:39:41 +0800</pubDate><guid>tag:blog.log4d.com,2015-04-04:2015/04/2015-hk-sh-hackathon/</guid><category>技术达人</category><category>上海</category></item><item><title>读《遇见未知的自己》</title><link>https://blog.log4d.com/2015/03/real-self/</link><description>&lt;p&gt;「遇到未知的自己」这本书讲的是如何来认识自己，理解自己的情绪，和自己内心沟通。&lt;/p&gt;
&lt;p&gt;&lt;img alt="遇到未知的自己" src="http://img3.douban.com/lpic/s3403254.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://book.douban.com/subject/2340100/"&gt;豆瓣链接&lt;/a&gt; /
&lt;a href="http://www.amazon.cn/%E9%81%87%E8%A7%81%E6%9C%AA%E7%9F%A5%E7%9A%84%E8%87%AA%E5%B7%B1-%E5%BC%A0%E5%BE%B7%E8%8A%AC/dp/B009WNRMM0/ref=sr_1_1?s=digital-text&amp;amp;ie=UTF8&amp;amp;qid=1426319187&amp;amp;sr=1-1&amp;amp;keywords=%E9%81%87%E8%A7%81%E6%9C%AA%E7%9F%A5%E7%9A%84%E8%87%AA%E5%B7%B1"&gt;Kindle 版本购买链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下面我写的倒不是什么读后感，而是我自己去解决自己焦虑和压力的一个探寻过程，希望对你有帮助。&lt;/p&gt;
&lt;h2&gt;不完美&lt;/h2&gt;
&lt;p&gt;最近一年来，我生活和工作状态持续处于亚健康状态。表现出来的状况是：工作上对产出的成绩不满意，
对自己不够自信，追寻的目标（创业）变得模糊和不可量化；生活受到影响，开始陷入到哪里去的困惑。
很久没有兴奋的迎着早晨第一缕阳光蹦着下楼梯，人变得焦虑和烦躁。&lt;/p&gt;
&lt;p&gt;这种压抑，让我回忆起小时候周日晚上动画片的结尾曲，昏黄、萧瑟，似乎一切都走向终结。
哈，好在我不是那么消极的人，我热爱生活，期望创造价值，渴望别人的认同，
我不愿意自己长期陷入这种低潮。&lt;/p&gt;
&lt;p&gt;我做了一些尝试和挣扎：给自己添加束缚（变成一个“工作日素食者”），计划自己工作和生活（践行 GTD），
意识到自己情绪抖动并尝试控制自己的情绪。
针对能力上面不足，我也去阅读了彼得德鲁克的系列丛书，柯维的「高效能人士的七个习惯」。
这些措施的确帮助了我，我觉得自己比以前更强大。
但是始终没有彻底解决我的问题，无法治愈我内心的恐惧和压抑。&lt;/p&gt;
&lt;p&gt;我意识到：我在焦虑，继而恐惧、自卑，害怕面对未知，更害怕面对不完美的自己。&lt;/p&gt;
&lt;h2&gt;求解&lt;/h2&gt;
&lt;p&gt;周围能提供帮助的人不多，好在有互联网。第一个药丸在知乎，我直接搜索了关键词「自我」和「自卑」。
知乎关于认识自己有几个相当不错的问答，从中得到的观点有下列几个：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;真正的进步不是那么焦虑的自我怀疑，而是带着自我接纳体会进步的喜悦 &lt;a href="http://www.zhihu.com/question/22063688/answer/20499104"&gt;via&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;我们的一生就不断地在优越感和自卑之间切换 &lt;a href="http://zhi.hu/YTzH"&gt;via&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;其中有若干个回答有提到「遇到未知的自己」，我也对这本书略有耳闻，于是从亚马逊上购买了，
没想到仅仅花了花了几个小时就一口气读完，很久没有这么舒畅的读完一本书了。&lt;/p&gt;
&lt;h2&gt;身体、情绪、思想&lt;/h2&gt;
&lt;p&gt;从书中收获最大的一点，就是和自己的内心进行沟通：通过运动来提高自己和身体的合一；
通过臣服来客观认同理解自己的情绪；通过冥想来和自己的潜意识沟通，了解自己的内心，
增强对自己和外部的觉察能力。&lt;/p&gt;
&lt;p&gt;认识自己的一个重要途径是回溯，重新和过去的自己沟通。这种感觉很奇妙，
似乎在看另外一个生命。他慢慢长大，人生起伏，自信自卑，受到家庭的教育，
被师长激励，选择新的挑战，遇到新的困难和低谷，他的优柔寡断，他的努力和堕落，
他受到的爱护和痛苦。&lt;/p&gt;
&lt;p&gt;到哪里去？这个问题我依然没有找到很好的答案，虽然有「爱、喜悦、和平」这个大一的概念，
但实在不够落地，就像「内圣外王」一样，太过于笼统。&lt;/p&gt;
&lt;p&gt;即便到哪里去没有一个明确地答案，但是当和自己的内心的达成一致，能够坦然面对自己的不完美，
未来的不确定之后，不管往哪里走，都不是在原地转动。&lt;/p&gt;
&lt;p&gt;现在我学会了运动，每周两次 5km 跑步，跑步时候感觉自己释放恐惧，追逐目标。
还在学会如何臣服自己的情绪，面对未知做的决策即便会不安和恐惧，也不至于影响自己太久。&lt;/p&gt;
&lt;h2&gt;糟粕&lt;/h2&gt;
&lt;p&gt;这本书里面有几段鸡汤文，什么「水知道答案」，女主回忆自己诞生过程而泪流满面，
显得很鬼扯。作为工程师的我，对这些内容表示质疑。&lt;/p&gt;
&lt;h2&gt;End&lt;/h2&gt;
&lt;p&gt;这本书不完美，但是它在一个合适的时间点给了我启发和帮助。我很感谢它，如果你有和我类似的困惑，建议去读一下。&lt;/p&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2015/03/real-self/"&gt;https://blog.log4d.com/2015/03/real-self/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Sat, 14 Mar 2015 14:38:39 +0800</pubDate><guid>tag:blog.log4d.com,2015-03-14:2015/03/real-self/</guid><category>读书笔记</category></item><item><title>2014 惑</title><link>https://blog.log4d.com/2015/01/2014/</link><description>&lt;p&gt;上周刚做完了自己的 2014 工作 Review，其中最大的挑战就是工作职能的变化：
由一个开发工程师变成一个团队的 Leader。&lt;/p&gt;
&lt;p&gt;3 月份开始带领功能线小组，11 月份带性能线小组，将近一年的时间，
业绩结果只能用四个字来描述&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不尽人意&lt;/p&gt;
&lt;/blockquote&gt;


&lt;p&gt;从小的坏毛病：延迟、思考浅薄、计划能力差、犹豫不决被一一放大，
给管理团队带来很大的问题。
同时一个更大的问题出现了，曾经我将目标设定为成为一个优秀的产品工程师，
现在我已经站在这个位置上，下一步的目标（创业）离我还太远，导致驱动力出现了问题。&lt;/p&gt;
&lt;p&gt;接二连三的失败，让我的自信心也受到了很大的挫折。更加举棋不定。&lt;/p&gt;
&lt;p&gt;我在九月份 Evernote 提出几个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个团队，是否健康，如何评判&lt;/li&gt;
&lt;li&gt;50 规模下面，工作流程，协调方式，人数逐渐变多时候，会怎样的变化？&lt;/li&gt;
&lt;li&gt;如何管理比自己业务能力强的员工&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;直到昨天，我才在问题下面进行了回答：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;一个团队，是否健康，如何评判&lt;ul&gt;
&lt;li&gt;业务是否发展旺盛&lt;/li&gt;
&lt;li&gt;制定目标是否到达&lt;/li&gt;
&lt;li&gt;团队成员是否工作开心&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;50 规模下面，工作流程，协调方式，人数逐渐变多时候，会怎样的变化？&lt;ul&gt;
&lt;li&gt;成员由多重职责变成明确划分&lt;/li&gt;
&lt;li&gt;计划变得更重要，而不是早期的「创业公司没有战略和部署」&lt;/li&gt;
&lt;li&gt;对管理能力的要求变高，需要花费更多时间让其他人认可目标，信息沟通和同步成本变高&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;如何管理比自己业务能力强的员工&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;从技术管理上来看，管理者无非需要&lt;ul&gt;
&lt;li&gt;技术强，碾压&lt;/li&gt;
&lt;li&gt;情商高，服气&lt;/li&gt;
&lt;li&gt;资历老，调动资源&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;少管，一起来完成目标&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;也许回答的还不够好，但总算可以不再逃避这些问题，直面挑战了。&lt;/p&gt;
&lt;p&gt;从最早的压力，到两个项目完成过程中的困惑，再到现在的知道方向，中间甘苦自知。
儒家说，三十而立、四十不惑、五十知天命，我现在应该处在惑往不惑的过程中。&lt;/p&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2015/01/2014/"&gt;https://blog.log4d.com/2015/01/2014/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Sun, 25 Jan 2015 15:18:04 +0800</pubDate><guid>tag:blog.log4d.com,2015-01-25:2015/01/2014/</guid><category></category></item><item><title>《项目管理修炼之道》笔记</title><link>https://blog.log4d.com/2014/08/manage-it/</link><description>&lt;p&gt;&lt;img alt="项目管理修炼之道" src="http://img3.douban.com/lpic/s6089513.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;随着团队规模的变大，成员之间合作的模式逐渐由单打独斗变成协作开发。
这时候会遇到很多意想不到的问题，项目管理的重要性也就显现出来了。
&lt;a href="http://book.douban.com/subject/4058336/"&gt;项目管理修炼之道&lt;/a&gt;
是一本讲技术类项目管理方法和实践的书。
从业者可以从这本书获得了有益的指导。
我在 Kindle 上面翻了好几遍，感觉受益匪浅，就把读书笔记拿出来供大家参考。&lt;/p&gt;
&lt;h2&gt;1、内容&lt;/h2&gt;
&lt;p&gt;核心内容是项目管理的生命周期和每个阶段的交付物：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目章程&lt;/li&gt;
&lt;li&gt;日程规划&lt;/li&gt;
&lt;li&gt;开发（控制节奏）&lt;/li&gt;
&lt;li&gt;结束项目，项目回顾&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何和投资者沟通&lt;/li&gt;
&lt;li&gt;管理会议&lt;/li&gt;
&lt;li&gt;控制项目节奏&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;2、关键字&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;项目定义：一个独特的任务或是系统化的流程，其目的是创建新的产品或服务，
产品和服务交付完成标志着项目的结束。项目都有风险，并且受制于有限的资源。&lt;/li&gt;
&lt;li&gt;关键（章程）&lt;ul&gt;
&lt;li&gt;驱动因素：功能集合、发布时间、缺陷等级，只能有一个&lt;/li&gt;
&lt;li&gt;约束：环境、流程、人力资源、预算等，决定了规模&lt;/li&gt;
&lt;li&gt;浮动因素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;规划：带有项目发布条件的项目计划&lt;ul&gt;
&lt;li&gt;日程安排：对工作项目的有序描述&lt;/li&gt;
&lt;li&gt;发布条件：S.M.A.R.T.，需要一起协商&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;仪表盘&lt;ul&gt;
&lt;li&gt;定性或者定量的方式，将结果公布出来&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;保持项目节奏的方法&lt;ul&gt;
&lt;li&gt;快速开发&lt;ul&gt;
&lt;li&gt;持续集成&lt;/li&gt;
&lt;li&gt;自动冒烟测试&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;功能拆分和日程排期&lt;ul&gt;
&lt;li&gt;按功能实现，而非架构&lt;/li&gt;
&lt;li&gt;优先实现高价值功能&lt;/li&gt;
&lt;li&gt;通过用户故事、角色和场景来定义需求&lt;/li&gt;
&lt;li&gt;分离需求和 GUI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;质量控制&lt;ul&gt;
&lt;li&gt;复查：Code Review，结对编程&lt;/li&gt;
&lt;li&gt;重构&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;项目成员的角色构成&lt;ul&gt;
&lt;li&gt;项目经理&lt;/li&gt;
&lt;li&gt;架构师&lt;/li&gt;
&lt;li&gt;开发人员&lt;/li&gt;
&lt;li&gt;测试人员&lt;/li&gt;
&lt;li&gt;业务分析师&lt;/li&gt;
&lt;li&gt;运维&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3、我的问题和部分解答&lt;/h2&gt;
&lt;p&gt;Q：项目经理的职责是什么？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;监控项目进度，牢记里程碑验收条件。保障项目按需求交付。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Q：如何成为优秀的项目经理？&lt;/p&gt;
&lt;p&gt;项目经理需要下面这些技能：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;倾听&lt;/li&gt;
&lt;li&gt;谈判技巧&lt;/li&gt;
&lt;li&gt;协作和表达技能&lt;/li&gt;
&lt;li&gt;目标导向&lt;/li&gt;
&lt;li&gt;真诚，尊重&lt;/li&gt;
&lt;li&gt;信息不足下进行决策能力&lt;/li&gt;
&lt;li&gt;解决问题的技巧&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发现问题能力&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;理解产品的生命周期&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;认识自己技术的不足&lt;/li&gt;
&lt;li&gt;能够安排日程&lt;/li&gt;
&lt;li&gt;能够估算任务，并指导其他人完成任务估算&lt;/li&gt;
&lt;li&gt;指导如何管理风险，评估项目状态&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Q：用何种生命周期组织项目？&lt;/p&gt;
&lt;p&gt;互联网项目看中发布时间和功能集合，适合用迭代式的生命周期。&lt;/p&gt;
&lt;p&gt;Q：如何安排项目日程？&lt;/p&gt;
&lt;p&gt;细化日程，让成员自省讨论，&lt;strong&gt;基于可交付物&lt;/strong&gt; 的日程规划。
注意，这里的日程和具体的时间安排没有关系，而是处理任务之间的依赖关系。&lt;/p&gt;
&lt;p&gt;Q：如何估算日程中每个任务&lt;/p&gt;
&lt;p&gt;书中给了一个方法：使用日期范围，但问题是，在小团队工作时候，
可能整个项目周期也就 1 个月，如果按日期范围估计，就比较难评估了。&lt;/p&gt;
&lt;p&gt;还有一个方法是使用「1、2、3、5、8、13、21、34、55、89」这样的方式来拆解估算任务。&lt;/p&gt;
&lt;p&gt;每个任务可以拆解成小石子（不超过 2 天的任务）。&lt;/p&gt;
&lt;p&gt;还有一个 tip 是使用波浪式规划，即不在一开始时候规划全部。在进行的过程中调整日程。
以 2 周或者 4 周的长度规划，太长了就更容易出错，对预测能力要求太高。&lt;/p&gt;
&lt;p&gt;项目经理目标是&lt;strong&gt;按驱动因素完成既定需求，而不是给一个漂亮的甘特图&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;关于估算日程的三条忠告：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;绝对不要提供确定的项目结束日期&lt;/li&gt;
&lt;li&gt;任务越小，估算起来越容易&lt;/li&gt;
&lt;li&gt;寻求估算的准确性，而不是精确性&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Q：前期延迟了，后期能追赶么？&lt;/p&gt;
&lt;p&gt;不能，强行安排的话，是一个日程安排游戏。但是从 Deadline 意识来说，需要对成员达成 Deadline 意识。&lt;/p&gt;
&lt;p&gt;Q：如何创建优秀团队？&lt;/p&gt;
&lt;p&gt;招对的人，激励个人，形成团队凝聚力。
团队发展分成 5 个时期：组建、激荡、规范、表现、终止。&lt;/p&gt;
&lt;p&gt;Q：如何估算日程安排里面的时间？&lt;/p&gt;
&lt;p&gt;参见上面所说「1、2、3、5、8、13」和小石子。&lt;/p&gt;
&lt;p&gt;Q：如何对项目的模块进行拆分？&lt;/p&gt;
&lt;p&gt;书中没有过多提及，我从自己经验得出的答案是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原则：拆解成耦合度低，可以并发进行的子任务，互不依赖&lt;/li&gt;
&lt;li&gt;每个拆分出来的子任务，是可以被描述，并且其产出是可量化的&lt;/li&gt;
&lt;li&gt;如果子任务之间，有相互依赖点，需要在早期就约定好接口和交付时间点&lt;/li&gt;
&lt;li&gt;如果一个模块 A 很大（比如超过 4 周开发时间），
那应该团队作战以这个模块为开发目标，将模块 A 拆成多个子任务，然后并发进行。
而不是模块 A、模块 B 并发进行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Q：如何保持项目节奏，避免发生延期？&lt;/p&gt;
&lt;p&gt;参见上面的「关键词」中「项目节奏」部分。&lt;/p&gt;
&lt;p&gt;Q：如何管理工程（多个项目），并且在里面进行协调？&lt;/p&gt;
&lt;p&gt;多个项目，但是&lt;strong&gt;使用一个发布计划&lt;/strong&gt;（类比前端、后台、移动端）。
并一起制定好各个项目的计划。如果基于敏捷开发，问题可以被简化，
因为每条线都是随时可以发布的状态。如果不行，那就组织里程碑的发布计划。&lt;/p&gt;
&lt;p&gt;需要管理各个子项目的项目经理，并且创建统一的日程表。&lt;/p&gt;
&lt;p&gt;Q：团队里面有执行迟缓，不听从决策的人员，怎么办？&lt;/p&gt;
&lt;p&gt;这个问题其实是管理问题，而不是项目管理问题。
书中并没有合适答案，我自身感想是这几方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;弄清楚为什么不听从决策，需要明确项目的发布目标&lt;/li&gt;
&lt;li&gt;从精神、物质上面进行激励&lt;/li&gt;
&lt;li&gt;直白的进行沟通，向对方请求帮助&lt;/li&gt;
&lt;li&gt;从自身寻找问题，提高自身沟通能力和专业技能能力&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2014/08/manage-it/"&gt;https://blog.log4d.com/2014/08/manage-it/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Sun, 31 Aug 2014 20:12:06 +0800</pubDate><guid>tag:blog.log4d.com,2014-08-31:2014/08/manage-it/</guid><category>项目管理</category></item><item><title>加班那点事儿</title><link>https://blog.log4d.com/2014/08/work-overtime/</link><description>&lt;p&gt;前段时间，一个好基友告诉我，他换了份工作，去了一家用户数据表现堪称吓人的创业公司去了。其中有一个细节引起了我的注意：他们在实行 996 的上班制度。即 9 点钟上班，9 点钟下班，一周工作 6 天。&lt;/p&gt;
&lt;p&gt;同样实行这种制度的还有阿里的来往团队。当年（其实就是去年）在抢占移动端 IM 入口时候，马云都使用了红包政策，来往的工程师在高压之下，也实行 996 了制度。
我问过阿里的朋友，他们表示，整体加班情况的确比较多。我追问了一下加班效率，证实了我的一个猜想，有些个人是晚上加班没事干，尤其有些测试工程师，白天没活干，晚上活多，还经常等到 9 点之后才有事情。这个现象也许不是普遍的，但的确存在。&lt;/p&gt;
&lt;p&gt;我自己是反感加班的，曾经面到一个开发工程师，表示工作三年来，加班时常为 0h。当时有点被这种表述惊讶了一下，然后我认为他是在标榜自己工作效率高。
这种表述也反映出他作为工程师，认为加班是一个负面的表现。
的确，一个团队再如何厉害，也不可能标榜他们是靠加班来获得核心竞争力的。知识劳动者又依靠劳动密集来获得产出。
雷布斯说过「你不要用战术上的勤奋掩盖战略上的懒惰」，在我看来，靠加班提高产出就属于战术上的勤奋。&lt;/p&gt;
&lt;p&gt;从个人工作效率上来看，工作时长和产出并不是线性的。连续工作十几个小时，甚至可能将平均效率降低，有科学实验表明，连续注意力集中在 1.5h 为好，过长时间会造成注意力降低。
另外，过多工作时间把人累的和土狗一样，长期以往，工作会挤占了太多生活空间，生活本身也会变得紧张压抑，搞不好又一个程序猿过劳死。要完成既定目标有很多种办法，而增长时间工作时间一定不是最有效的那种。&lt;/p&gt;
&lt;p&gt;我也特别讨厌所谓工作到凌晨三点的做法（除非特殊项目需要），我理解的加班是挤占掉个人娱乐、学习时间，投入到具体目标的实现上面去。而不是挤占休息时间，即便加班，也需要保持充分的休息，否则加个屁班，浑浑噩噩的，一点产出都没有。&lt;/p&gt;
&lt;p&gt;我所在的团队并不提倡加班文化，虽然老板自己工作到很晚，但是从来没有在制度或任务安排上要求某某某加班。从个人生活和健康工作角度上，我觉得她还是挺关爱下属的。&lt;/p&gt;
&lt;p&gt;但是（此处话锋一转），互联网变化速度太快，资本市场的青睐也是有固定的时间周期，特定项目的开发需要阶段性冲刺。毕竟机会对每个团队来说，都是转瞬即逝，有时候要抢占位置，或者短期内冲刺出成绩，比如说蘑菇街 3 个月上线商品购物平台，又或者淘宝双 11 活动。都需要在固定时间点之前完成必须做到的目标。这时候，战略的调整的同时，通过投入时间的增大也可以降低风险，争取更多的机会。
从团队需求角度来看，这种情况下面的加班不可避免。&lt;/p&gt;
&lt;p&gt;还有一种被迫的情况是在系统不稳定和特殊意外事件发生时候，比如线上出现问题，需要有人立刻去解决。
说到这个话题，我就会想起我的同事小云姐（对他甚是怀念），系统遇到问题时候都会第一个冲上去解决问题，不但当场处理掉问题，在事后对问题的 Review 和处理也是推动力极强，真是不可多得的好员工。
一般来说，这类突发被迫的情况不应该是常态，作为后台工程师，需要在平时就做好预案，处理各类突发情况，做好高可用、容错、故障转移、故障降级等预备方案。而不是出了问题大家都忙起来。但突发的情况毕竟不能完全避免。当年世界格局稍微风吹草动，Twitter 就可能搁浅大鲸鱼，这时候，就也可能需要通过加班进行解决。&lt;/p&gt;
&lt;p&gt;加班到底该不该，问题的本质，应该是这个加班有没有意义，是否对团队有贡献。
从目标导向的角度来看，没有设定产出或者无贡献的加班。如果老板哪天说，「不管你干什么，都必须留下来加班」，那就是该跟他说拜拜的时候了。&lt;/p&gt;
&lt;p&gt;从员工自身的角度来看这个事情，需要意识到作为团队的成员，不应该固守自己的一亩三分田，而应该考虑在团队需要的地方提高贡献度。Facebook 的工程师的高自由度，亚马逊内部称之为 SDE（Someone Do Everythind）的文化，都说明在给予工程师自由平等透明时候，需要工程师自身意识到目标设立和全局思考的重要性。&lt;/p&gt;
&lt;p&gt;加班的洋文叫做 work overtime，即正常的 work time 之外的工作时间。那可以思考一下，一个知识工作者，在一个 24h 需要对外服务的行业里，严格定义 work time，到底是对团队有益的，还是对团队不利？&lt;/p&gt;
&lt;p&gt;说完这段话，我是有点惭愧的，似乎站在了周扒皮或资本家的角度来看待加班这点事。站在雇员的角度看，虽然短期痛苦一些，但是提高了对团队的贡献度，提高团队竞争力，让组织可以活得更健康，对双方的成长都是有利的。&lt;/p&gt;
&lt;p&gt;我反对无意义的加班，加班是为了不加班，加班是为了目标冲刺。&lt;/p&gt;
&lt;p&gt;嗯，文章开头中提到的好基友，在朋友圈表示，最近鸡血打的有点满，做产品设计如何开心云云，这种状态就是非常棒的状态。在竞争激烈的互联网行业，如何理性激发团队战斗力，是一件难做但是必须做好的事情。&lt;/p&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2014/08/work-overtime/"&gt;https://blog.log4d.com/2014/08/work-overtime/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Sat, 30 Aug 2014 17:39:19 +0800</pubDate><guid>tag:blog.log4d.com,2014-08-30:2014/08/work-overtime/</guid><category>程序人生</category></item><item><title>痛快活</title><link>https://blog.log4d.com/2014/08/life-with-pain/</link><description>&lt;p&gt;上个月回家，在亲戚家里和侄子聊天，他刚从大学毕业，在家人的帮助下面找了算是对口的工作，对工作之后的状态有一些茫然，看不到前途和未来，我问了一个问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你平时是怎么面对困难和挑战的？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;犹豫了一会儿，他告诉我：「大部分时间都是逃避掉困难」。&lt;/p&gt;
&lt;p&gt;这个问题反而让我自己开始思考：面对困难的时候，为什么更倾向于逃避，而不是挑战和面对？&lt;/p&gt;
&lt;h2&gt;困难和逃避&lt;/h2&gt;
&lt;p&gt;想要一点点对这个问题抽丝剥茧，要做的第一步就是，来定义「困难」和「挑战」。这两个词都意味着，面临的事情可能超出处理者当前的能力范畴。比如让一个游泳初学者去横渡长江，让一个厨师学徒工去做满汉全席，让一个幼儿去思索人生的意义，或者让一个工程师去管理一个技术团队。&lt;/p&gt;
&lt;p&gt;逃避可以让当事人避免处理不擅长的事情，不会面临各种碰壁，不会带来灾难，不会给自己带来痛苦，不会在结果不优秀时候受到嘲笑和讥讽。
另外，从技术和实施的角度看，面临不了解或不擅长的领域和事情，也会有无从下手的困苦。&lt;/p&gt;
&lt;p&gt;「好人不长寿，王八活千年」这句谚语也标榜着这种逃避态度。枪打出头鸟，所以只要保持自己低调和保守，不接受挑战，即可以安安稳稳了么？&lt;/p&gt;
&lt;h2&gt;野心和痛苦&lt;/h2&gt;
&lt;p&gt;我发现，在井陉任务管理时候，给予的任务往往会高于执行者的当前能力一点点。原因有二。&lt;/p&gt;
&lt;p&gt;第一，个人所在的组织在发展，面临的挑战一定高于当前的组织能力上限，而这个挑战就会分摊到每个人身上。&lt;/p&gt;
&lt;p&gt;如果所在的团队在挑战更高的目标，那在里面的员工如何能置身事外？除非加入的团队是没有进取的意愿，或者是铁饭碗（垄断企业）。&lt;/p&gt;
&lt;p&gt;第二，个人也需要发展，团队管理者需要考虑到每个成员自身的发展，而不能仅仅给予在当前能力范围的工作。从短期效率上来看，当然是熟悉和在能力范围内的工作可以更快速稳定完成，风险比较小。但是从长期来看，团队的新人能力无法得到提升。整个团队的发展受到限制。&lt;/p&gt;
&lt;p&gt;所以，只要所处的组织是在发展的，每个人都会有比当前能力要求高的挑战。不接受的人就会被其他成长更快的人超越，甚至是取代。上学时候，我们就知道：「学习如逆水行舟，不进则退」。不是自己不进步，而是别人跑的太快。学校如此，社会更是如此。安于现状，不思考变化和成长的人，会被淘汰的越来越快。&lt;/p&gt;
&lt;p&gt;除了外部的要求，从当事人内心自发产生的欲望是更有价值的。Nothing is impossible for a willing heart，这就是我们所说的驱动力，驱动力的强弱和方向，直接决定一个人事业生涯的发展高度和速度。&lt;/p&gt;
&lt;p&gt;我个人是不喜欢「逃离北上广」这种论调的（自然环境的因素另当别论）。在压力和挑战下面，更应当激发自身的潜力、梦想和野心。即便是逃离到二线、三线城市，仅仅是将这种个体之前进步速率的差异值降低而已。如果思想是保守和逃避的，到哪里都是一样的。&lt;/p&gt;
&lt;p&gt;活着就需要面对挑战，挑战是痛苦的，成长又是快乐的。所以，痛快活。&lt;/p&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2014/08/life-with-pain/"&gt;https://blog.log4d.com/2014/08/life-with-pain/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Mon, 11 Aug 2014 21:07:29 +0800</pubDate><guid>tag:blog.log4d.com,2014-08-11:2014/08/life-with-pain/</guid><category>感悟</category></item><item><title>在 Raspberry Pi 上使用 AirPlay</title><link>https://blog.log4d.com/2014/07/raspberrypi-airplay/</link><description>&lt;p&gt;早在去年时候，我就发现有个叫做 &lt;a href="http://www.raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt; 的玩意，
已经忘了是从那里得知这个东西。这个卡片大小的电路板是可以运行
Debian 的主机，提供了一个发挥自己想象的平台。13 年 &lt;a href="http://geekon.geekstack.org/"&gt;南京极客行动&lt;/a&gt;
时候，Michael 好像还拿了一个板子参加比赛。&lt;/p&gt;
&lt;p&gt;&lt;img alt="RaspberryPi.jpg" src="http://77g0h6.com1.z0.glb.clouddn.com/2014/07/RaspberryPi.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;我对这个东西充满了兴趣，仅售 $39 的主机，小巧的机身，
可以充分发挥自己的想象力：离线下载，动作片播放器，家庭分享中心，
给侄子学习编程~想到这些可以发挥自己的创造力，
就迫不及待的要去采购并去尝试。&lt;/p&gt;
&lt;p&gt;不过我还是理智的压抑住自己的情感，手头老是有更重要的事情要去做，实在不能再给自己多找一个精力分散的方向。
于是，我这么一压抑，就压抑了一年。&lt;/p&gt;
&lt;p&gt;后来在 InnoSpae 看到 &lt;a href="http://segmentfault.com/"&gt;SegmentFault&lt;/a&gt; 的姜尚用 &lt;a href="http://www.arduino.cc/"&gt;Arduino&lt;/a&gt;
写了一个播放超级玛丽音乐的程序，又让我重新燃烧起使用硬件创造一些小玩意的热情。&lt;/p&gt;
&lt;p&gt;&lt;img alt="4f42dcf03f067e12fe5c156e2af1373b.image.538x354.jpg" src="http://77g0h6.com1.z0.glb.clouddn.com/2014/07/4f42dcf03f067e12fe5c156e2af1373b.image.538x354.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;碰巧的是，现在有一个非常适合的场景需要这样的工具：前段时间，团队在优化发布流程，也就是将工程师写好的代码发布到正式环境的过程。其中有一个重要环节是需要需求方对提出的功能进行验证。而需求方往往验证的不及时，就需要一个方法来通知需求方。使用 QQ 群效果不好，喊又太累，就想了一个歪主意，在办公室播放音乐。&lt;/p&gt;
&lt;p&gt;简而言之，就是用 Raspberry Pi 播放音乐。几个方案确定之后，发现用 AirPlay 的方式最适合我们：每个人都有控制内容的权利；方案使用方便，一个苹果手机即可；内容来源多，豆瓣、网易、虾米都可以播放。&lt;/p&gt;
&lt;p&gt;分分钟搞定这个方案，一个需要 5 个步骤。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;从淘宝买 RaspBerry Pi、无线网卡、SD 卡。&lt;/li&gt;
&lt;li&gt;从 &lt;a href="http://www.raspberrypi.org/downloads/"&gt;Raspberry Pi Download&lt;/a&gt; 搞一个 Raspbian，然后 &lt;code&gt;dd&lt;/code&gt; 到 SD 卡，看官方文档操作，很详细（Mac 需要考虑使用高速写入 &lt;code&gt;/dev/rdisk1&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;SSH 登录到 &lt;code&gt;pi@192.168.1.x&lt;/code&gt;，&lt;code&gt;git clone https://github.com/juhovh/shairplay.git&lt;/code&gt; 然后阅读 &lt;a href="https://github.com/juhovh/shairplay"&gt;Shairplay&lt;/a&gt; 文档安装&lt;/li&gt;
&lt;li&gt;运行 Shairplay &lt;code&gt;shairplay -a 3DAir&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在 &lt;strong&gt;同一个&lt;/strong&gt; 局域网连着的手机播放音乐，从底向上拉 iPhone 菜单，就会发现多了一个 AirPlay 标记「3DAir」，点击即可播放。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="2014-07-15 19.43.16.jpg" src="http://77g0h6.com1.z0.glb.clouddn.com/2014/07/2014-07-15%2019.43.16.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="2014-07-16 19.25.33.png" src="http://77g0h6.com1.z0.glb.clouddn.com/2014/07/2014-07-16%2019.25.33.png" /&gt;&lt;/p&gt;
&lt;p&gt;哈哈，以后办公室开 Party，周末关怀，生日会什么的，再不不用担心放音乐问题了~&lt;/p&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2014/07/raspberrypi-airplay/"&gt;https://blog.log4d.com/2014/07/raspberrypi-airplay/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Wed, 23 Jul 2014 23:19:50 +0800</pubDate><guid>tag:blog.log4d.com,2014-07-23:2014/07/raspberrypi-airplay/</guid><category>硬件</category><category>RaspberryPi</category></item><item><title>读《如何高效学习》</title><link>https://blog.log4d.com/2014/04/lean-more-study-less/</link><description>&lt;p&gt;&lt;a href="http://book.douban.com/subject/25783654/"&gt;Learn More Study Less（如何高效学习）&lt;/a&gt;
讲的是作者斯科特·扬如何快速学习的方法和技巧。&lt;/p&gt;
&lt;p&gt;我在 Kindle 上面阅读了这本书，并用书中的方法学习这本书，顺便做了一些笔记。&lt;/p&gt;


&lt;h2&gt;A. 目的&lt;/h2&gt;
&lt;p&gt;学习「整体性学习」方法，从而快速学习并且将学到的知识更高效合理的利用起来。&lt;/p&gt;
&lt;p&gt;（所谓聪明，就是指学得更快，而且信息组织非常适合完成自己的目标）。&lt;/p&gt;
&lt;h2&gt;B. 整体性学习的定义&lt;/h2&gt;
&lt;p&gt;知识并非孤立，学习任何知识（概念、定义、公式、问题、观念、理论等）都需要联系。&lt;/p&gt;
&lt;h2&gt;C. 整体性学习的策略&lt;/h2&gt;
&lt;h3&gt;1. 关键元素&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;建立结构（某个领域内，紧密联系的知识），让其中的知识尽可能多的联系。&lt;ul&gt;
&lt;li&gt;通用结构：感知结构（视觉、嗅觉、听觉、味觉、触觉）&lt;/li&gt;
&lt;li&gt;关系结构（群体关系等）&lt;/li&gt;
&lt;li&gt;基础数学结构&lt;/li&gt;
&lt;li&gt;时间结构（@alswl 自己横向扩展想到的）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;利用模型（类似于知识框架和体系以及其他存储方式）&lt;/li&gt;
&lt;li&gt;高速公路（在不同的结构之间进行联系，激发创造力）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;2. 5 个学习的步骤&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;获取&lt;ul&gt;
&lt;li&gt;关键：简化、容量、速度&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;理解&lt;/li&gt;
&lt;li&gt;拓展&lt;ul&gt;
&lt;li&gt;深度拓展：知识的深度，虽花费时间但有效&lt;/li&gt;
&lt;li&gt;横向拓展：知识的周边，有相关性的拓展，需要借助模型&lt;/li&gt;
&lt;li&gt;纵向拓展：跨结构的知识，比喻和内在化是一种手段&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;纠错&lt;/li&gt;
&lt;li&gt;应用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（@alswl 可以想到软件开发中的需求获取、需求分析、需求挖掘、测试、
开发这些对应的另外一个软件开发结构中的联系）&lt;/p&gt;
&lt;h3&gt;3. 5 种信息的类型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;随意信息：死记硬背，联想法、挂钩法、压缩法&lt;/li&gt;
&lt;li&gt;观点信息：存在争议的信息，需要检索信息&lt;/li&gt;
&lt;li&gt;过程信息：多操作就能掌握&lt;/li&gt;
&lt;li&gt;具体信息：通过感官进行联系（医学）&lt;/li&gt;
&lt;li&gt;抽象信息：对知识进行简化、抽象和纠错（化学、计算机）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;4. 快速学习的技术&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;获取知识&lt;ul&gt;
&lt;li&gt;快速阅读：指读法，积极阅读（观点是什么？怎么记住？怎么拓展和运用），一次学会&lt;/li&gt;
&lt;li&gt;笔记流&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;联系观点&lt;ul&gt;
&lt;li&gt;比喻&lt;/li&gt;
&lt;li&gt;内在化：赋予知识情感&lt;/li&gt;
&lt;li&gt;图表法：流程图、概念图和图像&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;随意信息的处理&lt;ul&gt;
&lt;li&gt;联想法&lt;/li&gt;
&lt;li&gt;挂钩法：创造对应和夸张的记忆场景&lt;/li&gt;
&lt;li&gt;信息压缩法：口诀，笔记压缩&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;知识拓展&lt;ul&gt;
&lt;li&gt;实际应用&lt;/li&gt;
&lt;li&gt;模型纠错&lt;/li&gt;
&lt;li&gt;以项目为目的的学习&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;增加能量储备：运动、睡眠、饮食、饮水&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;D. @alswl 拓展&lt;/h2&gt;
&lt;p&gt;哈，文中提到了《春风化雨》这部电影，我记得上次《七周七语言》也提到了它，
决定找个时间去看看了。&lt;/p&gt;
&lt;p&gt;更广泛的能力定义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发现问题的能力&lt;/li&gt;
&lt;li&gt;学习的能力&lt;/li&gt;
&lt;li&gt;时间管理的能力&lt;/li&gt;
&lt;li&gt;沟通协作的能力&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以立刻开始做起来的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指读法&lt;/li&gt;
&lt;li&gt;将这个学习方法用来学 &lt;a href="http://book.douban.com/subject/5977975/"&gt;数学那些事儿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;睡眠、饮食&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2014/04/lean-more-study-less/"&gt;https://blog.log4d.com/2014/04/lean-more-study-less/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Sun, 13 Apr 2014 11:42:47 +0800</pubDate><guid>tag:blog.log4d.com,2014-04-13:2014/04/lean-more-study-less/</guid><category>学海无涯</category><category>读书笔记</category></item><item><title>hiredis 源码学习</title><link>https://blog.log4d.com/2014/03/hiredis/</link><description>&lt;p&gt;前段时间学习 Redis 时候，听到 hiredis 的大名，正好也在做异步的学习，就找来代码学习一下。
我几乎不太会 C，仅限于最简单的语法，完全没有在生产环境中写过，
所以先看个 Client 简单代码，下次看 Memcached 代码应该会更顺畅一些。&lt;/p&gt;
&lt;p&gt;Hiredis 是用 C 写的 Redis 客户端，对 Redis 协议进行了简单的封装，
同时提供了同步和异步的两种 API。Hiredis 的代码位于
&lt;a href="https://github.com/redis/hiredis"&gt;https://github.com/redis/hiredis&lt;/a&gt;。&lt;/p&gt;


&lt;h2&gt;一分钟使用入门&lt;/h2&gt;
&lt;p&gt;同步 API 的调用方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;redisContext&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;redisConnect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6379&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;reply&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;redisCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;SET foo %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;PING: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reply&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;freeReplyObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;redisFree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Redis ae 异步 API 的调用方法，使用 Redis 自己的 ae 事件库，
至于为什么 Redis 没有使用 libevent 或者 libev，可以参考
&lt;a href="http://groups.google.com/group/redis-db/browse_thread/thread/b52814e9ef15b8d0/"&gt;Reason&lt;/a&gt;，
&lt;a href="http://blog.csdn.net/archimedes_zht/article/details/6909074"&gt;中文翻译&lt;/a&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;connectCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;redisAsyncContext&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Connected...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;disconnectCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;redisAsyncContext&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Disconnected...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;getCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;redisAsyncContext&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;privdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;redisReply&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;reply&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reply&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;argv[%s]: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;privdata&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reply&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;redisAsyncDisconnect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;redisAsyncContext&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;redisAsyncConnect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6379&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;aeCreateEventLoop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;redisAeAttach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;redisAsyncSetConnectCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;connectCallback&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;redisAsyncSetDisconnectCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;disconnectCallback&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;redisAsyncCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;getCallback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;end-1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;GET key&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Libev 异步 API 调用，因为 &lt;code&gt;adapters/*.h&lt;/code&gt; 封装的好，所以几乎和 ae 调用一致：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;connectCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;redisAsyncContext&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Connected...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;disconnectCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;redisAsyncContext&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Disconnected...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;getCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;redisAsyncContext&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;privdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;redisReply&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;reply&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reply&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;argv[%s]: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;privdata&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reply&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* Disconnect after receiving the reply to GET */&lt;/span&gt;
    &lt;span class="n"&gt;redisAsyncDisconnect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;redisAsyncContext&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;redisAsyncConnect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6379&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;redisLibevAttach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EV_DEFAULT_&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;redisAsyncSetConnectCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;connectCallback&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;redisAsyncSetDisconnectCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;disconnectCallback&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;redisAsyncCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;getCallback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;end-1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;GET key&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hiredis 还支持使用 libevent，我就不列出来了。&lt;/p&gt;
&lt;p&gt;详细的使用 example 可以看
&lt;a href="https://github.com/redis/hiredis/tree/master/examples"&gt;https://github.com/redis/hiredis/tree/master/examples&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;主要结构&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;redisReply&lt;/li&gt;
&lt;li&gt;redisReader&lt;/li&gt;
&lt;li&gt;redisContext&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;流程&lt;/h2&gt;
&lt;h3&gt;同步连接&lt;/h3&gt;
&lt;p&gt;同步连接的代码在 &lt;code&gt;hiredis.c&lt;/code&gt; 和 &lt;code&gt;net.c&lt;/code&gt; 中。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;redisConnect&lt;/code&gt; / &lt;code&gt;redisConnectWithTimeout&lt;/code&gt; / &lt;code&gt;redisConnectNonBlock&lt;/code&gt; 都调用了
&lt;code&gt;net.c&lt;/code&gt; 里面的 &lt;code&gt;redisContextConnectTcp&lt;/code&gt;。使用 &lt;code&gt;fcntl(fd, F_SETFL, flags)&lt;/code&gt;
设置是否阻塞连接。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;O_NONBLOCK&lt;/code&gt; 即 Socket 非阻塞模式，但仍然是同步的哦。&lt;/p&gt;
&lt;p&gt;事实上，无论阻塞还是非阻塞，hiredis 都会使用非阻塞（poll）来
&lt;code&gt;connect&lt;/code&gt; 连接服务器，会返回 -1，并且 &lt;code&gt;errno&lt;/code&gt;
为 &lt;code&gt;EINPROGRESS&lt;/code&gt;，这是非阻塞模式正常的表现。
为什么阻塞模式也会强制使用非阻塞的 &lt;code&gt;poll&lt;/code&gt; 连接？其实是为了能够支持 timeout 功能。
hiredis 在连接成功之后，按照之前需求重新设定为阻塞或者非阻塞模式。&lt;/p&gt;
&lt;p&gt;关于如何设计超时功能，可以参考 &lt;a href="http://blog.csdn.net/ast_224/article/details/2957294"&gt;http://blog.csdn.net/ast_224/article/details/2957294&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;命令&lt;/h3&gt;
&lt;p&gt;使用 va_list 解决变参问题（C 也支持变长参数，被惊呆了，我果然是 C 盲啊）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;redisFormatCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;va_list&lt;/span&gt; &lt;span class="n"&gt;ap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;va_start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;redisvCommand&lt;/code&gt; 用来执行阻塞Redis 命令，它会调用 &lt;code&gt;__redisBlockForReply&lt;/code&gt;，
内部调用 &lt;code&gt;redisBufferWrite&lt;/code&gt; 从 socket 写 buffer，然后同步等待，从
&lt;code&gt;redisBufferRead&lt;/code&gt; 读数据，用 &lt;code&gt;redisGetReplyFromReader&lt;/code&gt; 解析返回数据。&lt;/p&gt;
&lt;h3&gt;异步连接&lt;/h3&gt;
&lt;p&gt;异步调用的代码在 &lt;code&gt;async.c&lt;/code&gt; 中，我先看 ae 库。&lt;/p&gt;
&lt;p&gt;重要的结构是 &lt;code&gt;redisAsyncContext&lt;/code&gt; 和 &lt;code&gt;redisAeEvents&lt;/code&gt;，前者重要的方法是注册回调函数：
&lt;code&gt;addRead&lt;/code&gt; / &lt;code&gt;delRead&lt;/code&gt; / &lt;code&gt;addWrite&lt;/code&gt; / &lt;code&gt;delWrite&lt;/code&gt;，后者是用来存放 loop / fd / event stream
的。&lt;/p&gt;
&lt;p&gt;异步连接时候，仍然使用 &lt;code&gt;redisContextConnectTcp&lt;/code&gt; 来发起到服务器的非阻塞连接。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;aeCreateEventLoop&lt;/code&gt; 创建一个事件循环，然后使用 &lt;code&gt;redisAeAttach&lt;/code&gt; 给
&lt;code&gt;context&lt;/code&gt; 注册事件，比如说 &lt;code&gt;aeCreateFileEvent(loop,e-&amp;gt;fd,AE_READABLE,redisAeReadEvent,e)&lt;/code&gt;
就注册了一个 &lt;code&gt;read&lt;/code&gt; 事件，并将 callback 调用设置到 &lt;code&gt;redisAeReadEvent&lt;/code&gt;，
&lt;code&gt;redisAeReadEvent&lt;/code&gt; 再将这个事件托管给 &lt;code&gt;redisAsyncHandleRead&lt;/code&gt;（定义在 async.c 里面，
被三个 event 库调用）。&lt;/p&gt;
&lt;p&gt;所以，hiredis 通过 adapter 的封装，屏蔽了 ae / libevent / libev 的 API 差异，
从而可以灵活的选择。据说 ae 是从两个 libevent 库重写过来的，可是我觉得 ae
的风格和 libev 比较像，而 libevent 的风格比较好理解。&lt;/p&gt;
&lt;p&gt;如果拿这段代码的复杂度和 Tornado 的 IOLoop 进行对比，真实感觉 Tornado 那段 API
封装太人性化了，C 的代码写起来好复杂，系统 API、资源控制、错误控制都挺麻烦。&lt;/p&gt;
&lt;p&gt;Redis ae 事件库的分析可以参考 &lt;a href="http://my.oschina.net/u/917596/blog/161077#OSC_h4_6"&gt;http://my.oschina.net/u/917596/blog/161077#OSC_h4_6&lt;/a&gt;。
Libevent 的一个简单教程 &lt;a href="http://www.wangafu.net/~nickm/libevent-book/01_intro.html"&gt;http://www.wangafu.net/~nickm/libevent-book/01_intro.html&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;关于 C&lt;/h2&gt;
&lt;p&gt;作为 C 渣的我，勉强读完 hiredis，感觉那点 C 基础完全不够用，
稍微将学习过程中疑惑的地方罗列一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;IFDEF&lt;/code&gt; 使用，可以防止重复导入同一个头文件定义，这里有一个详细的解释
&lt;a href="http://faculty.cs.niu.edu/~mcmahon/CS241/c241man/node90.html"&gt;http://faculty.cs.niu.edu/~mcmahon/CS241/c241man/node90.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__cplusplus&lt;/code&gt;: C++ 里面定义了这个变量，而 C 没有定义，所以当 C++ 编译器识别
source 时候，通过这个加上 &lt;code&gt;ifdef&lt;/code&gt; 来使用 &lt;code&gt;extern&lt;/code&gt; 编译 C 代码。&lt;/li&gt;
&lt;li&gt;long long: long 只能存放 32 位，long long 可以存放 64 位长度，即 0 - 2^64-1。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;c-&amp;gt;flags |= REDIS_BLOCK&lt;/code&gt; / &lt;code&gt;c-&amp;gt;flags &amp;amp;= ~REDIS_BLOCK;&lt;/code&gt; 简洁的位操作。&lt;/li&gt;
&lt;li&gt;sds（simple dynamic string）是 Redis 自己实现的 C String 字符串结构。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;((void)fd)&lt;/code&gt; 好像是将 fd 指针转成无类型的指针，不知道有什么用处。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.log4d.com/2014/03/hiredis/"&gt;https://blog.log4d.com/2014/03/hiredis/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信号：窥豹&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="http://upload-log4d.qiniudn.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Sun, 30 Mar 2014 15:41:43 +0800</pubDate><guid>tag:blog.log4d.com,2014-03-30:2014/03/hiredis/</guid><category>C</category><category>Redis</category><category>hiredis</category></item></channel></rss>